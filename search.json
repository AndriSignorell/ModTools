[{"path":"https://andrisignorell.github.io/ModTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andri Signorell. Author, maintainer. Bernhard Compton. Contributor. Marcel Dettling. Contributor. Alexandre Hainard. Contributor. Max Kuhn. Contributor. Frédérique Lisacek. Contributor. Michal Majka. Contributor. Markus Müller. Contributor. Dan Putler. Contributor. Jean-Charles Sanchez. Contributor. Natalia Tiberti. Contributor. Natacha Turck. Contributor. Jarek Tuszynski. Contributor. Robin Xavier. Contributor. Achim Zeileis. Contributor.","code":""},{"path":"https://andrisignorell.github.io/ModTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Signorell (2024). ModTools: Tools Building Regression Classification Models. R package version 0.9.12.1, https://github.com/AndriSignorell/ModTools/, https://andrisignorell.github.io/ModTools/.","code":"@Manual{,   title = {ModTools: Tools for Building Regression and Classification Models},   author = {Andri Signorell},   year = {2024},   note = {R package version 0.9.12.1,             https://github.com/AndriSignorell/ModTools/},   url = {https://andrisignorell.github.io/ModTools/}, }"},{"path":"https://andrisignorell.github.io/ModTools/index.html","id":"tools-for-building-regression-and-classification-models","dir":"","previous_headings":"","what":"Tools for Building Regression and Classification Models","title":"Tools for Building Regression and Classification Models","text":"rich selection R packages implementing algorithms classification regression tasks . authors legitimately take liberty tailor function interfaces according taste needs. us users, however, often results struggling user interfaces, rather weird - put mildly - almost always different terms arguments result structures. ModTools pursues goal offering uniform handling important regression classification models applied data analyses. function FitMod() designed simple consistent interface original functions maintaining flexibility pass possible arguments. print, plot, summary predict operations can carried following logic. results reshaped reasonable standard. functions package Google styleguides used naming rules (absence convincing alternatives). ’BigCamelCase’ style consequently applied functions borrowed contributed R packages well. always: Feedback, feature requests, bug reports suggestions welcome! Please report problems GitHub issues tracker (preferred) directly maintainer.","code":""},{"path":"https://andrisignorell.github.io/ModTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Building Regression and Classification Models","text":"can install released version ModTools CRAN : development version GitHub :","code":"install.packages(\"ModTools\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"AndriSignorell/ModTools\")"},{"path":"https://andrisignorell.github.io/ModTools/index.html","id":"warning","dir":"","previous_headings":"","what":"Warning","title":"Tools for Building Regression and Classification Models","text":"Warning: package still development. Although code seems meanwhile quite stable, release version 1.0 aware everything package might subject change. Backward compatibility yet guaranteed. Functions may deleted renamed new syntax may inconsistent earlier versions. release version 1.0 “deprecated-defunct process” installed.","code":""},{"path":"https://andrisignorell.github.io/ModTools/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Tools for Building Regression and Classification Models","text":"Andri Signorell Helsana Versicherungen AG, Health Sciences, Zurich HWZ University Applied Sciences Business Administration Zurich. R community project. can seen fact package includes R source code /documentation previously published various authors contributors. Special thanks go Beat Bruengger, Mathias Frueh, Daniel Wollschlaeger valuable contributions testing. good things come guys, problems likely due tweaking. Thank ! Maintainer: Andri Signorell","code":""},{"path":"https://andrisignorell.github.io/ModTools/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tools for Building Regression and Classification Models","text":"","code":"library(ModTools) demo(bin_mod, package = \"ModTools\") demo(mult_mod, package = \"ModTools\") demo(num_mod, package = \"ModTools\")"},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":null,"dir":"Reference","previous_headings":"","what":"Best Cutpoint for a ROC Curve  — BestCut","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"Returns best cutpoint given classification model.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"","code":"BestCut(x, method = c(\"youden\", \"closest.topleft\"))"},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"x roc object roc function method one \"youden\" \"closest.topleft\", controls   optimal threshold determined. See details.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"method argument controls   optimal threshold determined. 'youden' Youden's J statistic (Youden, 1950) employed. optimal cut-threshold       maximizes distance identity (diagonal) line. Can       shortened “y”. optimality criterion :       $$max(sensitivities + specificities)$$ 'closest.topleft' optimal threshold point closest top-left part       plot perfect sensitivity specificity. Can shortened       “c” “t”. optimality criterion :       $$min((1 - sensitivities)^2 + (1- specificities)^2)$$","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"threshold value","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"Xavier Robin, Natacha Turck, Alexandre Hainard, et al.   (2011) “pROC: open-source package R S+ analyze   compare ROC curves”. BMC Bioinformatics, 7, 77.   doi:10.1186/1471-2105-12-77 .","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"Robin Xavier <pROC-cran@xavier.robin.name>, Andri Signorell <andri@signorell.net> (interface)","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/BestCut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Best Cutpoint for a ROC Curve  — BestCut","text":"","code":"r.glm <- FitMod(diabetes ~ ., data = d.pima, fitfn=\"logit\")  ROC(r.glm) #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #>  #> Call: #> roc.default(response = Response(x), predictor = predict(x, type = \"prob\")[,     2], plot = FALSE) #>  #> Data: predict(x, type = \"prob\")[, 2] in 500 controls (Response(x) neg) < 268 cases (Response(x) pos). #> Area under the curve: 0.8394 BestCut(ROC(r.glm)) #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #>   threshold specificity sensitivity  #>   0.3536825   0.7840000   0.7388060"},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Breusch-Pagan Test — BreuschPaganTest","title":"Breusch-Pagan Test — BreuschPaganTest","text":"Performs Breusch-Pagan test heteroskedasticity.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breusch-Pagan Test — BreuschPaganTest","text":"","code":"BreuschPaganTest(formula, varformula = NULL, studentize = TRUE, data = list())"},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breusch-Pagan Test — BreuschPaganTest","text":"formula symbolic description model tested     (fitted \"lm\" object). varformula formula describing potential explanatory variables    variance (dependent variable needed). default    explanatory variables taken main regression model. studentize logical. set TRUE Koenker's studentized    version test statistic used. data optional data frame containing variables model. default variables taken environment BreuschPaganTest called .","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Breusch-Pagan Test — BreuschPaganTest","text":"Breusch-Pagan test fits linear regression model residuals linear regression model (default explanatory variables taken main regression model) rejects much variance explained additional explanatory variables. \\(H_0\\) test statistic Breusch-Pagan test follows chi-squared distribution parameter (number regressors without constant model) degrees freedom. Examples can found page, also help pages data sets bondyield, currencysubstitution, growthofmoney, moneydemand,  unemployment, wages.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Breusch-Pagan Test — BreuschPaganTest","text":"list class \"htest\" containing following components: statistic value test statistic. p.value p-value test. parameter degrees freedom. method character string indicating type test     performed. data.name character string giving name(s) data.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Breusch-Pagan Test — BreuschPaganTest","text":"T.S. Breusch & .R. Pagan (1979), Simple Test Heteroscedasticity Random Coefficient Variation. Econometrica 47, 1287–1294 R. Koenker (1981), Note Studentizing Test Heteroscedasticity. Journal Econometrics 17, 107–112. W. Kraemer & H. Sonnberger (1986), Linear Regression Model Test. Heidelberg: Physica","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Breusch-Pagan Test — BreuschPaganTest","text":"Achim Zeileis <Achim.Zeileis@R-project.org>","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/BreuschPaganTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breusch-Pagan Test — BreuschPaganTest","text":"","code":"## generate a regressor x <- rep(c(-1,1), 50)  ## generate heteroskedastic and homoskedastic disturbances err1 <- rnorm(100, sd=rep(c(1,2), 50)) err2 <- rnorm(100)  ## generate a linear relationship y1 <- 1 + x + err1 y2 <- 1 + x + err2  ## perform Breusch-Pagan test BreuschPaganTest(y1 ~ x) #>  #> \tstudentized Breusch-Pagan test #>  #> data:  y1 ~ x #> BP = 7.2534, df = 1, p-value = 0.007077 #>  BreuschPaganTest(y2 ~ x) #>  #> \tstudentized Breusch-Pagan test #>  #> data:  y2 ~ x #> BP = 3.9268e-05, df = 1, p-value = 0.995 #>"},{"path":"https://andrisignorell.github.io/ModTools/reference/CP.html","id":null,"dir":"Reference","previous_headings":"","what":"Complexity Parameter of an rpart Model  — CP","title":"Complexity Parameter of an rpart Model  — CP","text":"Extracts, prints plots complexity table rpart model.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complexity Parameter of an rpart Model  — CP","text":"","code":"CP(x, ...)  # S3 method for class 'CP' print(x, digits = getOption(\"digits\") - 2L, ...) # S3 method for class 'CP' plot(x, minline = TRUE, lty = 3, col = 1,      upper = c(\"size\", \"splits\", \"none\"), ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/CP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complexity Parameter of an rpart Model  — CP","text":"x fitted model object class \"rpart\". assumed result function produces object named components returned rpart function. digits number digits numbers print. minline whether horizontal line drawn 1SE minimum curve. lty line type line col colour line upper plotted top axis: size tree (number leaves) (\"size\"), number splits (\"splits\") nothing (\"none\"). ... arguments passed print plot","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complexity Parameter of an rpart Model  — CP","text":"complexity parameter table hidden deep entrails rpart result object, convenient function extract .","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complexity Parameter of an rpart Model  — CP","text":"list containing following components: cp complexity table x rpart object","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Complexity Parameter of an rpart Model  — CP","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/CP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complexity Parameter of an rpart Model  — CP","text":"","code":"r.rp <- FitMod(diabetes ~ ., d.pima, fitfn=\"rpart\")  CP(r.rp) #>  #> Classification tree: #> rpart(formula = diabetes ~ ., data = d.pima, model = TRUE, y = TRUE) #>  #> Variables actually used in tree construction: #> [1] age      glucose  insulin  mass     pedigree pregnant pressure #>  #> Root node error: 268/768 = 0.34896 #>  #> n= 768  #>  #>         CP nsplit rel error  xerror     xstd #> 1 0.242537      0   1.00000 1.00000 0.049288 #> 2 0.104478      1   0.75746 0.79851 0.046360 #> 3 0.017413      2   0.65299 0.70149 0.044461 #> 4 0.014925      5   0.60075 0.74627 0.045381 #> 5 0.013060      9   0.54104 0.73881 0.045233 #> 6 0.011194     12   0.49254 0.74627 0.045381 #> 7 0.010000     15   0.45896 0.74627 0.045381 #>  plot(CP(r.rp))"},{"path":"https://andrisignorell.github.io/ModTools/reference/CoeffDiffCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","title":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","text":"Calculate confidence interval difference two coefficients linear model.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CoeffDiffCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","text":"","code":"CoeffDiffCI(x, coeff, conf.level = 0.95, sides = c(\"two.sided\", \"left\", \"right\"))"},{"path":"https://andrisignorell.github.io/ModTools/reference/CoeffDiffCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","text":"x linear model object coeff vector length two, containing either names index two coefficients whose difference used conf.level confidence level interval. sides character string specifying side confidence interval, must one \"two.sided\" (default), \"left\" \"right\". can specify just initial letter. \"left\" analogue hypothesis \"greater\" t.test.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CoeffDiffCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","text":"quite useful course modelling process.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CoeffDiffCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","text":"numeric vector 3 elements: mean mean lwr.ci lower bound confidence interval upr.ci upper bound confidence interval","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/CoeffDiffCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/CoeffDiffCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval for the Difference of Two Coefficients in a Linear Model  — CoeffDiffCI","text":"","code":"# get some model first... r.lm <- FitMod(Fertility ~ ., data=swiss, fitfn=\"lm\")  # calculate the confidence interval for the difference of the # coefficients Examination and Education CoeffDiffCI(r.lm, c(\"Examination\", \"Education\")) #>       diff     lwr.ci     upr.ci  #> -0.6129318 -1.4017814  0.1759177   # the test could be calculated as car::linearHypothesis(r.lm, \"Education = Examination\") #> Linear hypothesis test #>  #> Hypothesis: #> - Examination  + Education = 0 #>  #> Model 1: restricted model #> Model 2: Fertility ~ Agriculture + Examination + Education + Catholic +  #>     Infant.Mortality #>  #>   Res.Df    RSS Df Sum of Sq      F Pr(>F) #> 1     42 2231.5                            #> 2     41 2105.0  1    126.42 2.4623 0.1243"},{"path":"https://andrisignorell.github.io/ModTools/reference/FitMod.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for Several Model Functions — FitMod","title":"Wrapper for Several Model Functions — FitMod","text":"Popular implementations algorithms characterized partly unconventional implementations operating standards R. example, function e1071::SVM() returns predicted values attributes! FitMod() designed wrapping function offer consistent interface selection often used classification regression models.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/FitMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for Several Model Functions — FitMod","text":"","code":"FitMod(formula, data, ..., subset, na.action = na.pass, fitfn = NULL)  # S3 method for class 'FitMod' predict(object, ...) # S3 method for class 'FitMod' plot(x, ...) # S3 method for class 'FitMod' summary(object, ...) # S3 method for class 'FitMod' drop1(object, ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/FitMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for Several Model Functions — FitMod","text":"x fitted object class \"FitMod\". formula formula expression classification regression models, form response ~ predictors. response factor matrix K columns, interpreted counts K classes. See documentation formula() details. data optional data frame interpret variables occurring formula. subset expression saying subset rows data used fit. observations included default. na.action function filter missing data. fitfn code fitting function used regression classifying. far implemented : lm, lmrob, poisson, quasipoisson, gamma, negbin, poisson, polr, tobit, zeroinfl, multinom, poisson, rpart, randomForest, logit, nnet, C5.0, lda, qda, svm, naive_bayes, lb. object model object. ... arguments passed underlying functions.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/FitMod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper for Several Model Functions — FitMod","text":"function general return original object, extended class FitMod, allows capture output plot routines. classifying algorithms minimum offer predicting options type = c(\"class\", \"prob\") additionally implemented underlying function.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/FitMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for Several Model Functions — FitMod","text":"model object returned calculating function extended FitMod class.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/FitMod.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrapper for Several Model Functions — FitMod","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/FitMod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for Several Model Functions — FitMod","text":"","code":"r.lm <- FitMod(Fertility ~ ., data=swiss, fitfn=\"lm\")  r.logit <- FitMod(diabetes ~ glucose + pressure + mass + age,                   data=d.pima, fitfn=\"logit\") r.svm <- FitMod(diabetes ~ glucose + pressure + mass + age,                   data=d.pima, fitfn=\"svm\")"},{"path":"https://andrisignorell.github.io/ModTools/reference/LeafRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","title":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","text":"Return frequencies correct wrong classifications given node(s) tabular form. 'purity', denoting relative frequency correctly classified elements, useful information interpretation regression classification trees measure quality.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LeafRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","text":"","code":"LeafRates(x)  # S3 method for class 'LeafRates' plot(x, col = NULL, which = c(\"rel\", \"abs\"),                          layout = NULL, ylim = NULL, ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/LeafRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","text":"x fitted model object class rpart. col color bars plot one \"rel\" \"abs\", denoting whether relative absolute frequencies used plot. layout vector defining layout ylim y limits plot. ... arguments (used).","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LeafRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","text":"result comprises absolute relative frequencies per leaf.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LeafRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","text":"list 5 elements consisting : node node id (leaf) freq absolute frequency correct wrong classifications p.row relative frequency correct wrong classifications mfreq total number cases mperc percentage sample leaf","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LeafRates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/LeafRates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leafrates for the Nodes of an 'rpart' Tree  — LeafRates","text":"","code":"r.rp <- FitMod(Species ~ ., data=iris, fitfn=\"rpart\") LeafRates(r.rp) #>        freq          perc          total         #> node   right  wrong  right  wrong  abs    perc   #>                                                  #> 2      50     0      100.0% 0.0%   50     33.3%  #> 6      49     5      90.7%  9.3%   54     36.0%  #> 7      45     1      97.8%  2.2%   46     30.7%   plot(LeafRates(r.rp))"},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":null,"dir":"Reference","previous_headings":"","what":"LogitBoost Classification Algorithm — LogitBoost","title":"LogitBoost Classification Algorithm — LogitBoost","text":"Train logitboost classification algorithm using decision   stumps (one node decision trees) weak learners.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LogitBoost Classification Algorithm — LogitBoost","text":"","code":"LogitBoost(x, ...)  # S3 method for class 'formula' LogitBoost(formula, data, ..., subset, na.action)  # Default S3 method LogitBoost(x, y, nIter=ncol(x), ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogitBoost Classification Algorithm — LogitBoost","text":"formula formula expression regression models, form response ~ predictors. response factor matrix K columns, interpreted counts K classes. See documentation formula() details. data optional data frame interpret variables occurring formula. ... additional arguments nnet subset expression saying subset rows data used fit. observations included default. na.action function filter missing data. x matrix data frame training data. Rows contain samples     columns contain features y Class labels training data samples.     response vector one label row/component xlearn.     Can either factor, string numeric vector. nIter integer, describing number iterations      boosting run, number decision stumps      used.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LogitBoost Classification Algorithm — LogitBoost","text":"function adapted logitboost.R function written Marcel   Dettling. See references \"See Also\" section. code modified   order make much faster large data sets. speed-  achieved implementing internal version decision stump classifier   instead using calls rpart. way, time   consuming operations precomputed , instead performing   iteration. Another difference training testing phases   classification process split separate functions.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LogitBoost Classification Algorithm — LogitBoost","text":"object class \"LogitBoost\" including components: Stump List decision stumps (one node decision trees) used: column 1: feature numbers stump, column stump        operates column 2: threshold used column column 3: bigger/smaller info: 1 means values column        threshold corresponding samples labeled        lablist[1]. Value \"-1\" means opposite. two classes, several \"Stumps\"     cbind'ed lablist names class","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LogitBoost Classification Algorithm — LogitBoost","text":"Dettling Buhlmann (2002), Boosting Tumor Classification Gene     Expression Data.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"LogitBoost Classification Algorithm — LogitBoost","text":"Jarek Tuszynski (SAIC) jaroslaw.w.tuszynski@saic.com","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/LogitBoost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LogitBoost Classification Algorithm — LogitBoost","text":"","code":"# basic interface r.lb <- LogitBoost(Species ~ ., data=iris, nIter=20) pred <- predict(r.lb) prob <- predict(r.lb, type=\"prob\") d.res <- data.frame(pred, prob) d.res[1:10, ] #>      pred setosa  versicolor    virginica #> 1  setosa      1 0.017986210 1.522998e-08 #> 2  setosa      1 0.002472623 3.353501e-04 #> 3  setosa      1 0.017986210 8.315280e-07 #> 4  setosa      1 0.002472623 4.539787e-05 #> 5  setosa      1 0.017986210 1.522998e-08 #> 6  setosa      1 0.017986210 1.522998e-08 #> 7  setosa      1 0.017986210 8.315280e-07 #> 8  setosa      1 0.017986210 1.522998e-08 #> 9  setosa      1 0.002472623 3.353501e-04 #> 10 setosa      1 0.002472623 4.539787e-05  # accuracy increases with nIter (at least for train set) table(predict(r.lb, iris, type=\"class\", nIter= 2), iris$Species) #>              #>              setosa versicolor virginica #>   setosa         48          0         0 #>   versicolor      0         45         1 #>   virginica       0          3        45 table(predict(r.lb, iris, type=\"class\", nIter=10), iris$Species) #>              #>              setosa versicolor virginica #>   setosa         50          0         0 #>   versicolor      0         47         0 #>   virginica       0          1        47 table(predict(r.lb, iris, type=\"class\"),           iris$Species) #>              #>              setosa versicolor virginica #>   setosa         50          0         0 #>   versicolor      0         49         0 #>   virginica       0          0        48  # example of spliting the data into train and test set d.set <- SplitTrainTest(iris) r.lb <- LogitBoost(Species ~ ., data=d.set$train, nIter=10) table(predict(r.lb, d.set$test, type=\"class\", nIter=2), d.set$test$Species) #>              #>              setosa versicolor virginica #>   setosa          2          0         0 #>   versicolor      0          1         0 #>   virginica       0          1         9 table(predict(r.lb, d.set$test, type=\"class\"),          d.set$test$Species) #>              #>              setosa versicolor virginica #>   setosa          3          0         0 #>   versicolor      0          3         0 #>   virginica       0          0         9"},{"path":"https://andrisignorell.github.io/ModTools/reference/ModTools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression and Classification Tools — ModTools-package","title":"Regression and Classification Tools — ModTools-package","text":"rich selection R packages implementing algorithms classification regression tasks . authors legitimately take liberty tailor function interfaces according taste  needs. us users, however, often results struggling user interfaces, rather weird - put mildly - almost always different terms arguments result structures. ModTools pursues goal offering uniform handling important regression classification models applied data analyses. function FitMod() designed simple consistent interface original functions maintaining flexibility pass possible arguments. print, plot, summary predict operations can carried following logic. results reshaped reasonable standard. functions package Google styleguides used naming rules (absence convincing alternatives). 'BigCamelCase' style consequently applied functions borrowed contributed R packages well. always: Feedback, feature requests, bugreports suggestions welcome!","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ModTools-package.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Regression and Classification Tools — ModTools-package","text":"package still development. aware everything package might subject change. Backward compatibility yet guaranteed. Functions may deleted renamed new syntax may inconsistent earlier versions. release version 1.0 \"deprecated-defunct process\" installed.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ModTools-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression and Classification Tools — ModTools-package","text":"ModTools::FitMod()) function comprises interfaces following models:","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ModTools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Regression and Classification Tools — ModTools-package","text":"Andri Signorell Helsana Versicherungen AG, Health Sciences, Zurich HWZ University Applied Sciences Business Administration Zurich. Includes R source code /documentation previously published (alphabetical order):  Bernhard Compton, Marcel Dettling, Max Kuhn, Michal Majka, Dan Putler, Jarek Tuszynski, Robin Xavier, Achim Zeileis good things come guys, problems likely due tweaking. Thank ! Maintainer: Andri Signorell <andri@signorell.net>","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ModTools-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression and Classification Tools — ModTools-package","text":"","code":"r.swiss <- FitMod(Fertility ~ ., swiss, fitfn=\"lm\") r.swiss #>  #> Call: #> lm(formula = Fertility ~ ., data = swiss) #>  #> Coefficients: #>      (Intercept)       Agriculture       Examination         Education   #>          66.9152           -0.1721           -0.2580           -0.8709   #>         Catholic  Infant.Mortality   #>           0.1041            1.0770   #>  # PlotTA(r.swiss) # PlotQQNorm(r.swiss)   ## Count models  data(housing, package=\"MASS\")  # poisson count r.pois <- FitMod(Freq ~ Infl*Type*Cont + Sat, family=poisson, data=housing, fitfn=\"poisson\")  # negative binomial count r.nb <- FitMod(Freq ~ Infl*Type*Cont + Sat, data=housing, fitfn=\"negbin\") summary(r.nb) #>  #> Call: #> glm.nb(formula = Freq ~ Infl * Type * Cont + Sat, data = housing,  #>     init.theta = 11.58904011, link = log) #>  #> Coefficients: #>                                   Estimate Std. Error z value Pr(>|z|)     #> (Intercept)                        3.14037    0.20801  15.097  < 2e-16 *** #> InflMedium                         0.26615    0.28836   0.923 0.356028     #> InflHigh                          -0.25336    0.30111  -0.841 0.400113     #> TypeApartment                      0.39532    0.28603   1.382 0.166945     #> TypeAtrium                        -0.77634    0.32149  -2.415 0.015742 *   #> TypeTerrace                       -0.80653    0.32296  -2.497 0.012515 *   #> ContHigh                          -0.02395    0.29474  -0.081 0.935244     #> Sat.L                              0.16860    0.07525   2.240 0.025070 *   #> Sat.Q                              0.25749    0.07821   3.292 0.000994 *** #> InflMedium:TypeApartment          -0.12807    0.39875  -0.321 0.748082     #> InflHigh:TypeApartment             0.15140    0.41087   0.368 0.712507     #> InflMedium:TypeAtrium             -0.41265    0.45633  -0.904 0.365849     #> InflHigh:TypeAtrium               -0.13006    0.47471  -0.274 0.784108     #> InflMedium:TypeTerrace             0.01666    0.44423   0.038 0.970080     #> InflHigh:TypeTerrace              -0.06969    0.47429  -0.147 0.883177     #> InflMedium:ContHigh               -0.12632    0.41042  -0.308 0.758256     #> InflHigh:ContHigh                 -0.59072    0.44424  -1.330 0.183609     #> TypeApartment:ContHigh             0.52179    0.40019   1.304 0.192281     #> TypeAtrium:ContHigh                0.71556    0.43760   1.635 0.102013     #> TypeTerrace:ContHigh               1.15028    0.43270   2.658 0.007852 **  #> InflMedium:TypeApartment:ContHigh  0.01178    0.56001   0.021 0.983224     #> InflHigh:TypeApartment:ContHigh    0.13235    0.59111   0.224 0.822837     #> InflMedium:TypeAtrium:ContHigh     0.14135    0.62032   0.228 0.819752     #> InflHigh:TypeAtrium:ContHigh       0.42364    0.65770   0.644 0.519496     #> InflMedium:TypeTerrace:ContHigh   -0.51739    0.60483  -0.855 0.392307     #> InflHigh:TypeTerrace:ContHigh     -0.49705    0.66522  -0.747 0.454946     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for Negative Binomial(11.589) family taken to be 1) #>  #>     Null deviance: 275.558  on 71  degrees of freedom #> Residual deviance:  67.887  on 46  degrees of freedom #> AIC: 535.29 #>  #> Number of Fisher Scoring iterations: 1 #>  #>  #>               Theta:  11.59  #>           Std. Err.:  2.92  #>  #>  2 x log-likelihood:  -481.289   r.log <- FitMod(log(Freq) ~ Infl*Type*Cont + Sat, data=housing, fitfn=\"lm\") summary(r.log) #>  #> Call: #> lm(formula = log(Freq) ~ Infl * Type * Cont + Sat, data = housing) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.90539 -0.22284  0.01119  0.18857  0.96514  #>  #> Coefficients: #>                                    Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                        3.140416   0.267518  11.739 1.95e-15 *** #> InflMedium                         0.259891   0.378328   0.687   0.4956     #> InflHigh                          -0.379083   0.378328  -1.002   0.3216     #> TypeApartment                      0.219444   0.378328   0.580   0.5647     #> TypeAtrium                        -0.785497   0.378328  -2.076   0.0435 *   #> TypeTerrace                       -0.931069   0.378328  -2.461   0.0177 *   #> ContHigh                          -0.075612   0.378328  -0.200   0.8425     #> Sat.L                              0.199559   0.094582   2.110   0.0403 *   #> Sat.Q                              0.199376   0.094582   2.108   0.0405 *   #> InflMedium:TypeApartment           0.048725   0.535036   0.091   0.9278     #> InflHigh:TypeApartment             0.398374   0.535036   0.745   0.4603     #> InflMedium:TypeAtrium             -0.400214   0.535036  -0.748   0.4583     #> InflHigh:TypeAtrium                0.002462   0.535036   0.005   0.9963     #> InflMedium:TypeTerrace             0.143412   0.535036   0.268   0.7899     #> InflHigh:TypeTerrace               0.154151   0.535036   0.288   0.7746     #> InflMedium:ContHigh               -0.105500   0.535036  -0.197   0.8446     #> InflHigh:ContHigh                 -0.737873   0.535036  -1.379   0.1745     #> TypeApartment:ContHigh             0.697935   0.535036   1.304   0.1986     #> TypeAtrium:ContHigh                0.763012   0.535036   1.426   0.1606     #> TypeTerrace:ContHigh               1.114096   0.535036   2.082   0.0429 *   #> InflMedium:TypeApartment:ContHigh -0.141229   0.756655  -0.187   0.8528     #> InflHigh:TypeApartment:ContHigh    0.087753   0.756655   0.116   0.9082     #> InflMedium:TypeAtrium:ContHigh     0.060731   0.756655   0.080   0.9364     #> InflHigh:TypeAtrium:ContHigh       0.503181   0.756655   0.665   0.5094     #> InflMedium:TypeTerrace:ContHigh   -0.531148   0.756655  -0.702   0.4862     #> InflHigh:TypeTerrace:ContHigh     -0.296310   0.756655  -0.392   0.6972     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.4634 on 46 degrees of freedom #> Multiple R-squared:  0.751,\tAdjusted R-squared:  0.6157  #> F-statistic: 5.551 on 25 and 46 DF,  p-value: 2.796e-07 #>   r.ols <- FitMod(Freq ~ Infl*Type*Cont + Sat, data=housing, fitfn=\"lm\") summary(r.ols) #>  #> Call: #> lm(formula = Freq ~ Infl * Type * Cont + Sat, data = housing) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -22.4861  -5.2361  -0.1944   3.5347  27.0556  #>  #> Coefficients: #>                                     Estimate Std. Error t value Pr(>|t|)    #> (Intercept)                        2.333e+01  7.076e+00   3.298  0.00189 ** #> InflMedium                         7.333e+00  1.001e+01   0.733  0.46737    #> InflHigh                          -4.333e+00  1.001e+01  -0.433  0.66700    #> TypeApartment                      1.033e+01  1.001e+01   1.033  0.30717    #> TypeAtrium                        -1.267e+01  1.001e+01  -1.266  0.21195    #> TypeTerrace                       -1.300e+01  1.001e+01  -1.299  0.20037    #> ContHigh                          -1.680e-14  1.001e+01   0.000  1.00000    #> Sat.L                              2.976e+00  2.502e+00   1.190  0.24034    #> Sat.Q                              5.835e+00  2.502e+00   2.332  0.02412 *  #> InflMedium:TypeApartment          -1.667e+00  1.415e+01  -0.118  0.90676    #> InflHigh:TypeApartment             3.333e+00  1.415e+01   0.236  0.81483    #> InflMedium:TypeAtrium             -8.667e+00  1.415e+01  -0.612  0.54328    #> InflHigh:TypeAtrium                1.000e+00  1.415e+01   0.071  0.94397    #> InflMedium:TypeTerrace            -4.000e+00  1.415e+01  -0.283  0.77871    #> InflHigh:TypeTerrace               1.667e+00  1.415e+01   0.118  0.90676    #> InflMedium:ContHigh               -4.000e+00  1.415e+01  -0.283  0.77871    #> InflHigh:ContHigh                 -8.667e+00  1.415e+01  -0.612  0.54328    #> TypeApartment:ContHigh             2.200e+01  1.415e+01   1.555  0.12689    #> TypeAtrium:ContHigh                1.033e+01  1.415e+01   0.730  0.46897    #> TypeTerrace:ContHigh               2.067e+01  1.415e+01   1.460  0.15098    #> InflMedium:TypeApartment:ContHigh  2.333e+00  2.001e+01   0.117  0.90769    #> InflHigh:TypeApartment:ContHigh   -1.200e+01  2.001e+01  -0.600  0.55171    #> InflMedium:TypeAtrium:ContHigh     3.000e+00  2.001e+01   0.150  0.88150    #> InflHigh:TypeAtrium:ContHigh       3.667e+00  2.001e+01   0.183  0.85544    #> InflMedium:TypeTerrace:ContHigh   -8.667e+00  2.001e+01  -0.433  0.66700    #> InflHigh:TypeTerrace:ContHigh     -1.167e+01  2.001e+01  -0.583  0.56278    #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 12.26 on 46 degrees of freedom #> Multiple R-squared:  0.6882,\tAdjusted R-squared:  0.5187  #> F-statistic: 4.061 on 25 and 46 DF,  p-value: 1.939e-05 #>   r.gam <- FitMod(Freq ~ Infl*Type*Cont + Sat, data=housing, fitfn=\"gamma\") summary(r.gam) #>  #> Call: #> glm(formula = Freq ~ Infl * Type * Cont + Sat, family = \"Gamma\",  #>     data = housing) #>  #> Coefficients: #>                                     Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                        4.355e-02  1.143e-02   3.809 0.000412 *** #> InflMedium                        -1.005e-02  1.433e-02  -0.702 0.486503     #> InflHigh                           9.653e-03  1.811e-02   0.533 0.596679     #> TypeApartment                     -1.288e-02  1.386e-02  -0.929 0.357851     #> TypeAtrium                         5.053e-02  2.761e-02   1.830 0.073681 .   #> TypeTerrace                        5.354e-02  2.835e-02   1.889 0.065241 .   #> ContHigh                          -1.378e-17  1.615e-02   0.000 1.000000     #> Sat.L                             -3.211e-03  3.155e-03  -1.018 0.314213     #> Sat.Q                             -9.144e-03  4.197e-03  -2.179 0.034492 *   #> InflMedium:TypeApartment           5.915e-03  1.766e-02   0.335 0.739147     #> InflHigh:TypeApartment            -8.770e-03  2.134e-02  -0.411 0.683073     #> InflMedium:TypeAtrium              2.340e-02  4.077e-02   0.574 0.568768     #> InflHigh:TypeAtrium                3.286e-02  4.794e-02   0.685 0.496500     #> InflMedium:TypeTerrace            -1.346e-02  3.553e-02  -0.379 0.706642     #> InflHigh:TypeTerrace               2.393e-02  4.718e-02   0.507 0.614453     #> InflMedium:ContHigh                4.784e-03  2.086e-02   0.229 0.819606     #> InflHigh:ContHigh                  4.389e-02  3.364e-02   1.305 0.198497     #> TypeApartment:ContHigh            -1.121e-02  1.856e-02  -0.604 0.548836     #> TypeAtrium:ContHigh               -4.583e-02  3.247e-02  -1.412 0.164758     #> TypeTerrace:ContHigh              -6.393e-02  3.174e-02  -2.014 0.049831 *   #> InflMedium:TypeApartment:ContHigh -1.765e-03  2.412e-02  -0.073 0.941979     #> InflHigh:TypeApartment:ContHigh   -3.385e-02  3.662e-02  -0.924 0.360209     #> InflMedium:TypeAtrium:ContHigh    -1.225e-02  4.752e-02  -0.258 0.797727     #> InflHigh:TypeAtrium:ContHigh      -5.532e-02  6.091e-02  -0.908 0.368570     #> InflMedium:TypeTerrace:ContHigh    3.236e-02  4.143e-02   0.781 0.438774     #> InflHigh:TypeTerrace:ContHigh      1.462e-02  6.501e-02   0.225 0.823077     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for Gamma family taken to be 0.2163103) #>  #>     Null deviance: 38.140  on 71  degrees of freedom #> Residual deviance: 10.671  on 46  degrees of freedom #> AIC: 538.18 #>  #> Number of Fisher Scoring iterations: 6 #>   r.gami <- FitMod(Freq ~ Infl*Type*Cont + Sat, data=housing, fitfn=\"gamma\", link=\"identity\") summary(r.gami) #>  #> Call: #> glm(formula = Freq ~ Infl * Type * Cont + Sat, family = function ()  #> Gamma(link = identity), data = housing) #>  #> Coefficients: #>                                   Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                        23.3635     5.7553   4.060 0.000189 *** #> InflMedium                          7.1563     9.5281   0.751 0.456438     #> InflHigh                           -7.2034     6.9307  -1.039 0.304079     #> TypeApartment                      12.6892    10.6939   1.187 0.241486     #> TypeAtrium                        -11.1942     6.3987  -1.749 0.086883 .   #> TypeTerrace                       -10.9532     6.4273  -1.704 0.095097 .   #> ContHigh                           -1.6216     7.8406  -0.207 0.837058     #> Sat.L                               4.9368     1.4858   3.323 0.001755 **  #> Sat.Q                               3.2415     1.1421   2.838 0.006731 **  #> InflMedium:TypeApartment           -3.4540    16.4721  -0.210 0.834835     #> InflHigh:TypeApartment              1.4504    13.6446   0.106 0.915810     #> InflMedium:TypeAtrium              -9.2801    10.1778  -0.912 0.366629     #> InflHigh:TypeAtrium                 3.5471     7.6884   0.461 0.646714     #> InflMedium:TypeTerrace             -4.5638    10.5680  -0.432 0.667870     #> InflHigh:TypeTerrace                2.9450     7.6893   0.383 0.703488     #> InflMedium:ContHigh                -3.5733    12.5840  -0.284 0.777715     #> InflHigh:ContHigh                  -7.1152     8.8705  -0.802 0.426610     #> TypeApartment:ContHigh             22.5209    18.6701   1.206 0.233888     #> TypeAtrium:ContHigh                11.5520     9.9375   1.162 0.251043     #> TypeTerrace:ContHigh               22.9328    11.8581   1.934 0.059288 .   #> InflMedium:TypeApartment:ContHigh   0.9018    27.5339   0.033 0.974015     #> InflHigh:TypeApartment:ContHigh   -13.2180    21.9476  -0.602 0.549965     #> InflMedium:TypeAtrium:ContHigh      2.3032    14.8708   0.155 0.877591     #> InflHigh:TypeAtrium:ContHigh        0.3769    11.2392   0.034 0.973392     #> InflMedium:TypeTerrace:ContHigh    -8.8401    16.8767  -0.524 0.602931     #> InflHigh:TypeTerrace:ContHigh     -14.3587    12.7806  -1.123 0.267063     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for Gamma family taken to be 0.1923107) #>  #>     Null deviance: 38.1400  on 71  degrees of freedom #> Residual deviance:  9.0822  on 46  degrees of freedom #> AIC: 526.3 #>  #> Number of Fisher Scoring iterations: 14 #>   old <-options(digits=3) TMod(r.pois, r.nb, r.log, r.ols, r.gam, r.gami) #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> Waiting for profiling to be done... #> Waiting for profiling to be done... #>                                 coef   r.pois         r.nb       r.log     #> 1                        (Intercept)    3.136 ***    3.140 ***   3.140 *** #> 2                         InflMedium    0.273 .      0.266       0.260     #> 3                           InflHigh   -0.205       -0.253      -0.379     #> 4                      TypeApartment    0.367 *      0.395       0.219     #> 5                         TypeAtrium   -0.783 ***   -0.776 *    -0.785 *   #> 6                        TypeTerrace   -0.815 ***   -0.807 *    -0.931 *   #> 7                           ContHigh    1.409e-15   -0.024      -0.076     #> 8                              Sat.L    0.116 **     0.169 *     0.200 *   #> 9                              Sat.Q    0.263 ***    0.257 ***   0.199 *   #> 10          InflMedium:TypeApartment   -0.118       -0.128       0.049     #> 11            InflHigh:TypeApartment    0.175        0.151       0.398     #> 12             InflMedium:TypeAtrium   -0.407       -0.413      -0.400     #> 13               InflHigh:TypeAtrium   -0.169       -0.130       0.002     #> 14            InflMedium:TypeTerrace    0.006        0.017       0.143     #> 15              InflHigh:TypeTerrace   -0.093       -0.070       0.154     #> 16               InflMedium:ContHigh   -0.140       -0.126      -0.105     #> 17                 InflHigh:ContHigh   -0.609 *     -0.591      -0.738     #> 18            TypeApartment:ContHigh    0.503 *      0.522       0.698     #> 19               TypeAtrium:ContHigh    0.677 *      0.716       0.763     #> 20              TypeTerrace:ContHigh    1.099 ***    1.150 **    1.114 *   #> 21 InflMedium:TypeApartment:ContHigh    0.054        0.012      -0.141     #> 22   InflHigh:TypeApartment:ContHigh    0.146        0.132       0.088     #> 23    InflMedium:TypeAtrium:ContHigh    0.156        0.141       0.061     #> 24      InflHigh:TypeAtrium:ContHigh    0.478        0.424       0.503     #> 25   InflMedium:TypeTerrace:ContHigh   -0.498       -0.517      -0.531     #> 26     InflHigh:TypeTerrace:ContHigh   -0.447       -0.497      -0.296     #> 27                               ---                                       #> 28                         r.squared    -            -           0.751     #> 29                     adj.r.squared    -            -           0.616     #> 30                             sigma    -            -           0.463     #> 31                            logLik -279.213     -240.645     -30.648     #> 32                           logLik0 -587.313     -290.899       -         #> 33                                G2  616.201      100.508       -         #> 34                          deviance    -            -           9.876     #> 35                               AIC  610.426      535.289     115.296     #> 36                               BIC  669.619      596.759     176.766     #> 37                             numdf   26           27          25         #> 38                             dendf    -            -          46         #> 39                                 N   72           72          72         #> 40                            n vars    8            8           8         #> 41                            n coef   26           26          26         #> 42                                 F    -            -           5.551     #> 43                                 p    -            -           0.000     #> 44                               MAE    6.641        6.608       0.276     #> 45                              MAPE    0.354        0.345       0.104     #> 46                               MSE   92.754       97.134       0.137     #> 47                              RMSE    9.631        9.856       0.370     #> 48                          McFadden    0.525        0.173       -         #> 49                       McFaddenAdj    0.480        0.083       -         #> 50                        Nagelkerke    1.000        0.753       -         #> 51                          CoxSnell    1.000        0.752       -         #>       r.ols        r.gam       r.gami     #> 1    23.333 **     0.044 ***   23.363 *** #> 2     7.333       -0.010        7.156     #> 3    -4.333        0.010       -7.203     #> 4    10.333       -0.013       12.689     #> 5   -12.667        0.051 .    -11.194 .   #> 6   -13.000        0.054 .    -10.953 .   #> 7    -1.680e-14   -0.000       -1.622     #> 8     2.976       -0.003        4.937 **  #> 9     5.835 *     -0.009 *      3.241 **  #> 10   -1.667        0.006       -3.454     #> 11    3.333       -0.009        1.450     #> 12   -8.667        0.023       -9.280     #> 13    1.000        0.033        3.547     #> 14   -4.000       -0.013       -4.564     #> 15    1.667        0.024        2.945     #> 16   -4.000        0.005       -3.573     #> 17   -8.667        0.044       -7.115     #> 18   22.000       -0.011       22.521     #> 19   10.333       -0.046       11.552     #> 20   20.667       -0.064 *     22.933 .   #> 21    2.333       -0.002        0.902     #> 22  -12.000       -0.034      -13.218     #> 23    3.000       -0.012        2.303     #> 24    3.667       -0.055        0.377     #> 25   -8.667        0.032       -8.840     #> 26  -11.667        0.015      -14.359     #> 27                                        #> 28    0.688        -            -         #> 29    0.519        -            -         #> 30   12.256        -            -         #> 31 -266.465     -242.088     -236.152     #> 32    -         -290.204     -290.204     #> 33    -           96.232      108.104     #> 34 6909.139        -            -         #> 35  586.930      538.176      526.304     #> 36  648.400      599.646      587.774     #> 37   25           27           27         #> 38   46            -            -         #> 39   72           72           72         #> 40    8            8            8         #> 41   26           26           26         #> 42    4.061        -            -         #> 43    0.000        -            -         #> 44    7.050        6.883        6.823     #> 45    0.385        0.371        0.321     #> 46   95.960       98.993      102.471     #> 47    9.796        9.950       10.123     #> 48    -            0.166        0.186     #> 49    -            0.076        0.097     #> 50    -            0.737        0.777     #> 51    -            0.737        0.777     options(old)   ## Ordered Regression  r.polr <- FitMod(Sat ~ Infl + Type + Cont, data=housing, fitfn=\"polr\", weights = Freq)  # multinomial Regression # r.mult <- FitMod(factor(Sat, ordered=FALSE) ~ Infl + Type + Cont, data=housing, #                  weights = housing$Freq, fitfn=\"multinom\")   # Regression tree r.rp <- FitMod(factor(Sat, ordered=FALSE) ~ Infl + Type + Cont, data=housing,                  weights = housing$Freq, fitfn=\"rpart\")  # compare predictions d.p <- expand.grid(Infl=levels(housing$Infl), Type=levels(housing$Type), Cont=levels(housing$Cont)) d.p$polr <- predict(r.polr, newdata=d.p) # ?? # d.p$ols <- factor(round(predict(r.ols, newdata=d.p)^2), labels=levels(housing$Sat)) # d.p$mult <- predict(r.mult, newdata=d.p) d.p$rp <- predict(r.rp, newdata=d.p, type=\"class\")  d.p #>      Infl      Type Cont polr   rp #> 1     Low     Tower  Low  Low High #> 2  Medium     Tower  Low High High #> 3    High     Tower  Low High High #> 4     Low Apartment  Low  Low  Low #> 5  Medium Apartment  Low  Low High #> 6    High Apartment  Low High High #> 7     Low    Atrium  Low  Low High #> 8  Medium    Atrium  Low High High #> 9    High    Atrium  Low High High #> 10    Low   Terrace  Low  Low  Low #> 11 Medium   Terrace  Low  Low High #> 12   High   Terrace  Low High High #> 13    Low     Tower High High High #> 14 Medium     Tower High High High #> 15   High     Tower High High High #> 16    Low Apartment High  Low  Low #> 17 Medium Apartment High High High #> 18   High Apartment High High High #> 19    Low    Atrium High  Low High #> 20 Medium    Atrium High High High #> 21   High    Atrium High High High #> 22    Low   Terrace High  Low  Low #> 23 Medium   Terrace High  Low High #> 24   High   Terrace High High High   # Classification with 2 classes  ***************  r.pima <- FitMod(diabetes ~ ., d.pima, fitfn=\"logit\") r.pima #>  #> Call:  glm(formula = diabetes ~ ., family = \"binomial\", data = d.pima) #>  #> Coefficients: #> (Intercept)     pregnant      glucose     pressure      triceps      insulin   #>   -8.404696     0.123182     0.035164    -0.013296     0.000619    -0.001192   #>        mass     pedigree          age   #>    0.089701     0.945180     0.014869   #>  #> Degrees of Freedom: 767 Total (i.e. Null);  759 Residual #> Null Deviance:\t    993.5  #> Residual Deviance: 723.4 \tAIC: 741.4 Conf(r.pima) #>  #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction pos neg #>        pos 156  55 #>        neg 112 445 #>  #>                 Total n : 768 #>                Accuracy : 0.7826 #>                  95% CI : (0.7520, 0.8103) #>     No Information Rate : 0.6510 #>     P-Value [Acc > NIR] : 1.37e-15 #>  #>                   Kappa : 0.4966 #>  Mcnemar's Test P-Value : 1.47e-05 #>  #>             Sensitivity : 0.5821 #>             Specificity : 0.8900 #>          Pos Pred Value : 0.7393 #>          Neg Pred Value : 0.7989 #>              Prevalence : 0.3490 #>          Detection Rate : 0.2747 #>    Detection Prevalence : 0.2031 #>       Balanced Accuracy : 0.7360 #>          F-val Accuracy : 0.6514 #>      Matthews Cor.-Coef : 0.5041 #>  #>        'Positive' Class : pos #>  plot(ROC(r.pima)) #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases OddsRatio(r.pima) #>  #> Call: #> glm(formula = diabetes ~ ., family = \"binomial\", data = d.pima) #>  #> Odds Ratios: #>                or or.lci or.uci  Pr(>|z|)     #> (Intercept) 0.000  0.000  0.001 < 2.2e-16 *** #> pregnant    1.131  1.062  1.204  1.23e-04 *** #> glucose     1.036  1.028  1.043 < 2.2e-16 *** #> pressure    0.987  0.977  0.997    0.0111 *   #> triceps     1.001  0.987  1.014    0.9285     #> insulin     0.999  0.997  1.001    0.1861     #> mass        1.094  1.062  1.127  2.76e-09 *** #> pedigree    2.573  1.432  4.625    0.0016 **  #> age         1.015  0.997  1.034    0.1112     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Brier Score: 0.153     Nagelkerke R2: 0.408 #>    # rpart tree rp.pima <- FitMod(diabetes ~ ., d.pima, fitfn=\"rpart\") rp.pima #> n= 768  #>  #> node), split, n, loss, yval, (yprob) #>       * denotes terminal node #>  #>   1) root 768 268 neg (0.65104167 0.34895833)   #>     2) glucose< 127.5 485  94 neg (0.80618557 0.19381443)   #>       4) age< 28.5 271  23 neg (0.91512915 0.08487085) * #>       5) age>=28.5 214  71 neg (0.66822430 0.33177570)   #>        10) mass< 26.35 41   2 neg (0.95121951 0.04878049) * #>        11) mass>=26.35 173  69 neg (0.60115607 0.39884393)   #>          22) glucose< 99.5 55  10 neg (0.81818182 0.18181818) * #>          23) glucose>=99.5 118  59 neg (0.50000000 0.50000000)   #>            46) pedigree< 0.561 84  34 neg (0.59523810 0.40476190)   #>              92) pedigree< 0.2 21   4 neg (0.80952381 0.19047619) * #>              93) pedigree>=0.2 63  30 neg (0.52380952 0.47619048)   #>               186) pregnant>=1.5 52  21 neg (0.59615385 0.40384615)   #>                 372) pressure>=67 40  12 neg (0.70000000 0.30000000) * #>                 373) pressure< 67 12   3 pos (0.25000000 0.75000000) * #>               187) pregnant< 1.5 11   2 pos (0.18181818 0.81818182) * #>            47) pedigree>=0.561 34   9 pos (0.26470588 0.73529412) * #>     3) glucose>=127.5 283 109 pos (0.38515901 0.61484099)   #>       6) mass< 29.95 76  24 neg (0.68421053 0.31578947)   #>        12) glucose< 145.5 41   6 neg (0.85365854 0.14634146) * #>        13) glucose>=145.5 35  17 pos (0.48571429 0.51428571)   #>          26) insulin< 14.5 21   8 neg (0.61904762 0.38095238) * #>          27) insulin>=14.5 14   4 pos (0.28571429 0.71428571) * #>       7) mass>=29.95 207  57 pos (0.27536232 0.72463768)   #>        14) glucose< 157.5 115  45 pos (0.39130435 0.60869565)   #>          28) age< 30.5 50  23 neg (0.54000000 0.46000000)   #>            56) pressure>=61 40  13 neg (0.67500000 0.32500000)   #>             112) mass< 41.8 31   7 neg (0.77419355 0.22580645) * #>             113) mass>=41.8 9   3 pos (0.33333333 0.66666667) * #>            57) pressure< 61 10   0 pos (0.00000000 1.00000000) * #>          29) age>=30.5 65  18 pos (0.27692308 0.72307692) * #>        15) glucose>=157.5 92  12 pos (0.13043478 0.86956522) * Conf(rp.pima) #>  #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction neg pos #>        neg 449  72 #>        pos  51 196 #>  #>                 Total n : 768 #>                Accuracy : 0.8398 #>                  95% CI : (0.8122, 0.8641) #>     No Information Rate : 0.6510 #>     P-Value [Acc > NIR] : < 2.2e-16 #>  #>                   Kappa : 0.6410 #>  Mcnemar's Test P-Value : 0.0713 #>  #>             Sensitivity : 0.8980 #>             Specificity : 0.7313 #>          Pos Pred Value : 0.8618 #>          Neg Pred Value : 0.7935 #>              Prevalence : 0.6510 #>          Detection Rate : 0.6784 #>    Detection Prevalence : 0.5846 #>       Balanced Accuracy : 0.8147 #>          F-val Accuracy : 0.8795 #>      Matthews Cor.-Coef : 0.6422 #>  #>        'Positive' Class : neg #>  lines(ROC(rp.pima), col=hblue) #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases  # to be improved plot(rp.pima, col=SetAlpha(c(\"blue\",\"red\"), 0.4), cex=0.7)   # Random Forest rf.pima <- FitMod(diabetes ~ ., d.pima, method=\"class\", fitfn=\"randomForest\") rf.pima #>  #> Call: #>  randomForest(formula = diabetes ~ ., data = d.pima, method = \"class\",      na.action = function (object, ...)      UseMethod(\"na.omit\"))  #>                Type of random forest: classification #>                      Number of trees: 500 #> No. of variables tried at each split: 2 #>  #>         OOB estimate of  error rate: 23.05% #> Confusion matrix: #>     neg pos class.error #> neg 430  70   0.1400000 #> pos 107 161   0.3992537 Conf(rf.pima) #>  #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction neg pos #>        neg 430 107 #>        pos  70 161 #>  #>                 Total n : 768 #>                Accuracy : 0.7695 #>                  95% CI : (0.7384, 0.7979) #>     No Information Rate : 0.6510 #>     P-Value [Acc > NIR] : 7.16e-13 #>  #>                   Kappa : 0.4760 #>  Mcnemar's Test P-Value : 0.0068 #>  #>             Sensitivity : 0.8600 #>             Specificity : 0.6007 #>          Pos Pred Value : 0.8007 #>          Neg Pred Value : 0.6970 #>              Prevalence : 0.6510 #>          Detection Rate : 0.6992 #>    Detection Prevalence : 0.5599 #>       Balanced Accuracy : 0.7304 #>          F-val Accuracy : 0.8293 #>      Matthews Cor.-Coef : 0.4789 #>  #>        'Positive' Class : neg #>  lines(ROC(r.pima), col=hred) #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases     # more models to compare  d.pim <- SplitTrainTest(d.pima, p = 0.2) mdiab <- formula(diabetes ~ pregnant + glucose + pressure + triceps                             + insulin + mass + pedigree + age)  r.glm <- FitMod(mdiab, data=d.pim$train, fitfn=\"logit\") r.rp <- FitMod(mdiab, data=d.pim$train, fitfn=\"rpart\") r.rf <- FitMod(mdiab, data=d.pim$train, fitfn=\"randomForest\") r.svm <- FitMod(mdiab, data=d.pim$train, fitfn=\"svm\") r.c5 <- FitMod(mdiab, data=d.pim$train, fitfn=\"C5.0\") r.nn <- FitMod(mdiab, data=d.pim$train, fitfn=\"nnet\") r.nb <- FitMod(mdiab, data=d.pim$train, fitfn=\"naive_bayes\") r.lda <- FitMod(mdiab, data=d.pim$train, fitfn=\"lda\") r.qda <- FitMod(mdiab, data=d.pim$train, fitfn=\"qda\") r.lb <- FitMod(mdiab, data=d.pim$train, fitfn=\"lb\")  mods <- list(glm=r.glm, rp=r.rp, rf=r.rf, svm=r.svm, c5=r.c5              , nn=r.nn, nb=r.nb, lda=r.lda, qda=r.qda, lb=r.lb)  # insight in the Regression tree plot(r.rp, box.palette = as.list(Pal(\"Helsana\", alpha = 0.5)))   # Insample accuracy ... TModC(mods, ord=\"auc\") #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Error in eval(object$call$data): object 'd.pim' not found # ... is substantially different from the out-of-bag: TModC(mods, newdata=d.pim$test, reference=d.pim$test$diabetes, ord=\"bs\") #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Warning: predict.naive_bayes(): more features in the newdata are provided as there are probability tables in the object. Calculation is performed based on features to be found in the tables. #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Error in eval(object$call$data): object 'd.pim' not found # C5 and SVM turn out to be show-offs! They overfit quite ordinary # whereas randomforest and logit keep their promises. ...  sapply(mods, function(z) VarImp(z)) #> Warning: no VarImp definition found for x (class FitMod, naive_bayes) #> Warning: no VarImp definition found for x (class FitMod, lda) #> Warning: no VarImp definition found for x (class FitMod, qda) #> Warning: no VarImp definition found for x (class FitMod, LogitBoost) #> $glm #>          Overall #> pregnant   3.210 #> glucose    8.176 #> pressure   2.437 #> triceps    0.056 #> insulin    1.642 #> mass       5.010 #> pedigree   2.970 #> age        1.687 #>  #> $rp #>          varimp #> glucose  57.127 #> mass     17.811 #> pressure 13.715 #> age      13.531 #> insulin  12.599 #> pregnant  2.970 #> triceps   2.931 #> pedigree  0.866 #>  #> $rf #>          varimp #> glucose  68.585 #> mass     44.600 #> age      38.308 #> pedigree 35.697 #> pressure 25.106 #> pregnant 24.142 #> triceps  20.404 #> insulin  18.435 #>  #> $svm #>      x #> 1 <NA> #>  #> $c5 #>          Overall #> glucose  100.000 #> mass     100.000 #> age       66.180 #> triceps   20.000 #> pregnant  18.860 #> pedigree  15.610 #> pressure   7.320 #> insulin    0.000 #>  #> $nn #>          Overall #> triceps   17.802 #> pedigree  16.997 #> glucose   15.842 #> pressure  14.737 #> pregnant  12.023 #> age        8.704 #> insulin    7.800 #> mass       6.095 #>  #> $nb #>      x #> 1 <NA> #>  #> $lda #>      x #> 1 <NA> #>  #> $qda #>      x #> 1 <NA> #>  #> $lb #>      x #> 1 <NA> #>    # Multinomial classification problem with n classes  ***************  d.gl <- SplitTrainTest(d.glass, p = 0.2) mglass <- formula(Type ~ RI + Na + Mg + Al + Si + K + Ca + Ba + Fe)  # *** raises an unclear error in CRAN-Debian tests *** ?? # r.mult <- FitMod(mglass, data=d.gl$train, maxit=600, fitfn=\"multinom\") r.rp <- FitMod(mglass, data=d.gl$train, fitfn=\"rpart\") r.rf <- FitMod(mglass, data=d.gl$train, fitfn=\"randomForest\") r.svm <- FitMod(mglass, data=d.gl$train, fitfn=\"svm\") r.c5 <- FitMod(mglass, data=d.gl$train, fitfn=\"C5.0\") r.nn <- FitMod(mglass, data=d.gl$train, fitfn=\"nnet\") r.nbay <- FitMod(mglass, data=d.gl$train, fitfn=\"naive_bayes\") r.lda <- FitMod(mglass, data=d.gl$train, fitfn=\"lda\") # r.qda <- FitMod(mglass, data=d.glass, fitfn=\"qda\") r.lb <- FitMod(mglass, data=d.gl$train, fitfn=\"lb\")  mods <- list(rp=r.rp, rf=r.rf, svm=r.svm, c5=r.c5,              nn=r.nn, nbay=r.nbay, lda=r.lda, lb=r.lb)  # confusion matrix and other quality measures can be calculated with Conf() Conf(r.rf) #>  #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction  1  2  3  5  6  7 #>          1 51 10  6  0  0  1 #>          2  6 52  2  3  1  3 #>          3  1  0  5  0  0  0 #>          5  0  1  0  6  0  0 #>          6  0  0  0  0  6  0 #>          7  0  1  0  1  0 16 #>  #> Overall Statistics #>  #>                 Total n : 172 #>                Accuracy : 0.7907 #>                  95% CI : (0.7239, 0.8448) #>     No Information Rate : 0.3721 #>     P-Value [Acc > NIR] : < 2.2e-16 #>  #>                   Kappa : 0.7023 #>  Mcnemar's Test P-Value : NA #>  #>  #> Statistics by Class: #>  #>                           1      2      3      5      6      7 #> Sensitivity          0.8793 0.8125 0.3846 0.6000 0.8571 0.8000 #> Specificity          0.8509 0.8611 0.9937 0.9938 1.0000 0.9868 #> Pos Pred Value       0.7500 0.7761 0.8333 0.8571 1.0000 0.8889 #> Neg Pred Value       0.9327 0.8857 0.9518 0.9758 0.9940 0.9740 #> Prevalence           0.3372 0.3721 0.0756 0.0581 0.0407 0.1163 #> Detection Rate       0.3953 0.3895 0.0349 0.0407 0.0349 0.1047 #> Detection Prevalence 0.2965 0.3023 0.0291 0.0349 0.0349 0.0930 #> Balanced Accuracy    0.8651 0.8368 0.6892 0.7969 0.9286 0.8934 #> F-val Accuracy       0.8095 0.7939 0.5263 0.7059 0.9231 0.8421 #> Matthews Cor.-Coef   0.7060 0.6677 0.5450 0.7033 0.9230 0.8240 #>   # we only extract the general accuracy sapply(lapply(mods, function(z) Conf(z)), \"[[\", \"acc\") #> Error in eval(object$call$data): object 'd.gl' not found  # let's compare r.mult with a model without RI as predictor # Conf(r.mult) # Conf(update(r.mult, . ~ . -RI))"},{"path":"https://andrisignorell.github.io/ModTools/reference/Node.html","id":null,"dir":"Reference","previous_headings":"","what":"Nodes and Splits in an rpart Tree  — Node","title":"Nodes and Splits in an rpart Tree  — Node","text":"rpart result object complex compact design. can make practical use tedious occasional users difficult figure access specific information. function Node() designed accessor important properties node, 'split' 'leaf' (aka. 'endnode'). also serves base convenience functions e.g. LeafRates().","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nodes and Splits in an rpart Tree  — Node","text":"","code":"Node(x, node = NULL, type = c(\"all\", \"split\", \"leaf\"), digits = 3)"},{"path":"https://andrisignorell.github.io/ModTools/reference/Node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nodes and Splits in an rpart Tree  — Node","text":"x fitted model object class rpart. node integer vector, defining nodes whose details required. type one \"\" (default), \"split\", \"leaf\", latter two restrict result set splits end nodes . Can abbreviated. digits number digits numeric values","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Node.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nodes and Splits in an rpart Tree  — Node","text":"Node() returns detailed information single node tree. reports data summary node, option provide nodelist. structure result organised list.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nodes and Splits in an rpart Tree  — Node","text":"list containing: id int, id node vname character, one 'leaf' 'split' isleaf logical, TRUE leaves FALSE else nobs integer, number observation node group character, predicted class node ycount numeric, number observation per class node yprob numeric, relative frequencies class nodeprob global probability observation fall node complexity numeric, complexity parameter node tprint character, text printed","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Node.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Nodes and Splits in an rpart Tree  — Node","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/Node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nodes and Splits in an rpart Tree  — Node","text":"","code":"r.rpart <- FitMod(Species ~ ., data=iris, fitfn=\"rpart\") # return Node nr. 3 Node(r.rpart, node=3) #>  #> Node number 3: 100 observations,    complexity param=0.44 #>   predicted class=versicolor  expected loss=0.5  P(node) =0.667 #>     class counts:     0    50    50 #>    probabilities: 0.000 0.500 0.500  #>   left son=6 (54 obs) right son=7 (46 obs) #>   Primary splits: #>       Petal.Width < 1.75 to the left,  improve=39, (0 missing) #>       Petal.Length < 4.75 to the left,  improve=37.4, (0 missing) #>       Sepal.Length < 6.15 to the left,  improve=10.7, (0 missing) #>       Sepal.Width < 2.45 to the left,  improve=3.56, (0 missing) #>   Surrogate splits: #>       Petal.Length < 4.75 to the left,  agree=0.91, adj=0.804, (0 split) #>       Sepal.Length < 6.15 to the left,  agree=0.73, adj=0.413, (0 split) #>       Sepal.Width < 2.95 to the left,  agree=0.67, adj=0.283, (0 split) #>   r.rp <- FitMod(Type ~ ., data = d.glass, fitfn=\"rpart\") # return all the splits Node(r.rpart, type=\"split\") #>  #> Node number 1: 150 observations,    complexity param=0.5 #>   predicted class=setosa      expected loss=0.667  P(node) =1 #>     class counts:    50    50    50 #>    probabilities: 0.333 0.333 0.333  #>   left son=2 (50 obs) right son=3 (100 obs) #>   Primary splits: #>       Petal.Length < 2.45 to the left,  improve=50, (0 missing) #>       Petal.Width < 0.8  to the left,  improve=50, (0 missing) #>       Sepal.Length < 5.45 to the left,  improve=34.2, (0 missing) #>       Sepal.Width < 3.35 to the right, improve=19, (0 missing) #>   Surrogate splits: #>       Petal.Width < 0.8  to the left,  agree=1, adj=1, (0 split) #>       Sepal.Length < 5.45 to the left,  agree=0.92, adj=0.76, (0 split) #>       Sepal.Width < 3.35 to the right, agree=0.833, adj=0.5, (0 split) #>  #>  #> Node number 3: 100 observations,    complexity param=0.44 #>   predicted class=versicolor  expected loss=0.5  P(node) =0.667 #>     class counts:     0    50    50 #>    probabilities: 0.000 0.500 0.500  #>   left son=6 (54 obs) right son=7 (46 obs) #>   Primary splits: #>       Petal.Width < 1.75 to the left,  improve=39, (0 missing) #>       Petal.Length < 4.75 to the left,  improve=37.4, (0 missing) #>       Sepal.Length < 6.15 to the left,  improve=10.7, (0 missing) #>       Sepal.Width < 2.45 to the left,  improve=3.56, (0 missing) #>   Surrogate splits: #>       Petal.Length < 4.75 to the left,  agree=0.91, adj=0.804, (0 split) #>       Sepal.Length < 6.15 to the left,  agree=0.73, adj=0.413, (0 split) #>       Sepal.Width < 2.95 to the left,  agree=0.67, adj=0.283, (0 split) #>"},{"path":"https://andrisignorell.github.io/ModTools/reference/OverSample.html","id":null,"dir":"Reference","previous_headings":"","what":"Oversample and Undersample  — Over-/Undersample","title":"Oversample and Undersample  — Over-/Undersample","text":"classification purposes might want balanced datasets. response variable prevalence 50%, can sample records getting much response cases response B. called oversample. Undersample means sample (lower) number cases records case B.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/OverSample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oversample and Undersample  — Over-/Undersample","text":"","code":"OverSample(x, vname) UnderSample(x, vname)"},{"path":"https://andrisignorell.github.io/ModTools/reference/OverSample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Oversample and Undersample  — Over-/Undersample","text":"x data frame containing predictors response vname name response variable used /undersample","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/OverSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Oversample and Undersample  — Over-/Undersample","text":"data frame balanced response variable","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/OverSample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Oversample and Undersample  — Over-/Undersample","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/OverSample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Oversample and Undersample  — Over-/Undersample","text":"","code":"OverSample(d.pima2, \"diabetes\") #>       pregnant glucose pressure triceps insulin mass pedigree age diabetes #> 2            1      85       66      29      NA 26.6    0.351  31      neg #> 4            1      89       66      23      94 28.1    0.167  21      neg #> 6            5     116       74      NA      NA 25.6    0.201  30      neg #> 8           10     115       NA      NA      NA 35.3    0.134  29      neg #> 11           4     110       92      NA      NA 37.6    0.191  30      neg #> 13          10     139       80      NA      NA 27.1    1.441  57      neg #> 19           1     103       30      38      83 43.3    0.183  33      neg #> 21           3     126       88      41     235 39.3    0.704  27      neg #> 22           8      99       84      NA      NA 35.4    0.388  50      neg #> 28           1      97       66      15     140 23.2    0.487  22      neg #> 29          13     145       82      19     110 22.2    0.245  57      neg #> 30           5     117       92      NA      NA 34.1    0.337  38      neg #> 31           5     109       75      26      NA 36.0    0.546  60      neg #> 33           3      88       58      11      54 24.8    0.267  22      neg #> 34           6      92       92      NA      NA 19.9    0.188  28      neg #> 35          10     122       78      31      NA 27.6    0.512  45      neg #> 36           4     103       60      33     192 24.0    0.966  33      neg #> 37          11     138       76      NA      NA 33.2    0.420  35      neg #> 41           3     180       64      25      70 34.0    0.271  26      neg #> 42           7     133       84      NA      NA 40.2    0.696  37      neg #> 43           7     106       92      18      NA 22.7    0.235  48      neg #> 45           7     159       64      NA      NA 27.4    0.294  40      neg #> 47           1     146       56      NA      NA 29.7    0.564  29      neg #> 48           2      71       70      27      NA 28.0    0.586  22      neg #> 50           7     105       NA      NA      NA   NA    0.305  24      neg #> 51           1     103       80      11      82 19.4    0.491  22      neg #> 52           1     101       50      15      36 24.2    0.526  26      neg #> 53           5      88       66      21      23 24.4    0.342  30      neg #> 55           7     150       66      42     342 34.7    0.718  42      neg #> 56           1      73       50      10      NA 23.0    0.248  21      neg #> 58           0     100       88      60     110 46.8    0.962  31      neg #> 59           0     146       82      NA      NA 40.5    1.781  44      neg #> 60           0     105       64      41     142 41.5    0.173  22      neg #> 61           2      84       NA      NA      NA   NA    0.304  21      neg #> 63           5      44       62      NA      NA 25.0    0.587  36      neg #> 64           2     141       58      34     128 25.4    0.699  24      neg #> 66           5      99       74      27      NA 29.0    0.203  32      neg #> 68           2     109       92      NA      NA 42.7    0.845  54      neg #> 69           1      95       66      13      38 19.6    0.334  25      neg #> 70           4     146       85      27     100 28.9    0.189  27      neg #> 72           5     139       64      35     140 28.6    0.411  26      neg #> 74           4     129       86      20     270 35.1    0.231  23      neg #> 75           1      79       75      30      NA 32.0    0.396  22      neg #> 76           1      NA       48      20      NA 24.7    0.140  22      neg #> 77           7      62       78      NA      NA 32.6    0.391  41      neg #> 78           5      95       72      33      NA 37.7    0.370  27      neg #> 80           2     112       66      22      NA 25.0    0.307  24      neg #> 81           3     113       44      13      NA 22.4    0.140  22      neg #> 82           2      74       NA      NA      NA   NA    0.102  22      neg #> 83           7      83       78      26      71 29.3    0.767  36      neg #> 84           0     101       65      28      NA 24.6    0.237  22      neg #> 86           2     110       74      29     125 32.4    0.698  27      neg #> 87          13     106       72      54      NA 36.6    0.178  45      neg #> 88           2     100       68      25      71 38.5    0.324  26      neg #> 90           1     107       68      19      NA 26.5    0.165  24      neg #> 91           1      80       55      NA      NA 19.1    0.258  21      neg #> 92           4     123       80      15     176 32.0    0.443  34      neg #> 93           7      81       78      40      48 46.7    0.261  42      neg #> 95           2     142       82      18      64 24.7    0.761  21      neg #> 96           6     144       72      27     228 33.9    0.255  40      neg #> 97           2      92       62      28      NA 31.6    0.130  24      neg #> 98           1      71       48      18      76 20.4    0.323  22      neg #> 99           6      93       50      30      64 28.7    0.356  23      neg #> 102          1     151       60      NA      NA 26.1    0.179  22      neg #> 103          0     125       96      NA      NA 22.5    0.262  21      neg #> 104          1      81       72      18      40 26.6    0.283  24      neg #> 105          2      85       65      NA      NA 39.6    0.930  27      neg #> 106          1     126       56      29     152 28.7    0.801  21      neg #> 107          1      96      122      NA      NA 22.4    0.207  27      neg #> 108          4     144       58      28     140 29.5    0.287  37      neg #> 109          3      83       58      31      18 34.3    0.336  25      neg #> 113          1      89       76      34      37 31.2    0.192  23      neg #> 114          4      76       62      NA      NA 34.0    0.391  25      neg #> 118          5      78       48      NA      NA 33.7    0.654  25      neg #> 119          4      97       60      23      NA 28.2    0.443  22      neg #> 120          4      99       76      15      51 23.2    0.223  21      neg #> 122          6     111       64      39      NA 34.2    0.260  24      neg #> 123          2     107       74      30     100 33.6    0.404  23      neg #> 124          5     132       80      NA      NA 26.8    0.186  69      neg #> 127          3     120       70      30     135 42.9    0.452  30      neg #> 128          1     118       58      36      94 33.3    0.261  23      neg #> 134          8      84       74      31      NA 38.3    0.457  39      neg #> 135          2      96       68      13      49 21.1    0.647  26      neg #> 136          2     125       60      20     140 33.8    0.088  31      neg #> 137          0     100       70      26      50 30.8    0.597  21      neg #> 138          0      93       60      25      92 28.7    0.532  22      neg #> 139          0     129       80      NA      NA 31.2    0.703  29      neg #> 140          5     105       72      29     325 36.9    0.159  28      neg #> 141          3     128       78      NA      NA 21.1    0.268  55      neg #> 142          5     106       82      30      NA 39.5    0.286  38      neg #> 143          2     108       52      26      63 32.5    0.318  22      neg #> 145          4     154       62      31     284 32.8    0.237  23      neg #> 146          0     102       75      23      NA   NA    0.572  21      neg #> 147          9      57       80      37      NA 32.8    0.096  41      neg #> 148          2     106       64      35     119 30.5    1.400  34      neg #> 149          5     147       78      NA      NA 33.7    0.218  65      neg #> 150          2      90       70      17      NA 27.3    0.085  22      neg #> 151          1     136       74      50     204 37.4    0.399  24      neg #> 152          4     114       65      NA      NA 21.9    0.432  37      neg #> 154          1     153       82      42     485 40.6    0.687  23      neg #> 157          2      99       52      15      94 24.6    0.637  21      neg #> 158          1     109       56      21     135 25.2    0.833  23      neg #> 159          2      88       74      19      53 29.0    0.229  22      neg #> 161          4     151       90      38      NA 29.7    0.294  36      neg #> 162          7     102       74      40     105 37.2    0.204  45      neg #> 163          0     114       80      34     285 44.2    0.167  27      neg #> 164          2     100       64      23      NA 29.7    0.368  21      neg #> 167          3     148       66      25      NA 32.5    0.256  22      neg #> 168          4     120       68      NA      NA 29.6    0.709  34      neg #> 169          4     110       66      NA      NA 31.9    0.471  29      neg #> 170          3     111       90      12      78 28.4    0.495  29      neg #> 173          2      87       NA      23      NA 28.9    0.773  25      neg #> 174          1      79       60      42      48 43.5    0.678  23      neg #> 175          2      75       64      24      55 29.7    0.370  33      neg #> 177          6      85       78      NA      NA 31.2    0.382  42      neg #> 179          5     143       78      NA      NA 45.0    0.190  47      neg #> 181          6      87       80      NA      NA 23.2    0.084  32      neg #> 182          0     119       64      18      92 34.9    0.725  23      neg #> 183          1      NA       74      20      23 27.7    0.299  21      neg #> 184          5      73       60      NA      NA 26.8    0.268  27      neg #> 185          4     141       74      NA      NA 27.6    0.244  40      neg #> 191          3     111       62      NA      NA 22.6    0.142  21      neg #> 192          9     123       70      44      94 33.1    0.374  40      neg #> 195          8      85       55      20      NA 24.4    0.136  42      neg #> 197          1     105       58      NA      NA 24.3    0.187  21      neg #> 201          0     113       80      16      NA 31.0    0.874  21      neg #> 202          1     138       82      NA      NA 40.1    0.236  28      neg #> 203          0     108       68      20      NA 27.3    0.787  32      neg #> 204          2      99       70      16      44 20.4    0.235  27      neg #> 205          6     103       72      32     190 37.7    0.324  55      neg #> 206          5     111       72      28      NA 23.9    0.407  27      neg #> 209          1      96       64      27      87 33.2    0.289  21      neg #> 211          2      81       60      22      NA 27.7    0.290  25      neg #> 212          0     147       85      54      NA 42.8    0.375  24      neg #> 213          7     179       95      31      NA 34.2    0.164  60      neg #> 218          6     125       68      30     120 30.0    0.464  32      neg #> 223          7     119       NA      NA      NA 25.2    0.209  37      neg #> 224          7     142       60      33     190 28.8    0.687  61      neg #> 225          1     100       66      15      56 23.6    0.666  26      neg #> 226          1      87       78      27      32 34.6    0.101  22      neg #> 227          0     101       76      NA      NA 35.7    0.198  26      neg #> 229          4     197       70      39     744 36.7    2.329  31      neg #> 230          0     117       80      31      53 45.2    0.089  24      neg #> 233          1      79       80      25      37 25.4    0.583  22      neg #> 234          4     122       68      NA      NA 35.0    0.394  29      neg #> 235          3      74       68      28      45 29.7    0.293  23      neg #> 240          0     104       76      NA      NA 18.4    0.582  27      neg #> 241          1      91       64      24      NA 29.2    0.192  21      neg #> 242          4      91       70      32      88 33.1    0.446  22      neg #> 245          2     146       76      35     194 38.2    0.329  29      neg #> 247         10     122       68      NA      NA 31.2    0.258  41      neg #> 248          0     165       90      33     680 52.3    0.427  23      neg #> 249          9     124       70      33     402 35.4    0.282  34      neg #> 250          1     111       86      19      NA 30.1    0.143  23      neg #> 251          9     106       52      NA      NA 31.2    0.380  42      neg #> 252          2     129       84      NA      NA 28.0    0.284  27      neg #> 253          2      90       80      14      55 24.4    0.249  24      neg #> 254          0      86       68      32      NA 35.8    0.238  25      neg #> 257          3     111       56      39      NA 30.1    0.557  30      neg #> 258          2     114       68      22      NA 28.7    0.092  25      neg #> 259          1     193       50      16     375 25.9    0.655  24      neg #> 261          3     191       68      15     130 30.9    0.299  34      neg #> 263          4      95       70      32      NA 32.1    0.612  24      neg #> 264          3     142       80      15      NA 32.4    0.200  63      neg #> 266          5      96       74      18      67 33.6    0.997  43      neg #> 268          2     128       64      42      NA 40.0    1.101  24      neg #> 269          0     102       52      NA      NA 25.1    0.078  21      neg #> 272          2     108       62      32      56 25.2    0.128  21      neg #> 273          3     122       78      NA      NA 23.0    0.254  40      neg #> 274          1      71       78      50      45 33.2    0.422  21      neg #> 275         13     106       70      NA      NA 34.2    0.251  52      neg #> 276          2     100       70      52      57 40.5    0.677  25      neg #> 278          0     104       64      23     116 27.8    0.454  23      neg #> 279          5     114       74      NA      NA 24.9    0.744  57      neg #> 280          2     108       62      10     278 25.3    0.881  22      neg #> 282         10     129       76      28     122 35.9    0.280  39      neg #> 283          7     133       88      15     155 32.4    0.262  37      neg #> 286          7     136       74      26     135 26.0    0.647  51      neg #> 287          5     155       84      44     545 38.7    0.619  34      neg #> 289          4      96       56      17      49 20.8    0.340  26      neg #> 290          5     108       72      43      75 36.1    0.263  33      neg #> 291          0      78       88      29      40 36.9    0.434  21      neg #> 295          0     161       50      NA      NA 21.9    0.254  65      neg #> 296          6     151       62      31     120 35.5    0.692  28      neg #> 298          0     126       84      29     215 30.7    0.520  24      neg #> 300          8     112       72      NA      NA 23.6    0.840  58      neg #> 303          5      77       82      41      42 35.8    0.156  35      neg #> 305          3     150       76      NA      NA 21.0    0.207  37      neg #> 306          2     120       76      37     105 39.7    0.215  29      neg #> 308          0     137       68      14     148 24.8    0.143  21      neg #> 311          6      80       66      30      NA 26.2    0.313  41      neg #> 312          0     106       70      37     148 39.4    0.605  22      neg #> 314          3     113       50      10      85 29.5    0.626  25      neg #> 316          2     112       68      22      94 34.1    0.315  26      neg #> 317          3      99       80      11      64 19.3    0.284  30      neg #> 319          3     115       66      39     140 38.1    0.150  28      neg #> 321          4     129       60      12     231 27.5    0.527  31      neg #> 325          2     112       75      32      NA 35.7    0.148  21      neg #> 326          1     157       72      21     168 25.6    0.123  24      neg #> 328         10     179       70      NA      NA 35.1    0.200  37      neg #> 330          6     105       70      32      68 30.8    0.122  37      neg #> 331          8     118       72      19      NA 23.1    1.476  46      neg #> 332          2      87       58      16      52 32.7    0.166  25      neg #> 334         12     106       80      NA      NA 23.6    0.137  44      neg #> 335          1      95       60      18      58 23.9    0.260  22      neg #> 336          0     165       76      43     255 47.9    0.259  26      neg #> 337          0     117       NA      NA      NA 33.8    0.932  44      neg #> 341          1     130       70      13     105 25.9    0.472  22      neg #> 342          1      95       74      21      73 25.9    0.673  36      neg #> 343          1      NA       68      35      NA 32.0    0.389  22      neg #> 344          5     122       86      NA      NA 34.7    0.290  33      neg #> 345          8      95       72      NA      NA 36.8    0.485  57      neg #> 346          8     126       88      36     108 38.5    0.349  49      neg #> 347          1     139       46      19      83 28.7    0.654  22      neg #> 348          3     116       NA      NA      NA 23.5    0.187  23      neg #> 349          3      99       62      19      74 21.8    0.279  26      neg #> 351          4      92       80      NA      NA 42.2    0.237  29      neg #> 352          4     137       84      NA      NA 31.2    0.252  30      neg #> 353          3      61       82      28      NA 34.4    0.243  46      neg #> 354          1      90       62      12      43 27.2    0.580  24      neg #> 355          3      90       78      NA      NA 42.7    0.559  21      neg #> 359         12      88       74      40      54 35.3    0.378  48      neg #> 362          5     158       70      NA      NA 29.8    0.207  63      neg #> 363          5     103      108      37      NA 39.2    0.305  65      neg #> 365          4     147       74      25     293 34.9    0.385  30      neg #> 366          5      99       54      28      83 34.0    0.499  30      neg #> 368          0     101       64      17      NA 21.0    0.252  21      neg #> 369          3      81       86      16      66 27.5    0.306  22      neg #> 372          0     118       64      23      89   NA    1.731  21      neg #> 373          0      84       64      22      66 35.8    0.545  21      neg #> 374          2     105       58      40      94 34.9    0.225  25      neg #> 375          2     122       52      43     158 36.2    0.816  28      neg #> 377          0      98       82      15      84 25.2    0.299  22      neg #> 378          1      87       60      37      75 37.2    0.509  22      neg #> 380          0      93      100      39      72 43.4    1.021  35      neg #> 381          1     107       72      30      82 30.8    0.821  24      neg #> 382          0     105       68      22      NA 20.0    0.236  22      neg #> 383          1     109       60       8     182 25.4    0.947  21      neg #> 384          1      90       62      18      59 25.1    1.268  25      neg #> 385          1     125       70      24     110 24.3    0.221  25      neg #> 386          1     119       54      13      50 22.3    0.205  24      neg #> 390          3     100       68      23      81 31.6    0.949  28      neg #> 391          1     100       66      29     196 32.0    0.444  42      neg #> 393          1     131       64      14     415 23.7    0.389  21      neg #> 394          4     116       72      12      87 22.1    0.463  37      neg #> 396          2     127       58      24     275 27.7    1.600  25      neg #> 397          3      96       56      34     115 24.7    0.944  39      neg #> 399          3      82       70      NA      NA 21.1    0.389  25      neg #> 402          6     137       61      NA      NA 24.2    0.151  55      neg #> 404          9      72       78      25      NA 31.6    0.280  38      neg #> 406          2     123       48      32     165 42.1    0.520  26      neg #> 408          0     101       62      NA      NA 21.9    0.336  25      neg #> 411          6     102       90      39      NA 35.7    0.674  28      neg #> 412          1     112       72      30     176 34.4    0.528  25      neg #> 413          1     143       84      23     310 42.4    1.076  22      neg #> 414          1     143       74      22      61 26.2    0.256  21      neg #> 417          1      97       68      21      NA 27.2    1.095  22      neg #> 419          1      83       68      NA      NA 18.2    0.624  27      neg #> 421          1     119       88      41     170 45.3    0.507  26      neg #> 422          2      94       68      18      76 26.0    0.561  21      neg #> 423          0     102       64      46      78 40.6    0.496  21      neg #> 424          2     115       64      22      NA 30.8    0.421  21      neg #> 427          0      94       NA      NA      NA   NA    0.256  25      neg #> 429          0     135       94      46     145 40.6    0.284  26      neg #> 431          2      99       NA      NA      NA 22.2    0.108  23      neg #> 432          3      89       74      16      85 30.4    0.551  38      neg #> 433          1      80       74      11      60 30.0    0.527  22      neg #> 434          2     139       75      NA      NA 25.6    0.167  29      neg #> 435          1      90       68       8      NA 24.5    1.138  36      neg #> 437         12     140       85      33      NA 37.4    0.244  41      neg #> 438          5     147       75      NA      NA 29.9    0.434  28      neg #> 439          1      97       70      15      NA 18.2    0.147  21      neg #> 440          6     107       88      NA      NA 36.8    0.727  31      neg #> 442          2      83       66      23      50 32.2    0.497  22      neg #> 443          4     117       64      27     120 33.2    0.230  24      neg #> 447          1     100       72      12      70 25.3    0.658  28      neg #> 448          0      95       80      45      92 36.5    0.330  26      neg #> 450          0     120       74      18      63 30.5    0.285  26      neg #> 451          1      82       64      13      95 21.2    0.415  23      neg #> 453          0      91       68      32     210 39.9    0.381  25      neg #> 454          2     119       NA      NA      NA 19.6    0.832  72      neg #> 455          2     100       54      28     105 37.8    0.498  24      neg #> 457          1     135       54      NA      NA 26.7    0.687  62      neg #> 458          5      86       68      28      71 30.2    0.364  24      neg #> 460          9     134       74      33      60 25.9    0.460  81      neg #> 461          9     120       72      22      56 20.8    0.733  48      neg #> 462          1      71       62      NA      NA 21.8    0.416  26      neg #> 463          8      74       70      40      49 35.3    0.705  39      neg #> 464          5      88       78      30      NA 27.6    0.258  37      neg #> 465         10     115       98      NA      NA 24.0    1.022  34      neg #> 466          0     124       56      13     105 21.8    0.452  21      neg #> 467          0      74       52      10      36 27.8    0.269  22      neg #> 468          0      97       64      36     100 36.8    0.600  25      neg #> 470          6     154       78      41     140 46.1    0.571  27      neg #> 471          1     144       82      40      NA 41.3    0.607  28      neg #> 472          0     137       70      38      NA 33.2    0.170  22      neg #> 473          0     119       66      27      NA 38.8    0.259  22      neg #> 474          7     136       90      NA      NA 29.9    0.210  50      neg #> 475          4     114       64      NA      NA 28.9    0.126  24      neg #> 476          0     137       84      27      NA 27.3    0.231  59      neg #> 478          7     114       76      17     110 23.8    0.466  31      neg #> 479          8     126       74      38      75 25.9    0.162  39      neg #> 480          4     132       86      31      NA 28.0    0.419  63      neg #> 482          0     123       88      37      NA 35.2    0.197  29      neg #> 483          4      85       58      22      49 27.8    0.306  28      neg #> 484          0      84       82      31     125 38.2    0.233  23      neg #> 487          1     139       62      41     480 40.7    0.536  21      neg #> 488          0     173       78      32     265 46.5    1.159  58      neg #> 489          4      99       72      17      NA 25.6    0.294  28      neg #> 490          8     194       80      NA      NA 26.1    0.551  67      neg #> 491          2      83       65      28      66 36.8    0.629  24      neg #> 492          2      89       90      30      NA 33.5    0.292  42      neg #> 493          4      99       68      38      NA 32.8    0.145  33      neg #> 495          3      80       NA      NA      NA   NA    0.174  22      neg #> 496          6     166       74      NA      NA 26.6    0.304  66      neg #> 497          5     110       68      NA      NA 26.0    0.292  30      neg #> 498          2      81       72      15      76 30.1    0.547  25      neg #> 500          6     154       74      32     193 29.3    0.839  39      neg #> 501          2     117       90      19      71 25.2    0.313  21      neg #> 502          3      84       72      32      NA 37.2    0.267  28      neg #> 504          7      94       64      25      79 33.3    0.738  41      neg #> 505          3      96       78      39      NA 37.3    0.238  40      neg #> 506         10      75       82      NA      NA 33.3    0.263  38      neg #> 508          1     130       60      23     170 28.6    0.692  21      neg #> 509          2      84       50      23      76 30.4    0.968  21      neg #> 510          8     120       78      NA      NA 25.0    0.409  64      neg #> 512          0     139       62      17     210 22.1    0.207  21      neg #> 513          9      91       68      NA      NA 24.2    0.200  58      neg #> 514          2      91       62      NA      NA 27.3    0.525  22      neg #> 515          3      99       54      19      86 25.6    0.154  24      neg #> 518          7     125       86      NA      NA 37.6    0.304  51      neg #> 519         13      76       60      NA      NA 32.8    0.180  41      neg #> 520          6     129       90       7     326 19.6    0.582  60      neg #> 521          2      68       70      32      66 25.0    0.187  25      neg #> 522          3     124       80      33     130 33.2    0.305  26      neg #> 523          6     114       NA      NA      NA   NA    0.189  26      neg #> 525          3     125       58      NA      NA 31.6    0.151  24      neg #> 526          3      87       60      18      NA 21.8    0.444  21      neg #> 527          1      97       64      19      82 18.2    0.299  21      neg #> 528          3     116       74      15     105 26.3    0.107  24      neg #> 529          0     117       66      31     188 30.8    0.493  22      neg #> 530          0     111       65      NA      NA 24.6    0.660  31      neg #> 531          2     122       60      18     106 29.8    0.717  22      neg #> 532          0     107       76      NA      NA 45.3    0.686  24      neg #> 533          1      86       66      52      65 41.3    0.917  29      neg #> 534          6      91       NA      NA      NA 29.8    0.501  31      neg #> 535          1      77       56      30      56 33.3    1.251  24      neg #> 537          0     105       90      NA      NA 29.6    0.197  46      neg #> 538          0      57       60      NA      NA 21.7    0.735  67      neg #> 539          0     127       80      37     210 36.3    0.804  23      neg #> 544          4      84       90      23      56 39.5    0.159  25      neg #> 545          1      88       78      29      76 32.0    0.365  29      neg #> 548          4     131       68      21     166 33.1    0.160  28      neg #> 549          1     164       82      43      67 32.8    0.341  50      neg #> 550          4     189      110      31      NA 28.5    0.680  37      neg #> 551          1     116       70      28      NA 27.4    0.204  21      neg #> 552          3      84       68      30     106 31.9    0.591  25      neg #> 553          6     114       88      NA      NA 27.8    0.247  66      neg #> 554          1      88       62      24      44 29.9    0.422  23      neg #> 555          1      84       64      23     115 36.9    0.471  28      neg #> 556          7     124       70      33     215 25.5    0.161  37      neg #> 557          1      97       70      40      NA 38.1    0.218  30      neg #> 558          8     110       76      NA      NA 27.8    0.237  58      neg #> 559         11     103       68      40      NA 46.2    0.126  42      neg #> 560         11      85       74      NA      NA 30.1    0.300  35      neg #> 563          1      87       68      34      77 37.6    0.401  24      neg #> 564          6      99       60      19      54 26.9    0.497  32      neg #> 565          0      91       80      NA      NA 32.4    0.601  27      neg #> 566          2      95       54      14      88 26.1    0.748  22      neg #> 567          1      99       72      30      18 38.6    0.412  21      neg #> 568          6      92       62      32     126 32.0    0.085  46      neg #> 569          4     154       72      29     126 31.3    0.338  37      neg #> 571          3      78       70      NA      NA 32.5    0.270  39      neg #> 572          2     130       96      NA      NA 22.6    0.268  21      neg #> 573          3     111       58      31      44 29.5    0.430  22      neg #> 574          2      98       60      17     120 34.7    0.198  22      neg #> 575          1     143       86      30     330 30.1    0.892  23      neg #> 576          1     119       44      47      63 35.5    0.280  25      neg #> 577          6     108       44      20     130 24.0    0.813  35      neg #> 579         10     133       68      NA      NA 27.0    0.245  36      neg #> 582          6     109       60      27      NA 25.0    0.206  27      neg #> 583         12     121       78      17      NA 26.5    0.259  62      neg #> 584          8     100       76      NA      NA 38.7    0.190  42      neg #> 586          1      93       56      11      NA 22.5    0.417  22      neg #> 588          6     103       66      NA      NA 24.3    0.249  29      neg #> 590          0      73       NA      NA      NA 21.1    0.342  25      neg #> 592          2     112       78      50     140 39.4    0.175  24      neg #> 594          2      82       52      22     115 28.5    1.699  25      neg #> 595          6     123       72      45     230 33.6    0.733  34      neg #> 597          0      67       76      NA      NA 45.3    0.194  46      neg #> 598          1      89       24      19      25 27.8    0.559  21      neg #> 600          1     109       38      18     120 23.1    0.407  26      neg #> 601          1     108       88      19      NA 27.1    0.400  24      neg #> 602          6      96       NA      NA      NA 23.7    0.190  28      neg #> 603          1     124       74      36      NA 27.8    0.100  30      neg #> 606          1     124       60      32      NA 35.8    0.514  21      neg #> 608          1      92       62      25      41 19.5    0.482  25      neg #> 609          0     152       82      39     272 41.5    0.270  27      neg #> 610          1     111       62      13     182 24.0    0.138  23      neg #> 611          3     106       54      21     158 30.9    0.292  24      neg #> 614          6     105       80      28      NA 32.5    0.878  26      neg #> 616          3     106       72      NA      NA 25.8    0.207  27      neg #> 617          6     117       96      NA      NA 28.7    0.157  30      neg #> 618          2      68       62      13      15 20.1    0.257  23      neg #> 621          2     112       86      42     160 38.4    0.246  28      neg #> 622          2      92       76      20      NA 24.2    1.698  28      neg #> 623          6     183       94      NA      NA 40.8    1.461  45      neg #> 624          0      94       70      27     115 43.5    0.347  21      neg #> 625          2     108       64      NA      NA 30.8    0.158  21      neg #> 626          4      90       88      47      54 37.7    0.362  29      neg #> 627          0     125       68      NA      NA 24.7    0.206  21      neg #> 628          0     132       78      NA      NA 32.4    0.393  21      neg #> 629          5     128       80      NA      NA 34.6    0.144  45      neg #> 630          4      94       65      22      NA 24.7    0.148  21      neg #> 632          0     102       78      40      90 34.5    0.238  24      neg #> 633          2     111       60      NA      NA 26.2    0.343  23      neg #> 634          1     128       82      17     183 27.5    0.115  22      neg #> 635         10      92       62      NA      NA 25.9    0.167  31      neg #> 637          5     104       74      NA      NA 28.8    0.153  48      neg #> 638          2      94       76      18      66 31.6    0.649  23      neg #> 640          1     100       74      12      46 19.5    0.149  28      neg #> 641          0     102       86      17     105 29.3    0.695  27      neg #> 642          4     128       70      NA      NA 34.3    0.303  24      neg #> 644          4      90       NA      NA      NA 28.0    0.610  31      neg #> 645          3     103       72      30     152 27.6    0.730  27      neg #> 646          2     157       74      35     440 39.4    0.134  30      neg #> 650          0     107       60      25      NA 26.4    0.133  23      neg #> 651          1      91       54      25     100 25.2    0.234  23      neg #> 652          1     117       60      23     106 33.8    0.466  27      neg #> 653          5     123       74      40      77 34.1    0.269  28      neg #> 654          2     120       54      NA      NA 26.8    0.455  27      neg #> 655          1     106       70      28     135 34.2    0.142  22      neg #> 657          2     101       58      35      90 21.8    0.155  22      neg #> 658          1     120       80      48     200 38.9    1.162  41      neg #> 659         11     127      106      NA      NA 39.0    0.190  51      neg #> 661         10     162       84      NA      NA 27.7    0.182  54      neg #> 666          1     112       80      45     132 34.8    0.217  24      neg #> 669          6      98       58      33     190 34.0    0.430  43      neg #> 670          9     154       78      30     100 30.9    0.164  45      neg #> 671          6     165       68      26     168 33.6    0.631  49      neg #> 672          1      99       58      10      NA 25.4    0.551  21      neg #> 673         10      68      106      23      49 35.5    0.285  47      neg #> 674          3     123      100      35     240 57.3    0.880  22      neg #> 675          8      91       82      NA      NA 35.6    0.587  68      neg #> 678          0      93       60      NA      NA 35.3    0.263  25      neg #> 680          2     101       58      17     265 24.2    0.614  23      neg #> 681          2      56       56      28      45 24.2    0.332  22      neg #> 683          0      95       64      39     105 44.6    0.366  22      neg #> 685          5     136       82      NA      NA   NA    0.640  69      neg #> 686          2     129       74      26     205 33.2    0.591  25      neg #> 687          3     130       64      NA      NA 23.1    0.314  22      neg #> 688          1     107       50      19      NA 28.3    0.181  29      neg #> 689          1     140       74      26     180 24.1    0.828  23      neg #> 691          8     107       80      NA      NA 24.6    0.856  34      neg #> 693          2     121       70      32      95 39.1    0.886  23      neg #> 695          2      90       60      NA      NA 23.5    0.191  25      neg #> 698          0      99       NA      NA      NA 25.0    0.253  22      neg #> 699          4     127       88      11     155 34.5    0.598  28      neg #> 700          4     118       70      NA      NA 44.5    0.904  26      neg #> 701          2     122       76      27     200 35.9    0.483  26      neg #> 704          2     129       NA      NA      NA 38.5    0.304  41      neg #> 705          4     110       76      20     100 28.4    0.118  27      neg #> 706          6      80       80      36      NA 39.8    0.177  28      neg #> 708          2     127       46      21     335 34.4    0.176  22      neg #> 711          3     158       64      13     387 31.2    0.295  24      neg #> 712          5     126       78      27      22 29.6    0.439  40      neg #> 714          0     134       58      20     291 26.4    0.352  21      neg #> 715          3     102       74      NA      NA 29.5    0.121  32      neg #> 718         10      94       72      18      NA 23.1    0.595  56      neg #> 719          1     108       60      46     178 35.5    0.415  24      neg #> 721          4      83       86      19      NA 29.3    0.317  34      neg #> 722          1     114       66      36     200 38.1    0.289  21      neg #> 724          5     117       86      30     105 39.1    0.251  42      neg #> 725          1     111       94      NA      NA 32.8    0.265  45      neg #> 726          4     112       78      40      NA 39.4    0.236  38      neg #> 727          1     116       78      29     180 36.1    0.496  25      neg #> 728          0     141       84      26      NA 32.4    0.433  22      neg #> 729          2     175       88      NA      NA 22.9    0.326  22      neg #> 730          2      92       52      NA      NA 30.1    0.141  22      neg #> 734          2     106       56      27     165 29.0    0.426  22      neg #> 735          2     105       75      NA      NA 23.3    0.560  53      neg #> 736          4      95       60      32      NA 35.4    0.284  28      neg #> 737          0     126       86      27     120 27.4    0.515  21      neg #> 738          8      65       72      23      NA 32.0    0.600  42      neg #> 739          2      99       60      17     160 36.6    0.453  21      neg #> 742          3     102       44      20      94 30.8    0.400  26      neg #> 743          1     109       58      18     116 28.5    0.219  22      neg #> 745         13     153       88      37     140 40.6    1.174  39      neg #> 746         12     100       84      33     105 30.0    0.488  46      neg #> 748          1      81       74      41      57 46.3    1.096  32      neg #> 752          1     121       78      39      74 39.0    0.261  28      neg #> 753          3     108       62      24      NA 26.0    0.223  25      neg #> 757          7     137       90      41      NA 32.0    0.391  39      neg #> 759          1     106       76      NA      NA 37.5    0.197  26      neg #> 761          2      88       58      26      16 28.4    0.766  22      neg #> 763          9      89       62      NA      NA 22.5    0.142  33      neg #> 764         10     101       76      48     180 32.9    0.171  63      neg #> 765          2     122       70      27      NA 36.8    0.340  27      neg #> 766          5     121       72      23     112 26.2    0.245  30      neg #> 768          1      93       70      31      NA 30.4    0.315  23      neg #> 436          0     141       NA      NA      NA 42.4    0.205  29      pos #> 236          4     171       72      NA      NA 43.6    0.479  26      pos #> 665          6     115       60      39      NA 33.7    0.245  40      pos #> 756          1     128       88      39     110 36.5    1.057  37      pos #> 709          9     164       78      NA      NA 32.8    0.148  45      pos #> 665.1        6     115       60      39      NA 33.7    0.245  40      pos #> 62           8     133       72      NA      NA 32.9    0.270  39      pos #> 217          5     109       62      41     129 35.8    0.514  25      pos #> 271         10     101       86      37      NA 45.6    1.136  38      pos #> 677          9     156       86      NA      NA 24.8    0.230  53      pos #> 315          7     109       80      31      NA 35.9    1.127  43      pos #> 713         10     129       62      36      NA 41.2    0.441  38      pos #> 733          2     174       88      37     120 44.5    0.646  24      pos #> 546          8     186       90      35     225 34.5    0.423  37      pos #> 117          5     124       74      NA      NA 34.0    0.220  38      pos #> 656          2     155       52      27     540 38.7    0.240  25      pos #> 749          3     187       70      22     200 36.4    0.408  36      pos #> 639          7      97       76      32      91 40.9    0.871  32      pos #> 1            6     148       72      35      NA 33.6    0.627  50      pos #> 54           8     176       90      34     300 33.7    0.467  58      pos #> 665.2        6     115       60      39      NA 33.7    0.245  40      pos #> 524          9     130       70      NA      NA 34.2    0.652  45      pos #> 407          4     115       72      NA      NA 28.9    0.376  46      pos #> 126          1      88       30      42      99 55.0    0.496  26      pos #> 517          9     145       88      34     165 30.3    0.771  53      pos #> 220          5     112       66      NA      NA 37.8    0.261  41      pos #> 270          2     146       NA      NA      NA 27.5    0.240  28      pos #> 692         13     158      114      NA      NA 42.3    0.257  44      pos #> 459         10     148       84      48     237 37.6    1.001  51      pos #> 445          4     117       62      12      NA 29.7    0.380  30      pos #> 160         17     163       72      41     114 40.9    0.817  47      pos #> 395          4     158       78      NA      NA 32.9    0.803  31      pos #> 409          8     197       74      NA      NA 25.9    1.191  39      pos #> 222          2     158       90      NA      NA 31.6    0.805  66      pos #> 198          3     107       62      13      48 22.9    0.678  23      pos #> 741         11     120       80      37     150 42.3    0.785  48      pos #> 648          0     179       50      36     159 37.8    0.455  22      pos #> 367          6     124       72      NA      NA 27.6    0.368  29      pos #> 315.1        7     109       80      31      NA 35.9    1.127  43      pos #> 288          1     119       86      39     220 45.6    0.808  29      pos #> 313          2     155       74      17      96 26.6    0.433  27      pos #> 110          0      95       85      25      36 37.4    0.247  24      pos #> 285          2     108       80      NA      NA 27.0    0.259  52      pos #> 153          9     156       86      28     155 34.3    1.189  42      pos #> 376         12     140       82      43     325 39.2    0.528  58      pos #> 236.1        4     171       72      NA      NA 43.6    0.479  26      pos #> 649         11     136       84      35     130 28.3    0.260  42      pos #> 717          3     173       78      39     185 33.8    0.970  31      pos #> 7            3      78       50      32      88 31.0    0.248  26      pos #> 186          7     194       68      28      NA 35.9    0.745  41      pos #> 444          8     108       70      NA      NA 30.5    0.955  33      pos #> 580          2     197       70      99      NA 34.7    0.575  62      pos #> 679          3     121       52      NA      NA 36.0    0.127  25      pos #> 410          1     172       68      49     579 42.4    0.702  28      pos #> 110.1        0      95       85      25      36 37.4    0.247  24      pos #> 445.1        4     117       62      12      NA 29.7    0.380  30      pos #> 340          7     178       84      NA      NA 39.9    0.331  41      pos #> 46           0     180       66      39      NA 42.0    1.893  25      pos #> 361          5     189       64      33     325 31.2    0.583  29      pos #> 129          1     117       88      24     145 34.5    0.403  40      pos #> 130          0     105       84      NA      NA 27.9    0.741  62      pos #> 667          4     145       82      18      NA 32.5    0.235  70      pos #> 324         13     152       90      33      29 26.8    0.731  43      pos #> 271.1       10     101       86      37      NA 45.6    1.136  38      pos #> 371          3     173       82      48     465 38.4    2.137  25      pos #> 371.1        3     173       82      48     465 38.4    2.137  25      pos #> 23           7     196       90      NA      NA 39.8    0.451  41      pos #> 662          1     199       76      43      NA 42.9    1.394  22      pos #> 160.1       17     163       72      41     114 40.9    0.817  47      pos #> 239          9     164       84      21      NA 30.8    0.831  32      pos #> 188          1     128       98      41      58 32.0    1.321  33      pos #> 707         10     115       NA      NA      NA   NA    0.261  30      pos #> 370          1     133      102      28     140 32.8    0.234  45      pos #> 619          9     112       82      24      NA 28.2    1.282  50      pos #> 339          9     152       78      34     171 34.2    0.893  33      pos #> 188.1        1     128       98      41      58 32.0    1.321  33      pos #> 67           0     109       88      30      NA 32.5    0.855  38      pos #> 758          0     123       72      NA      NA 36.3    0.258  52      pos #> 340.1        7     178       84      NA      NA 39.9    0.331  41      pos #> 481          3     158       70      30     328 35.5    0.344  35      pos #> 605          4     183       NA      NA      NA 28.4    0.212  36      pos #> 388          8     105      100      36      NA 43.3    0.239  45      pos #> 221          0     177       60      29     478 34.6    1.072  21      pos #> 187          8     181       68      36     495 30.1    0.615  60      pos #> 449          0     104       64      37      64 33.6    0.510  22      pos #> 425          8     151       78      32     210 42.9    0.516  36      pos #> 731          3     130       78      23      79 28.4    0.323  34      pos #> 18           7     107       74      NA      NA 29.6    0.254  31      pos #> 130.1        0     105       84      NA      NA 27.9    0.741  62      pos #> 270.1        2     146       NA      NA      NA 27.5    0.240  28      pos #> 244          6     119       50      22     176 27.1    1.318  33      pos #> 647          1     167       74      17     144 23.4    0.447  33      pos #> 217.1        5     109       62      41     129 35.8    0.514  25      pos #> 499          7     195       70      33     145 25.1    0.163  55      pos #> 656.1        2     155       52      27     540 38.7    0.240  25      pos #> 750          6     162       62      NA      NA 24.3    0.178  50      pos #> 517.1        9     145       88      34     165 30.3    0.771  53      pos #> 542          3     128       72      25     190 32.4    0.549  27      pos #> 507          0     180       90      26      90 36.5    0.314  35      pos #> 110.2        0      95       85      25      36 37.4    0.247  24      pos #> 744          9     140       94      NA      NA 32.7    0.734  45      pos #> 456         14     175       62      30      NA 33.6    0.212  38      pos #> 536          4     132       NA      NA      NA 32.9    0.302  23      pos #> 220.1        5     112       66      NA      NA 37.8    0.261  41      pos #> 117.1        5     124       74      NA      NA 34.0    0.220  38      pos #> 25          11     143       94      33     146 36.6    0.254  51      pos #> 160.2       17     163       72      41     114 40.9    0.817  47      pos #> 39           2      90       68      42      NA 38.2    0.503  27      pos #> 129.1        1     117       88      24     145 34.5    0.403  40      pos #> 494          4     125       70      18     122 28.9    1.144  45      pos #> 270.2        2     146       NA      NA      NA 27.5    0.240  28      pos #> 313.1        2     155       74      17      96 26.6    0.433  27      pos #> 605.1        4     183       NA      NA      NA 28.4    0.212  36      pos #> 395.1        4     158       78      NA      NA 32.9    0.803  31      pos #> 444.1        8     108       70      NA      NA 30.5    0.955  33      pos #> 756.1        1     128       88      39     110 36.5    1.057  37      pos #> 302          2     144       58      33     135 31.6    0.422  25      pos #> 293          2     128       78      37     182 43.3    1.224  31      pos #> 178          0     129      110      46     130 67.1    0.319  26      pos #> 221.1        0     177       60      29     478 34.6    1.072  21      pos #> 214          0     140       65      26     130 42.6    0.431  24      pos #> 679.1        3     121       52      NA      NA 36.0    0.127  25      pos #> 732          8     120       86      NA      NA 28.4    0.259  22      pos #> 511         12      84       72      31      NA 29.7    0.297  46      pos #> 398          0     131       66      40      NA 34.3    0.196  22      pos #> 153.1        9     156       86      28     155 34.3    1.189  42      pos #> 755          8     154       78      32      NA 32.4    0.443  45      pos #> 639.1        7      97       76      32      91 40.9    0.871  32      pos #> 180          5     130       82      NA      NA 39.1    0.956  37      pos #> 707.1       10     115       NA      NA      NA   NA    0.261  30      pos #> 615         11     138       74      26     144 36.1    0.557  50      pos #> 750.1        6     162       62      NA      NA 24.3    0.178  50      pos #> 403          5     136       84      41      88 35.0    0.286  35      pos #> 648.1        0     179       50      36     159 37.8    0.455  22      pos #> 350          5      NA       80      32      NA 41.0    0.346  37      pos #> 117.2        5     124       74      NA      NA 34.0    0.220  38      pos #> 407.1        4     115       72      NA      NA 28.9    0.376  46      pos #> 409.1        8     197       74      NA      NA 25.9    1.191  39      pos #> 697          3     169       74      19     125 29.9    0.268  31      pos #> 160.3       17     163       72      41     114 40.9    0.817  47      pos #> 547          5     187       76      27     207 43.6    1.034  53      pos #> 643          6     147       80      NA      NA 29.5    0.178  50      pos #> 676          6     195       70      NA      NA 30.9    0.328  31      pos #> 741.1       11     120       80      37     150 42.3    0.785  48      pos #> 116          4     146       92      NA      NA 31.2    0.539  61      pos #> 662.1        1     199       76      43      NA 42.9    1.394  22      pos #> 667.1        4     145       82      18      NA 32.5    0.235  70      pos #> 449.1        0     104       64      37      64 33.6    0.510  22      pos #> 217.2        5     109       62      41     129 35.8    0.514  25      pos #> 731.1        3     130       78      23      79 28.4    0.323  34      pos #> 327          1     122       64      32     156 35.1    0.692  30      pos #> 115          7     160       54      32     175 30.5    0.588  39      pos #> 23.1         7     196       90      NA      NA 39.8    0.451  41      pos #> 16           7     100       NA      NA      NA 30.0    0.484  32      pos #> 219          5      85       74      22      NA 29.0    1.224  32      pos #> 338          5     115       76      NA      NA 31.2    0.343  44      pos #> 12          10     168       74      NA      NA 38.0    0.537  34      pos #> 599          1     173       74      NA      NA 36.8    0.088  38      pos #> 117.3        5     124       74      NA      NA 34.0    0.220  38      pos #> 636         13     104       72      NA      NA 31.2    0.465  38      pos #> 647.1        1     167       74      17     144 23.4    0.447  33      pos #> 100          1     122       90      51     220 49.7    0.325  31      pos #> 395.2        4     158       78      NA      NA 32.9    0.803  31      pos #> 198.1        3     107       62      13      48 22.9    0.678  23      pos #> 187.1        8     181       68      36     495 30.1    0.615  60      pos #> 449.2        0     104       64      37      64 33.6    0.510  22      pos #> 79           0     131       NA      NA      NA 43.2    0.270  26      pos #> 44           9     171      110      24     240 45.4    0.721  54      pos #> 243          3     139       54      NA      NA 25.6    0.402  22      pos #> 656.2        2     155       52      27     540 38.7    0.240  25      pos #> 358         13     129       NA      30      NA 39.9    0.569  44      pos #> 477          2     105       80      45     191 33.7    0.711  29      pos #> 244.1        6     119       50      22     176 27.1    1.318  33      pos #> 536.1        4     132       NA      NA      NA 32.9    0.302  23      pos #> 46.1         0     180       66      39      NA 42.0    1.893  25      pos #> 231          4     142       86      NA      NA 44.0    0.645  22      pos #> 46.2         0     180       66      39      NA 42.0    1.893  25      pos #> 481.1        3     158       70      30     328 35.5    0.344  35      pos #> 200          4     148       60      27     318 30.9    0.150  29      pos #> 428          1     181       64      30     180 34.1    0.328  38      pos #> 327.1        1     122       64      32     156 35.1    0.692  30      pos #> 758.1        0     123       72      NA      NA 36.3    0.258  52      pos #> 129.2        1     117       88      24     145 34.5    0.403  40      pos #> 755.1        8     154       78      32      NA 32.4    0.443  45      pos #> 405          5     168       64      NA      NA 32.9    0.135  41      pos #> 176          8     179       72      42     130 32.7    0.719  36      pos #> 71           2     100       66      20      90 32.9    0.867  28      pos #> 409.2        8     197       74      NA      NA 25.9    1.191  39      pos #> 85           5     137      108      NA      NA 48.8    0.227  37      pos #> 165          0     131       88      NA      NA 31.6    0.743  32      pos #> 89          15     136       70      32     110 37.1    0.153  43      pos #> 446          0     180       78      63      14 59.4    2.420  25      pos #> 619.1        9     112       82      24      NA 28.2    1.282  50      pos #> 231.1        4     142       86      NA      NA 44.0    0.645  22      pos #> 3            8     183       64      NA      NA 23.3    0.672  32      pos #> 444.2        8     108       70      NA      NA 30.5    0.955  33      pos #> 445.2        4     117       62      12      NA 29.7    0.380  30      pos #> 703          1     168       88      29      NA 35.0    0.905  52      pos #> 194         11     135       NA      NA      NA 52.3    0.578  40      pos #> 664          9     145       80      46     130 37.9    0.637  40      pos #> 194.1       11     135       NA      NA      NA 52.3    0.578  40      pos #> 740          1     102       74      NA      NA 39.5    0.293  42      pos #> 720          5      97       76      27      NA 35.6    0.378  52      pos #> 387          5     116       74      29      NA 32.3    0.660  35      pos #> 639.2        7      97       76      32      91 40.9    0.871  32      pos #> 400          3     193       70      31      NA 34.9    0.241  25      pos #> 713.1       10     129       62      36      NA 41.2    0.441  38      pos #> 20           1     115       70      30      96 34.6    0.529  32      pos #> 547.1        5     187       76      27     207 43.6    1.034  53      pos #> 459.1       10     148       84      48     237 37.6    1.001  51      pos #> 57           7     187       68      39     304 37.7    0.254  41      pos #> 562          0     198       66      32     274 41.3    0.502  28      pos #> 216         12     151       70      40     271 41.8    0.742  38      pos #> 238          0     179       90      27      NA 44.1    0.686  23      pos #> 648.2        0     179       50      36     159 37.8    0.455  22      pos #> 430          1      95       82      25     180 35.0    0.233  43      pos #> 85.1         5     137      108      NA      NA 48.8    0.227  37      pos #> 115.1        7     160       54      32     175 30.5    0.588  39      pos #> 294          1     128       48      45     194 40.5    0.613  24      pos #> 733.1        2     174       88      37     120 44.5    0.646  24      pos #> 591         11     111       84      40      NA 46.8    0.925  45      pos #> 387.1        5     116       74      29      NA 32.3    0.660  35      pos #> 405.1        5     168       64      NA      NA 32.9    0.135  41      pos #> 256          1     113       64      35      NA 33.6    0.543  21      pos #> 323          0     124       70      20      NA 27.4    0.254  36      pos #> 176.1        8     179       72      42     130 32.7    0.719  36      pos #> 299         14     100       78      25     184 36.6    0.412  46      pos #> 307         10     161       68      23     132 25.5    0.326  47      pos #> 172          6     134       70      23     130 35.4    0.542  29      pos #> 682          0     162       76      36      NA 49.6    0.364  26      pos #> 323.1        0     124       70      20      NA 27.4    0.254  36      pos #> 663          8     167      106      46     231 37.6    0.165  43      pos #> 27           7     147       76      NA      NA 39.4    0.257  43      pos #> 731.2        3     130       78      23      79 28.4    0.323  34      pos #> 189          8     109       76      39     114 27.9    0.640  31      pos #> 494.1        4     125       70      18     122 28.9    1.144  45      pos #> 562.1        0     198       66      32     274 41.3    0.502  28      pos #> 26          10     125       70      26     115 31.1    0.205  41      pos #> 323.2        0     124       70      20      NA 27.4    0.254  36      pos #> 9            2     197       70      45     543 30.5    0.158  53      pos #> 449.3        0     104       64      37      64 33.6    0.510  22      pos #> 744.1        9     140       94      NA      NA 32.7    0.734  45      pos #> 199          4     109       64      44      99 34.8    0.905  26      pos #> 713.2       10     129       62      36      NA 41.2    0.441  38      pos #> 299.1       14     100       78      25     184 36.6    0.412  46      pos #> 494.2        4     125       70      18     122 28.9    1.144  45      pos #> 656.3        2     155       52      27     540 38.7    0.240  25      pos #> 217.3        5     109       62      41     129 35.8    0.514  25      pos #> 665.3        6     115       60      39      NA 33.7    0.245  40      pos #> 361.1        5     189       64      33     325 31.2    0.583  29      pos #> 409.3        8     197       74      NA      NA 25.9    1.191  39      pos #> 401          4      95       64      NA      NA 32.0    0.161  31      pos #> 449.4        0     104       64      37      64 33.6    0.510  22      pos #> 101          1     163       72      NA      NA 39.0    1.222  33      pos #> 445.3        4     117       62      12      NA 29.7    0.380  30      pos #> 198.2        3     107       62      13      48 22.9    0.678  23      pos #> 129.3        1     117       88      24     145 34.5    0.403  40      pos #> 210          7     184       84      33      NA 35.5    0.355  41      pos #> 684          4     125       80      NA      NA 32.3    0.536  27      pos #> 679.2        3     121       52      NA      NA 36.0    0.127  25      pos #> 194.2       11     135       NA      NA      NA 52.3    0.578  40      pos #> 38           9     102       76      37      NA 32.9    0.665  46      pos #> 67.1         0     109       88      30      NA 32.5    0.855  38      pos #> 436.1        0     141       NA      NA      NA 42.4    0.205  29      pos #> 436.2        0     141       NA      NA      NA 42.4    0.205  29      pos #> 694          7     129       68      49     125 38.5    0.439  43      pos #> 46.3         0     180       66      39      NA 42.0    1.893  25      pos #> 656.4        2     155       52      27     540 38.7    0.240  25      pos #> 32           3     158       76      36     245 31.6    0.851  28      pos #> 277          7     106       60      24      NA 26.5    0.296  29      pos #> 643.1        6     147       80      NA      NA 29.5    0.178  50      pos #> 580.1        2     197       70      99      NA 34.7    0.575  62      pos #> 318          3     182       74      NA      NA 30.5    0.345  29      pos #> 85.2         5     137      108      NA      NA 48.8    0.227  37      pos #> 324.1       13     152       90      33      29 26.8    0.731  43      pos #> 731.3        3     130       78      23      79 28.4    0.323  34      pos #> 388.1        8     105      100      36      NA 43.3    0.239  45      pos #> 516          3     163       70      18     105 31.6    0.268  28      pos #> 664.1        9     145       80      46     130 37.9    0.637  40      pos #> 25.1        11     143       94      33     146 36.6    0.254  51      pos #> 320          6     194       78      NA      NA 23.5    0.129  59      pos #> 389          5     144       82      26     285 32.0    0.452  58      pos #> 596          0     188       82      14     185 32.0    0.682  22      pos #> 507.1        0     180       90      26      90 36.5    0.314  35      pos #> 190          5     139       80      35     160 31.6    0.361  25      pos #> 10           8     125       96      NA      NA   NA    0.232  54      pos #> 631          7     114       64      NA      NA 27.4    0.732  34      pos #> 110.3        0      95       85      25      36 37.4    0.247  24      pos #> 217.4        5     109       62      41     129 35.8    0.514  25      pos #> 415          0     138       60      35     167 34.6    0.534  21      pos #> 744.2        9     140       94      NA      NA 32.7    0.734  45      pos #> 281          0     146       70      NA      NA 37.9    0.334  28      pos #> 469          8     120       NA      NA      NA 30.0    0.183  38      pos #> 697.1        3     169       74      19     125 29.9    0.268  31      pos #> 720.1        5      97       76      27      NA 35.6    0.378  52      pos #> 244.2        6     119       50      22     176 27.1    1.318  33      pos #> 751          4     136       70      NA      NA 31.2    1.182  22      pos #> 511.1       12      84       72      31      NA 29.7    0.297  46      pos #> 329          2     102       86      36     120 45.5    0.127  23      pos #> 71.1         2     100       66      20      90 32.9    0.867  28      pos #> 750.2        6     162       62      NA      NA 24.3    0.178  50      pos #> 144         10     108       66      NA      NA 32.4    0.272  42      pos #> 403.1        5     136       84      41      88 35.0    0.286  35      pos #> 153.2        9     156       86      28     155 34.3    1.189  42      pos #> 299.2       14     100       78      25     184 36.6    0.412  46      pos #> 178.1        0     129      110      46     130 67.1    0.319  26      pos #> 503          6      NA       68      41      NA 39.0    0.727  41      pos #> 1.1          6     148       72      35      NA 33.6    0.627  50      pos #> 67.2         0     109       88      30      NA 32.5    0.855  38      pos #> 410.1        1     172       68      49     579 42.4    0.702  28      pos #> 407.2        4     115       72      NA      NA 28.9    0.376  46      pos #> 648.3        0     179       50      36     159 37.8    0.455  22      pos #> 663.1        8     167      106      46     231 37.6    0.165  43      pos #> 350.1        5      NA       80      32      NA 41.0    0.346  37      pos #> 541          8     100       74      40     215 39.4    0.661  43      pos #> 44.1         9     171      110      24     240 45.4    0.721  54      pos #> 313.2        2     155       74      17      96 26.6    0.433  27      pos #> 71.2         2     100       66      20      90 32.9    0.867  28      pos #> 216.1       12     151       70      40     271 41.8    0.742  38      pos #> 605.2        4     183       NA      NA      NA 28.4    0.212  36      pos #> 293.1        2     128       78      37     182 43.3    1.224  31      pos #> 220.2        5     112       66      NA      NA 37.8    0.261  41      pos #> 267          0     138       NA      NA      NA 36.3    0.933  25      pos #> 732.1        8     120       86      NA      NA 28.4    0.259  22      pos #> 751.1        4     136       70      NA      NA 31.2    1.182  22      pos #> 702          6     125       78      31      NA 27.6    0.565  49      pos #> 747          1     147       94      41      NA 49.3    0.358  27      pos #> 193          7     159       66      NA      NA 30.4    0.383  36      pos #> 409.4        8     197       74      NA      NA 25.9    1.191  39      pos #> 160.4       17     163       72      41     114 40.9    0.817  47      pos #> 85.3         5     137      108      NA      NA 48.8    0.227  37      pos #> 10.1         8     125       96      NA      NA   NA    0.232  54      pos #> 324.2       13     152       90      33      29 26.8    0.731  43      pos #> 732.2        8     120       86      NA      NA 28.4    0.259  22      pos #> 456.1       14     175       62      30      NA 33.6    0.212  38      pos #> 517.2        9     145       88      34     165 30.3    0.771  53      pos #> 301          0     167       NA      NA      NA 32.3    0.839  30      pos #> 747.1        1     147       94      41      NA 49.3    0.358  27      pos #> 591.1       11     111       84      40      NA 46.8    0.925  45      pos #> 696          7     142       90      24     480 30.4    0.128  43      pos #> 299.3       14     100       78      25     184 36.6    0.412  46      pos #> 239.1        9     164       84      21      NA 30.8    0.831  32      pos #> 696.1        7     142       90      24     480 30.4    0.128  43      pos #> 62.1         8     133       72      NA      NA 32.9    0.270  39      pos #> 762          9     170       74      31      NA 44.0    0.403  43      pos #> 7.1          3      78       50      32      88 31.0    0.248  26      pos #> 445.4        4     117       62      12      NA 29.7    0.380  30      pos #> 237          7     181       84      21     192 35.9    0.586  51      pos #> 12.1        10     168       74      NA      NA 38.0    0.537  34      pos #> 304          5     115       98      NA      NA 52.9    0.209  28      pos #> 762.1        9     170       74      31      NA 44.0    0.403  43      pos #> 430.1        1      95       82      25     180 35.0    0.233  43      pos #> 172.1        6     134       70      23     130 35.4    0.542  29      pos #> 171          6     102       82      NA      NA 30.8    0.180  36      pos #> 284          7     161       86      NA      NA 30.4    0.165  47      pos #> 115.2        7     160       54      32     175 30.5    0.588  39      pos #> 546.1        8     186       90      35     225 34.5    0.423  37      pos #> 338.1        5     115       76      NA      NA 31.2    0.343  44      pos #> 456.2       14     175       62      30      NA 33.6    0.212  38      pos #> 694.1        7     129       68      49     125 38.5    0.439  43      pos #> 733.2        2     174       88      37     120 44.5    0.646  24      pos #> 285.1        2     108       80      NA      NA 27.0    0.259  52      pos #> 756.2        1     128       88      39     110 36.5    1.057  37      pos #> 456.3       14     175       62      30      NA 33.6    0.212  38      pos #> 101.1        1     163       72      NA      NA 39.0    1.222  33      pos #> 130.2        0     105       84      NA      NA 27.9    0.741  62      pos #> 732.3        8     120       86      NA      NA 28.4    0.259  22      pos #> 231.2        4     142       86      NA      NA 44.0    0.645  22      pos #> 605.3        4     183       NA      NA      NA 28.4    0.212  36      pos #> 121          0     162       76      56     100 53.2    0.759  25      pos #> 703.1        1     168       88      29      NA 35.0    0.905  52      pos #> 663.2        8     167      106      46     231 37.6    0.165  43      pos #> 207          8     196       76      29     280 37.5    0.605  57      pos #> 189.1        8     109       76      39     114 27.9    0.640  31      pos #> 756.3        1     128       88      39     110 36.5    1.057  37      pos #> 44.2         9     171      110      24     240 45.4    0.721  54      pos #> 350.2        5      NA       80      32      NA 41.0    0.346  37      pos #> 469.1        8     120       NA      NA      NA 30.0    0.183  38      pos #> 755.2        8     154       78      32      NA 32.4    0.443  45      pos #> 194.3       11     135       NA      NA      NA 52.3    0.578  40      pos #> 32.1         3     158       76      36     245 31.6    0.851  28      pos #> 340.2        7     178       84      NA      NA 39.9    0.331  41      pos #> 589          3     176       86      27     156 33.3    1.154  52      pos #> 190.1        5     139       80      35     160 31.6    0.361  25      pos #> 367.1        6     124       72      NA      NA 27.6    0.368  29      pos #> 23.2         7     196       90      NA      NA 39.8    0.451  41      pos #> 221.2        0     177       60      29     478 34.6    1.072  21      pos #> 459.2       10     148       84      48     237 37.6    1.001  51      pos #> 155          8     188       78      NA      NA 47.9    0.137  43      pos #> 758.2        0     123       72      NA      NA 36.3    0.258  52      pos #> 589.1        3     176       86      27     156 33.3    1.154  52      pos #> 697.2        3     169       74      19     125 29.9    0.268  31      pos #> 231.3        4     142       86      NA      NA 44.0    0.645  22      pos #> 732.4        8     120       86      NA      NA 28.4    0.259  22      pos #> 40           4     111       72      47     207 37.1    1.390  56      pos #> 255         12      92       62       7     258 27.6    0.926  44      pos #> 415.1        0     138       60      35     167 34.6    0.534  21      pos #> 720.2        5      97       76      27      NA 35.6    0.378  52      pos #> 189.2        8     109       76      39     114 27.9    0.640  31      pos #> 110.4        0      95       85      25      36 37.4    0.247  24      pos #> 469.2        8     120       NA      NA      NA 30.0    0.183  38      pos #> 541.1        8     100       74      40     215 39.4    0.661  43      pos #> 219.1        5      85       74      22      NA 29.0    1.224  32      pos #> 301.1        0     167       NA      NA      NA 32.3    0.839  30      pos #> 656.5        2     155       52      27     540 38.7    0.240  25      pos #> 40.1         4     111       72      47     207 37.1    1.390  56      pos #> 5            0     137       40      35     168 43.1    2.288  33      pos #> 731.4        3     130       78      23      79 28.4    0.323  34      pos #> 562.2        0     198       66      32     274 41.3    0.502  28      pos #> 540          3     129       92      49     155 36.4    0.968  32      pos #> 639.3        7      97       76      32      91 40.9    0.871  32      pos #> 613          7     168       88      42     321 38.2    0.787  40      pos #> 716          7     187       50      33     392 33.9    0.826  34      pos #> 243.1        3     139       54      NA      NA 25.6    0.402  22      pos #> 389.1        5     144       82      26     285 32.0    0.452  58      pos #> 165.1        0     131       88      NA      NA 31.6    0.743  32      pos #> 543         10      90       85      32      NA 34.9    0.825  56      pos #> 481.2        3     158       70      30     328 35.5    0.344  35      pos #> 755.3        8     154       78      32      NA 32.4    0.443  45      pos #> 304.1        5     115       98      NA      NA 52.9    0.209  28      pos #> 648.4        0     179       50      36     159 37.8    0.455  22      pos #> 215          9     112       82      32     175 34.2    0.260  36      pos #> 38.1         9     102       76      37      NA 32.9    0.665  46      pos #> 324.3       13     152       90      33      29 26.8    0.731  43      pos #> 25.2        11     143       94      33     146 36.6    0.254  51      pos #> 339.1        9     152       78      34     171 34.2    0.893  33      pos #> 3.1          8     183       64      NA      NA 23.3    0.672  32      pos #> 153.3        9     156       86      28     155 34.3    1.189  42      pos #> 536.2        4     132       NA      NA      NA 32.9    0.302  23      pos #> 339.2        9     152       78      34     171 34.2    0.893  33      pos #> 401.1        4      95       64      NA      NA 32.0    0.161  31      pos #> 199.1        4     109       64      44      99 34.8    0.905  26      pos #> 593          3     132       80      NA      NA 34.4    0.402  44      pos #> 7.2          3      78       50      32      88 31.0    0.248  26      pos #> 516.1        3     163       70      18     105 31.6    0.268  28      pos #> 222.1        2     158       90      NA      NA 31.6    0.805  66      pos #> 420          3     129       64      29     115 26.4    0.219  28      pos #> 415.2        0     138       60      35     167 34.6    0.534  21      pos #> 38.2         9     102       76      37      NA 32.9    0.665  46      pos #> 389.2        5     144       82      26     285 32.0    0.452  58      pos #> 10.2         8     125       96      NA      NA   NA    0.232  54      pos #> 441          0     189      104      25      NA 34.3    0.435  41      pos #> 546.2        8     186       90      35     225 34.5    0.423  37      pos #> 456.4       14     175       62      30      NA 33.6    0.212  38      pos #> 131          4     173       70      14     168 29.7    0.361  33      pos #> 485          0     145       NA      NA      NA 44.2    0.630  31      pos #> 171.1        6     102       82      NA      NA 30.8    0.180  36      pos #> 27.1         7     147       76      NA      NA 39.4    0.257  43      pos #> 540.1        3     129       92      49     155 36.4    0.968  32      pos #> 494.3        4     125       70      18     122 28.9    1.144  45      pos #> 420.1        3     129       64      29     115 26.4    0.219  28      pos #> 662.2        1     199       76      43      NA 42.9    1.394  22      pos #> 407.3        4     115       72      NA      NA 28.9    0.376  46      pos #> 407.4        4     115       72      NA      NA 28.9    0.376  46      pos #> 244.3        6     119       50      22     176 27.1    1.318  33      pos #> 723          1     149       68      29     127 29.3    0.349  42      pos #> 318.1        3     182       74      NA      NA 30.5    0.345  29      pos #> 643.2        6     147       80      NA      NA 29.5    0.178  50      pos #> 288.1        1     119       86      39     220 45.6    0.808  29      pos #> 665.4        6     115       60      39      NA 33.7    0.245  40      pos #> 361.2        5     189       64      33     325 31.2    0.583  29      pos #> 221.3        0     177       60      29     478 34.6    1.072  21      pos #> 499.1        7     195       70      33     145 25.1    0.163  55      pos #> 751.2        4     136       70      NA      NA 31.2    1.182  22      pos #> 320.1        6     194       78      NA      NA 23.5    0.129  59      pos #> 516.2        3     163       70      18     105 31.6    0.268  28      pos #> 656.6        2     155       52      27     540 38.7    0.240  25      pos #> 656.7        2     155       52      27     540 38.7    0.240  25      pos #> 503.1        6      NA       68      41      NA 39.0    0.727  41      pos #> 236.2        4     171       72      NA      NA 43.6    0.479  26      pos #> 409.5        8     197       74      NA      NA 25.9    1.191  39      pos #> 333          1     180       NA      NA      NA 43.3    0.282  41      pos #> 299.4       14     100       78      25     184 36.6    0.412  46      pos #> 648.5        0     179       50      36     159 37.8    0.455  22      pos #> 27.2         7     147       76      NA      NA 39.4    0.257  43      pos #> 14           1     189       60      23     846 30.1    0.398  59      pos #> 485.1        0     145       NA      NA      NA 44.2    0.630  31      pos #> 756.4        1     128       88      39     110 36.5    1.057  37      pos #> 294.1        1     128       48      45     194 40.5    0.613  24      pos #> 485.2        0     145       NA      NA      NA 44.2    0.630  31      pos #> 15           5     166       72      19     175 25.8    0.587  51      pos #> 547.2        5     187       76      27     207 43.6    1.034  53      pos #> 684.1        4     125       80      NA      NA 32.3    0.536  27      pos #> 694.2        7     129       68      49     125 38.5    0.439  43      pos #> 604          7     150       78      29     126 35.2    0.692  54      pos #> 647.2        1     167       74      17     144 23.4    0.447  33      pos #> 684.2        4     125       80      NA      NA 32.3    0.536  27      pos #> 210.1        7     184       84      33      NA 35.5    0.355  41      pos #> 403.2        5     136       84      41      88 35.0    0.286  35      pos #> 44.3         9     171      110      24     240 45.4    0.721  54      pos #> 541.2        8     100       74      40     215 39.4    0.661  43      pos #> 692.1       13     158      114      NA      NA 42.3    0.257  44      pos #> 153.4        9     156       86      28     155 34.3    1.189  42      pos #> 260         11     155       76      28     150 33.3    1.353  51      pos #> 244.4        6     119       50      22     176 27.1    1.318  33      pos #> 751.3        4     136       70      NA      NA 31.2    1.182  22      pos #> 315.2        7     109       80      31      NA 35.9    1.127  43      pos #> 426          4     184       78      39     277 37.0    0.264  31      pos #> 357          1     125       50      40     167 33.3    0.962  28      pos #> 756.5        1     128       88      39     110 36.5    1.057  37      pos  UnderSample(d.pima2, \"diabetes\") #>     pregnant glucose pressure triceps insulin mass pedigree age diabetes #> 1          6     148       72      35      NA 33.6    0.627  50      pos #> 3          8     183       64      NA      NA 23.3    0.672  32      pos #> 5          0     137       40      35     168 43.1    2.288  33      pos #> 7          3      78       50      32      88 31.0    0.248  26      pos #> 9          2     197       70      45     543 30.5    0.158  53      pos #> 10         8     125       96      NA      NA   NA    0.232  54      pos #> 12        10     168       74      NA      NA 38.0    0.537  34      pos #> 14         1     189       60      23     846 30.1    0.398  59      pos #> 15         5     166       72      19     175 25.8    0.587  51      pos #> 16         7     100       NA      NA      NA 30.0    0.484  32      pos #> 17         0     118       84      47     230 45.8    0.551  31      pos #> 18         7     107       74      NA      NA 29.6    0.254  31      pos #> 20         1     115       70      30      96 34.6    0.529  32      pos #> 23         7     196       90      NA      NA 39.8    0.451  41      pos #> 24         9     119       80      35      NA 29.0    0.263  29      pos #> 25        11     143       94      33     146 36.6    0.254  51      pos #> 26        10     125       70      26     115 31.1    0.205  41      pos #> 27         7     147       76      NA      NA 39.4    0.257  43      pos #> 32         3     158       76      36     245 31.6    0.851  28      pos #> 38         9     102       76      37      NA 32.9    0.665  46      pos #> 39         2      90       68      42      NA 38.2    0.503  27      pos #> 40         4     111       72      47     207 37.1    1.390  56      pos #> 44         9     171      110      24     240 45.4    0.721  54      pos #> 46         0     180       66      39      NA 42.0    1.893  25      pos #> 49         7     103       66      32      NA 39.1    0.344  31      pos #> 54         8     176       90      34     300 33.7    0.467  58      pos #> 57         7     187       68      39     304 37.7    0.254  41      pos #> 62         8     133       72      NA      NA 32.9    0.270  39      pos #> 65         7     114       66      NA      NA 32.8    0.258  42      pos #> 67         0     109       88      30      NA 32.5    0.855  38      pos #> 71         2     100       66      20      90 32.9    0.867  28      pos #> 73        13     126       90      NA      NA 43.4    0.583  42      pos #> 79         0     131       NA      NA      NA 43.2    0.270  26      pos #> 85         5     137      108      NA      NA 48.8    0.227  37      pos #> 89        15     136       70      32     110 37.1    0.153  43      pos #> 94         4     134       72      NA      NA 23.8    0.277  60      pos #> 100        1     122       90      51     220 49.7    0.325  31      pos #> 101        1     163       72      NA      NA 39.0    1.222  33      pos #> 110        0      95       85      25      36 37.4    0.247  24      pos #> 111        3     171       72      33     135 33.3    0.199  24      pos #> 112        8     155       62      26     495 34.0    0.543  46      pos #> 115        7     160       54      32     175 30.5    0.588  39      pos #> 116        4     146       92      NA      NA 31.2    0.539  61      pos #> 117        5     124       74      NA      NA 34.0    0.220  38      pos #> 121        0     162       76      56     100 53.2    0.759  25      pos #> 125        0     113       76      NA      NA 33.3    0.278  23      pos #> 126        1      88       30      42      99 55.0    0.496  26      pos #> 129        1     117       88      24     145 34.5    0.403  40      pos #> 130        0     105       84      NA      NA 27.9    0.741  62      pos #> 131        4     173       70      14     168 29.7    0.361  33      pos #> 132        9     122       56      NA      NA 33.3    1.114  33      pos #> 133        3     170       64      37     225 34.5    0.356  30      pos #> 144       10     108       66      NA      NA 32.4    0.272  42      pos #> 153        9     156       86      28     155 34.3    1.189  42      pos #> 155        8     188       78      NA      NA 47.9    0.137  43      pos #> 156        7     152       88      44      NA 50.0    0.337  36      pos #> 160       17     163       72      41     114 40.9    0.817  47      pos #> 165        0     131       88      NA      NA 31.6    0.743  32      pos #> 166        6     104       74      18     156 29.9    0.722  41      pos #> 171        6     102       82      NA      NA 30.8    0.180  36      pos #> 172        6     134       70      23     130 35.4    0.542  29      pos #> 176        8     179       72      42     130 32.7    0.719  36      pos #> 178        0     129      110      46     130 67.1    0.319  26      pos #> 180        5     130       82      NA      NA 39.1    0.956  37      pos #> 186        7     194       68      28      NA 35.9    0.745  41      pos #> 187        8     181       68      36     495 30.1    0.615  60      pos #> 188        1     128       98      41      58 32.0    1.321  33      pos #> 189        8     109       76      39     114 27.9    0.640  31      pos #> 190        5     139       80      35     160 31.6    0.361  25      pos #> 193        7     159       66      NA      NA 30.4    0.383  36      pos #> 194       11     135       NA      NA      NA 52.3    0.578  40      pos #> 196        5     158       84      41     210 39.4    0.395  29      pos #> 198        3     107       62      13      48 22.9    0.678  23      pos #> 199        4     109       64      44      99 34.8    0.905  26      pos #> 200        4     148       60      27     318 30.9    0.150  29      pos #> 207        8     196       76      29     280 37.5    0.605  57      pos #> 208        5     162      104      NA      NA 37.7    0.151  52      pos #> 210        7     184       84      33      NA 35.5    0.355  41      pos #> 214        0     140       65      26     130 42.6    0.431  24      pos #> 215        9     112       82      32     175 34.2    0.260  36      pos #> 216       12     151       70      40     271 41.8    0.742  38      pos #> 217        5     109       62      41     129 35.8    0.514  25      pos #> 219        5      85       74      22      NA 29.0    1.224  32      pos #> 220        5     112       66      NA      NA 37.8    0.261  41      pos #> 221        0     177       60      29     478 34.6    1.072  21      pos #> 222        2     158       90      NA      NA 31.6    0.805  66      pos #> 228        3     162       52      38      NA 37.2    0.652  24      pos #> 231        4     142       86      NA      NA 44.0    0.645  22      pos #> 232        6     134       80      37     370 46.2    0.238  46      pos #> 236        4     171       72      NA      NA 43.6    0.479  26      pos #> 237        7     181       84      21     192 35.9    0.586  51      pos #> 238        0     179       90      27      NA 44.1    0.686  23      pos #> 239        9     164       84      21      NA 30.8    0.831  32      pos #> 243        3     139       54      NA      NA 25.6    0.402  22      pos #> 244        6     119       50      22     176 27.1    1.318  33      pos #> 246        9     184       85      15      NA 30.0    1.213  49      pos #> 255       12      92       62       7     258 27.6    0.926  44      pos #> 256        1     113       64      35      NA 33.6    0.543  21      pos #> 260       11     155       76      28     150 33.3    1.353  51      pos #> 262        3     141       NA      NA      NA 30.0    0.761  27      pos #> 265        4     123       62      NA      NA 32.0    0.226  35      pos #> 267        0     138       NA      NA      NA 36.3    0.933  25      pos #> 270        2     146       NA      NA      NA 27.5    0.240  28      pos #> 271       10     101       86      37      NA 45.6    1.136  38      pos #> 277        7     106       60      24      NA 26.5    0.296  29      pos #> 281        0     146       70      NA      NA 37.9    0.334  28      pos #> 284        7     161       86      NA      NA 30.4    0.165  47      pos #> 285        2     108       80      NA      NA 27.0    0.259  52      pos #> 288        1     119       86      39     220 45.6    0.808  29      pos #> 292        0     107       62      30      74 36.6    0.757  25      pos #> 293        2     128       78      37     182 43.3    1.224  31      pos #> 294        1     128       48      45     194 40.5    0.613  24      pos #> 297        2     146       70      38     360 28.0    0.337  29      pos #> 299       14     100       78      25     184 36.6    0.412  46      pos #> 301        0     167       NA      NA      NA 32.3    0.839  30      pos #> 302        2     144       58      33     135 31.6    0.422  25      pos #> 304        5     115       98      NA      NA 52.9    0.209  28      pos #> 307       10     161       68      23     132 25.5    0.326  47      pos #> 309        0     128       68      19     180 30.5    1.391  25      pos #> 310        2     124       68      28     205 32.9    0.875  30      pos #> 313        2     155       74      17      96 26.6    0.433  27      pos #> 315        7     109       80      31      NA 35.9    1.127  43      pos #> 318        3     182       74      NA      NA 30.5    0.345  29      pos #> 320        6     194       78      NA      NA 23.5    0.129  59      pos #> 322        3     112       74      30      NA 31.6    0.197  25      pos #> 323        0     124       70      20      NA 27.4    0.254  36      pos #> 324       13     152       90      33      29 26.8    0.731  43      pos #> 327        1     122       64      32     156 35.1    0.692  30      pos #> 329        2     102       86      36     120 45.5    0.127  23      pos #> 333        1     180       NA      NA      NA 43.3    0.282  41      pos #> 338        5     115       76      NA      NA 31.2    0.343  44      pos #> 339        9     152       78      34     171 34.2    0.893  33      pos #> 340        7     178       84      NA      NA 39.9    0.331  41      pos #> 350        5      NA       80      32      NA 41.0    0.346  37      pos #> 356        9     165       88      NA      NA 30.4    0.302  49      pos #> 357        1     125       50      40     167 33.3    0.962  28      pos #> 358       13     129       NA      30      NA 39.9    0.569  44      pos #> 360        1     196       76      36     249 36.5    0.875  29      pos #> 361        5     189       64      33     325 31.2    0.583  29      pos #> 364        4     146       78      NA      NA 38.5    0.520  67      pos #> 367        6     124       72      NA      NA 27.6    0.368  29      pos #> 370        1     133      102      28     140 32.8    0.234  45      pos #> 371        3     173       82      48     465 38.4    2.137  25      pos #> 376       12     140       82      43     325 39.2    0.528  58      pos #> 379        4     156       75      NA      NA 48.3    0.238  32      pos #> 387        5     116       74      29      NA 32.3    0.660  35      pos #> 388        8     105      100      36      NA 43.3    0.239  45      pos #> 389        5     144       82      26     285 32.0    0.452  58      pos #> 392        5     166       76      NA      NA 45.7    0.340  27      pos #> 395        4     158       78      NA      NA 32.9    0.803  31      pos #> 398        0     131       66      40      NA 34.3    0.196  22      pos #> 400        3     193       70      31      NA 34.9    0.241  25      pos #> 401        4      95       64      NA      NA 32.0    0.161  31      pos #> 403        5     136       84      41      88 35.0    0.286  35      pos #> 405        5     168       64      NA      NA 32.9    0.135  41      pos #> 407        4     115       72      NA      NA 28.9    0.376  46      pos #> 409        8     197       74      NA      NA 25.9    1.191  39      pos #> 410        1     172       68      49     579 42.4    0.702  28      pos #> 415        0     138       60      35     167 34.6    0.534  21      pos #> 416        3     173       84      33     474 35.7    0.258  22      pos #> 418        4     144       82      32      NA 38.5    0.554  37      pos #> 420        3     129       64      29     115 26.4    0.219  28      pos #> 425        8     151       78      32     210 42.9    0.516  36      pos #> 426        4     184       78      39     277 37.0    0.264  31      pos #> 428        1     181       64      30     180 34.1    0.328  38      pos #> 430        1      95       82      25     180 35.0    0.233  43      pos #> 436        0     141       NA      NA      NA 42.4    0.205  29      pos #> 441        0     189      104      25      NA 34.3    0.435  41      pos #> 444        8     108       70      NA      NA 30.5    0.955  33      pos #> 445        4     117       62      12      NA 29.7    0.380  30      pos #> 446        0     180       78      63      14 59.4    2.420  25      pos #> 449        0     104       64      37      64 33.6    0.510  22      pos #> 452        2     134       70      NA      NA 28.9    0.542  23      pos #> 456       14     175       62      30      NA 33.6    0.212  38      pos #> 459       10     148       84      48     237 37.6    1.001  51      pos #> 469        8     120       NA      NA      NA 30.0    0.183  38      pos #> 477        2     105       80      45     191 33.7    0.711  29      pos #> 481        3     158       70      30     328 35.5    0.344  35      pos #> 485        0     145       NA      NA      NA 44.2    0.630  31      pos #> 486        0     135       68      42     250 42.3    0.365  24      pos #> 494        4     125       70      18     122 28.9    1.144  45      pos #> 499        7     195       70      33     145 25.1    0.163  55      pos #> 503        6      NA       68      41      NA 39.0    0.727  41      pos #> 507        0     180       90      26      90 36.5    0.314  35      pos #> 511       12      84       72      31      NA 29.7    0.297  46      pos #> 516        3     163       70      18     105 31.6    0.268  28      pos #> 517        9     145       88      34     165 30.3    0.771  53      pos #> 524        9     130       70      NA      NA 34.2    0.652  45      pos #> 536        4     132       NA      NA      NA 32.9    0.302  23      pos #> 540        3     129       92      49     155 36.4    0.968  32      pos #> 541        8     100       74      40     215 39.4    0.661  43      pos #> 542        3     128       72      25     190 32.4    0.549  27      pos #> 543       10      90       85      32      NA 34.9    0.825  56      pos #> 546        8     186       90      35     225 34.5    0.423  37      pos #> 547        5     187       76      27     207 43.6    1.034  53      pos #> 561        6     125       76      NA      NA 33.8    0.121  54      pos #> 562        0     198       66      32     274 41.3    0.502  28      pos #> 570        0     121       66      30     165 34.3    0.203  33      pos #> 578        2     118       80      NA      NA 42.9    0.693  21      pos #> 580        2     197       70      99      NA 34.7    0.575  62      pos #> 581        0     151       90      46      NA 42.1    0.371  21      pos #> 585        8     124       76      24     600 28.7    0.687  52      pos #> 587        8     143       66      NA      NA 34.9    0.129  41      pos #> 589        3     176       86      27     156 33.3    1.154  52      pos #> 591       11     111       84      40      NA 46.8    0.925  45      pos #> 593        3     132       80      NA      NA 34.4    0.402  44      pos #> 596        0     188       82      14     185 32.0    0.682  22      pos #> 599        1     173       74      NA      NA 36.8    0.088  38      pos #> 604        7     150       78      29     126 35.2    0.692  54      pos #> 605        4     183       NA      NA      NA 28.4    0.212  36      pos #> 607        1     181       78      42     293 40.0    1.258  22      pos #> 612        3     174       58      22     194 32.9    0.593  36      pos #> 613        7     168       88      42     321 38.2    0.787  40      pos #> 615       11     138       74      26     144 36.1    0.557  50      pos #> 619        9     112       82      24      NA 28.2    1.282  50      pos #> 620        0     119       NA      NA      NA 32.4    0.141  24      pos #> 631        7     114       64      NA      NA 27.4    0.732  34      pos #> 636       13     104       72      NA      NA 31.2    0.465  38      pos #> 639        7      97       76      32      91 40.9    0.871  32      pos #> 643        6     147       80      NA      NA 29.5    0.178  50      pos #> 647        1     167       74      17     144 23.4    0.447  33      pos #> 648        0     179       50      36     159 37.8    0.455  22      pos #> 649       11     136       84      35     130 28.3    0.260  42      pos #> 656        2     155       52      27     540 38.7    0.240  25      pos #> 660        3      80       82      31      70 34.2    1.292  27      pos #> 662        1     199       76      43      NA 42.9    1.394  22      pos #> 663        8     167      106      46     231 37.6    0.165  43      pos #> 664        9     145       80      46     130 37.9    0.637  40      pos #> 665        6     115       60      39      NA 33.7    0.245  40      pos #> 667        4     145       82      18      NA 32.5    0.235  70      pos #> 668       10     111       70      27      NA 27.5    0.141  40      pos #> 676        6     195       70      NA      NA 30.9    0.328  31      pos #> 677        9     156       86      NA      NA 24.8    0.230  53      pos #> 679        3     121       52      NA      NA 36.0    0.127  25      pos #> 682        0     162       76      36      NA 49.6    0.364  26      pos #> 684        4     125       80      NA      NA 32.3    0.536  27      pos #> 690        1     144       82      46     180 46.1    0.335  46      pos #> 692       13     158      114      NA      NA 42.3    0.257  44      pos #> 694        7     129       68      49     125 38.5    0.439  43      pos #> 696        7     142       90      24     480 30.4    0.128  43      pos #> 697        3     169       74      19     125 29.9    0.268  31      pos #> 702        6     125       78      31      NA 27.6    0.565  49      pos #> 703        1     168       88      29      NA 35.0    0.905  52      pos #> 707       10     115       NA      NA      NA   NA    0.261  30      pos #> 709        9     164       78      NA      NA 32.8    0.148  45      pos #> 710        2      93       64      32     160 38.0    0.674  23      pos #> 713       10     129       62      36      NA 41.2    0.441  38      pos #> 716        7     187       50      33     392 33.9    0.826  34      pos #> 717        3     173       78      39     185 33.8    0.970  31      pos #> 720        5      97       76      27      NA 35.6    0.378  52      pos #> 723        1     149       68      29     127 29.3    0.349  42      pos #> 731        3     130       78      23      79 28.4    0.323  34      pos #> 732        8     120       86      NA      NA 28.4    0.259  22      pos #> 733        2     174       88      37     120 44.5    0.646  24      pos #> 740        1     102       74      NA      NA 39.5    0.293  42      pos #> 741       11     120       80      37     150 42.3    0.785  48      pos #> 744        9     140       94      NA      NA 32.7    0.734  45      pos #> 747        1     147       94      41      NA 49.3    0.358  27      pos #> 749        3     187       70      22     200 36.4    0.408  36      pos #> 750        6     162       62      NA      NA 24.3    0.178  50      pos #> 751        4     136       70      NA      NA 31.2    1.182  22      pos #> 754        0     181       88      44     510 43.3    0.222  26      pos #> 755        8     154       78      32      NA 32.4    0.443  45      pos #> 756        1     128       88      39     110 36.5    1.057  37      pos #> 758        0     123       72      NA      NA 36.3    0.258  52      pos #> 760        6     190       92      NA      NA 35.5    0.278  66      pos #> 762        9     170       74      31      NA 44.0    0.403  43      pos #> 767        1     126       60      NA      NA 30.1    0.349  47      pos #> 574        2      98       60      17     120 34.7    0.198  22      neg #> 566        2      95       54      14      88 26.1    0.748  22      neg #> 269        0     102       52      NA      NA 25.1    0.078  21      neg #> 98         1      71       48      18      76 20.4    0.323  22      neg #> 351        4      92       80      NA      NA 42.2    0.237  29      neg #> 317        3      99       80      11      64 19.3    0.284  30      neg #> 451        1      82       64      13      95 21.2    0.415  23      neg #> 145        4     154       62      31     284 32.8    0.237  23      neg #> 666        1     112       80      45     132 34.8    0.217  24      neg #> 627        0     125       68      NA      NA 24.7    0.206  21      neg #> 725        1     111       94      NA      NA 32.8    0.265  45      neg #> 734        2     106       56      27     165 29.0    0.426  22      neg #> 479        8     126       74      38      75 25.9    0.162  39      neg #> 621        2     112       86      42     160 38.4    0.246  28      neg #> 722        1     114       66      36     200 38.1    0.289  21      neg #> 377        0      98       82      15      84 25.2    0.299  22      neg #> 35        10     122       78      31      NA 27.6    0.512  45      neg #> 363        5     103      108      37      NA 39.2    0.305  65      neg #> 233        1      79       80      25      37 25.4    0.583  22      neg #> 147        9      57       80      37      NA 32.8    0.096  41      neg #> 560       11      85       74      NA      NA 30.1    0.300  35      neg #> 616        3     106       72      NA      NA 25.8    0.207  27      neg #> 11         4     110       92      NA      NA 37.6    0.191  30      neg #> 742        3     102       44      20      94 30.8    0.400  26      neg #> 497        5     110       68      NA      NA 26.0    0.292  30      neg #> 633        2     111       60      NA      NA 26.2    0.343  23      neg #> 678        0      93       60      NA      NA 35.3    0.263  25      neg #> 504        7      94       64      25      79 33.3    0.738  41      neg #> 539        0     127       80      37     210 36.3    0.804  23      neg #> 368        0     101       64      17      NA 21.0    0.252  21      neg #> 108        4     144       58      28     140 29.5    0.287  37      neg #> 158        1     109       56      21     135 25.2    0.833  23      neg #> 97         2      92       62      28      NA 31.6    0.130  24      neg #> 454        2     119       NA      NA      NA 19.6    0.832  72      neg #> 253        2      90       80      14      55 24.4    0.249  24      neg #> 492        2      89       90      30      NA 33.5    0.292  42      neg #> 645        3     103       72      30     152 27.6    0.730  27      neg #> 598        1      89       24      19      25 27.8    0.559  21      neg #> 414        1     143       74      22      61 26.2    0.256  21      neg #> 508        1     130       60      23     170 28.6    0.692  21      neg #> 385        1     125       70      24     110 24.3    0.221  25      neg #> 412        1     112       72      30     176 34.4    0.528  25      neg #> 555        1      84       64      23     115 36.9    0.471  28      neg #> 286        7     136       74      26     135 26.0    0.647  51      neg #> 632        0     102       78      40      90 34.5    0.238  24      neg #> 75         1      79       75      30      NA 32.0    0.396  22      neg #> 584        8     100       76      NA      NA 38.7    0.190  42      neg #> 659       11     127      106      NA      NA 39.0    0.190  51      neg #> 257        3     111       56      39      NA 30.1    0.557  30      neg #> 399        3      82       70      NA      NA 21.1    0.389  25      neg #> 19         1     103       30      38      83 43.3    0.183  33      neg #> 325        2     112       75      32      NA 35.7    0.148  21      neg #> 432        3      89       74      16      85 30.4    0.551  38      neg #> 278        0     104       64      23     116 27.8    0.454  23      neg #> 701        2     122       76      27     200 35.9    0.483  26      neg #> 135        2      96       68      13      49 21.1    0.647  26      neg #> 450        0     120       74      18      63 30.5    0.285  26      neg #> 326        1     157       72      21     168 25.6    0.123  24      neg #> 266        5      96       74      18      67 33.6    0.997  43      neg #> 439        1      97       70      15      NA 18.2    0.147  21      neg #> 74         4     129       86      20     270 35.1    0.231  23      neg #> 225        1     100       66      15      56 23.6    0.666  26      neg #> 488        0     173       78      32     265 46.5    1.159  58      neg #> 630        4      94       65      22      NA 24.7    0.148  21      neg #> 527        1      97       64      19      82 18.2    0.299  21      neg #> 529        0     117       66      31     188 30.8    0.493  22      neg #> 427        0      94       NA      NA      NA   NA    0.256  25      neg #> 355        3      90       78      NA      NA 42.7    0.559  21      neg #> 518        7     125       86      NA      NA 37.6    0.304  51      neg #> 177        6      85       78      NA      NA 31.2    0.382  42      neg #> 167        3     148       66      25      NA 32.5    0.256  22      neg #> 718       10      94       72      18      NA 23.1    0.595  56      neg #> 411        6     102       90      39      NA 35.7    0.674  28      neg #> 528        3     116       74      15     105 26.3    0.107  24      neg #> 394        4     116       72      12      87 22.1    0.463  37      neg #> 674        3     123      100      35     240 57.3    0.880  22      neg #> 736        4      95       60      32      NA 35.4    0.284  28      neg #> 168        4     120       68      NA      NA 29.6    0.709  34      neg #> 670        9     154       78      30     100 30.9    0.164  45      neg #> 422        2      94       68      18      76 26.0    0.561  21      neg #> 347        1     139       46      19      83 28.7    0.654  22      neg #> 60         0     105       64      41     142 41.5    0.173  22      neg #> 626        4      90       88      47      54 37.7    0.362  29      neg #> 82         2      74       NA      NA      NA   NA    0.102  22      neg #> 765        2     122       70      27      NA 36.8    0.340  27      neg #> 252        2     129       84      NA      NA 28.0    0.284  27      neg #> 595        6     123       72      45     230 33.6    0.733  34      neg #> 421        1     119       88      41     170 45.3    0.507  26      neg #> 366        5      99       54      28      83 34.0    0.499  30      neg #> 484        0      84       82      31     125 38.2    0.233  23      neg #> 724        5     117       86      30     105 39.1    0.251  42      neg #> 118        5      78       48      NA      NA 33.7    0.654  25      neg #> 475        4     114       64      NA      NA 28.9    0.126  24      neg #> 431        2      99       NA      NA      NA 22.2    0.108  23      neg #> 55         7     150       66      42     342 34.7    0.718  42      neg #> 99         6      93       50      30      64 28.7    0.356  23      neg #> 397        3      96       56      34     115 24.7    0.944  39      neg #> 386        1     119       54      13      50 22.3    0.205  24      neg #> 526        3      87       60      18      NA 21.8    0.444  21      neg #> 120        4      99       76      15      51 23.2    0.223  21      neg #> 476        0     137       84      27      NA 27.3    0.231  59      neg #> 646        2     157       74      35     440 39.4    0.134  30      neg #> 661       10     162       84      NA      NA 27.7    0.182  54      neg #> 545        1      88       78      29      76 32.0    0.365  29      neg #> 64         2     141       58      34     128 25.4    0.699  24      neg #> 685        5     136       82      NA      NA   NA    0.640  69      neg #> 81         3     113       44      13      NA 22.4    0.140  22      neg #> 96         6     144       72      27     228 33.9    0.255  40      neg #> 84         0     101       65      28      NA 24.6    0.237  22      neg #> 468        0      97       64      36     100 36.8    0.600  25      neg #> 352        4     137       84      NA      NA 31.2    0.252  30      neg #> 139        0     129       80      NA      NA 31.2    0.703  29      neg #> 579       10     133       68      NA      NA 27.0    0.245  36      neg #> 345        8      95       72      NA      NA 36.8    0.485  57      neg #> 571        3      78       70      NA      NA 32.5    0.270  39      neg #> 289        4      96       56      17      49 20.8    0.340  26      neg #> 76         1      NA       48      20      NA 24.7    0.140  22      neg #> 184        5      73       60      NA      NA 26.8    0.268  27      neg #> 600        1     109       38      18     120 23.1    0.407  26      neg #> 334       12     106       80      NA      NA 23.6    0.137  44      neg #> 383        1     109       60       8     182 25.4    0.947  21      neg #> 606        1     124       60      32      NA 35.8    0.514  21      neg #> 212        0     147       85      54      NA 42.8    0.375  24      neg #> 549        1     164       82      43      67 32.8    0.341  50      neg #> 241        1      91       64      24      NA 29.2    0.192  21      neg #> 342        1      95       74      21      73 25.9    0.673  36      neg #> 552        3      84       68      30     106 31.9    0.591  25      neg #> 463        8      74       70      40      49 35.3    0.705  39      neg #> 261        3     191       68      15     130 30.9    0.299  34      neg #> 726        4     112       78      40      NA 39.4    0.236  38      neg #> 245        2     146       76      35     194 38.2    0.329  29      neg #> 700        4     118       70      NA      NA 44.5    0.904  26      neg #> 628        0     132       78      NA      NA 32.4    0.393  21      neg #> 583       12     121       78      17      NA 26.5    0.259  62      neg #> 45         7     159       64      NA      NA 27.4    0.294  40      neg #> 28         1      97       66      15     140 23.2    0.487  22      neg #> 470        6     154       78      41     140 46.1    0.571  27      neg #> 234        4     122       68      NA      NA 35.0    0.394  29      neg #> 721        4      83       86      19      NA 29.3    0.317  34      neg #> 435        1      90       68       8      NA 24.5    1.138  36      neg #> 61         2      84       NA      NA      NA   NA    0.304  21      neg #> 249        9     124       70      33     402 35.4    0.282  34      neg #> 209        1      96       64      27      87 33.2    0.289  21      neg #> 569        4     154       72      29     126 31.3    0.338  37      neg #> 53         5      88       66      21      23 24.4    0.342  30      neg #> 353        3      61       82      28      NA 34.4    0.243  46      neg #> 658        1     120       80      48     200 38.9    1.162  41      neg #> 424        2     115       64      22      NA 30.8    0.421  21      neg #> 730        2      92       52      NA      NA 30.1    0.141  22      neg #> 564        6      99       60      19      54 26.9    0.497  32      neg #> 374        2     105       58      40      94 34.9    0.225  25      neg #> 181        6      87       80      NA      NA 23.2    0.084  32      neg #> 349        3      99       62      19      74 21.8    0.279  26      neg #> 644        4      90       NA      NA      NA 28.0    0.610  31      neg #> 274        1      71       78      50      45 33.2    0.422  21      neg #> 63         5      44       62      NA      NA 25.0    0.587  36      neg #> 106        1     126       56      29     152 28.7    0.801  21      neg #> 290        5     108       72      43      75 36.1    0.263  33      neg #> 163        0     114       80      34     285 44.2    0.167  27      neg #> 174        1      79       60      42      48 43.5    0.678  23      neg #> 522        3     124       80      33     130 33.2    0.305  26      neg #> 250        1     111       86      19      NA 30.1    0.143  23      neg #> 169        4     110       66      NA      NA 31.9    0.471  29      neg #> 341        1     130       70      13     105 25.9    0.472  22      neg #> 535        1      77       56      30      56 33.3    1.251  24      neg #> 640        1     100       74      12      46 19.5    0.149  28      neg #> 202        1     138       82      NA      NA 40.1    0.236  28      neg #> 705        4     110       76      20     100 28.4    0.118  27      neg #> 321        4     129       60      12     231 27.5    0.527  31      neg #> 343        1      NA       68      35      NA 32.0    0.389  22      neg #> 501        2     117       90      19      71 25.2    0.313  21      neg #> 203        0     108       68      20      NA 27.3    0.787  32      neg #> 138        0      93       60      25      92 28.7    0.532  22      neg #> 137        0     100       70      26      50 30.8    0.597  21      neg #> 337        0     117       NA      NA      NA 33.8    0.932  44      neg #> 93         7      81       78      40      48 46.7    0.261  42      neg #> 33         3      88       58      11      54 24.8    0.267  22      neg #> 375        2     122       52      43     158 36.2    0.816  28      neg #> 314        3     113       50      10      85 29.5    0.626  25      neg #> 586        1      93       56      11      NA 22.5    0.417  22      neg #> 495        3      80       NA      NA      NA   NA    0.174  22      neg #> 544        4      84       90      23      56 39.5    0.159  25      neg #> 768        1      93       70      31      NA 30.4    0.315  23      neg #> 442        2      83       66      23      50 32.2    0.497  22      neg #> 34         6      92       92      NA      NA 19.9    0.188  28      neg #> 134        8      84       74      31      NA 38.3    0.457  39      neg #> 380        0      93      100      39      72 43.4    1.021  35      neg #> 280        2     108       62      10     278 25.3    0.881  22      neg #> 29        13     145       82      19     110 22.2    0.245  57      neg #> 151        1     136       74      50     204 37.4    0.399  24      neg #> 211        2      81       60      22      NA 27.7    0.290  25      neg #> 691        8     107       80      NA      NA 24.6    0.856  34      neg #> 455        2     100       54      28     105 37.8    0.498  24      neg #> 590        0      73       NA      NA      NA 21.1    0.342  25      neg #> 478        7     114       76      17     110 23.8    0.466  31      neg #> 362        5     158       70      NA      NA 29.8    0.207  63      neg #> 306        2     120       76      37     105 39.7    0.215  29      neg #> 254        0      86       68      32      NA 35.8    0.238  25      neg #> 653        5     123       74      40      77 34.1    0.269  28      neg #> 675        8      91       82      NA      NA 35.6    0.587  68      neg #> 473        0     119       66      27      NA 38.8    0.259  22      neg #> 328       10     179       70      NA      NA 35.1    0.200  37      neg #> 119        4      97       60      23      NA 28.2    0.443  22      neg #> 568        6      92       62      32     126 32.0    0.085  46      neg #> 611        3     106       54      21     158 30.9    0.292  24      neg #> 462        1      71       62      NA      NA 21.8    0.416  26      neg #> 264        3     142       80      15      NA 32.4    0.200  63      neg #> 230        0     117       80      31      53 45.2    0.089  24      neg #> 248        0     165       90      33     680 52.3    0.427  23      neg #> 417        1      97       68      21      NA 27.2    1.095  22      neg #> 457        1     135       54      NA      NA 26.7    0.687  62      neg #> 746       12     100       84      33     105 30.0    0.488  46      neg #> 223        7     119       NA      NA      NA 25.2    0.209  37      neg #> 68         2     109       92      NA      NA 42.7    0.845  54      neg #> 66         5      99       74      27      NA 29.0    0.203  32      neg #> 641        0     102       86      17     105 29.3    0.695  27      neg #> 637        5     104       74      NA      NA 28.8    0.153  48      neg #> 671        6     165       68      26     168 33.6    0.631  49      neg #> 635       10      92       62      NA      NA 25.9    0.167  31      neg #> 103        0     125       96      NA      NA 22.5    0.262  21      neg #> 205        6     103       72      32     190 37.7    0.324  55      neg #> 525        3     125       58      NA      NA 31.6    0.151  24      neg #> 597        0      67       76      NA      NA 45.3    0.194  46      neg #> 565        0      91       80      NA      NA 32.4    0.601  27      neg #> 319        3     115       66      39     140 38.1    0.150  28      neg #> 154        1     153       82      42     485 40.6    0.687  23      neg #> 204        2      99       70      16      44 20.4    0.235  27      neg #> 618        2      68       62      13      15 20.1    0.257  23      neg #> 513        9      91       68      NA      NA 24.2    0.200  58      neg #> 614        6     105       80      28      NA 32.5    0.878  26      neg #> 669        6      98       58      33     190 34.0    0.430  43      neg #> 496        6     166       74      NA      NA 26.6    0.304  66      neg #> 114        4      76       62      NA      NA 34.0    0.391  25      neg #> 279        5     114       74      NA      NA 24.9    0.744  57      neg #> 80         2     112       66      22      NA 25.0    0.307  24      neg #> 654        2     120       54      NA      NA 26.8    0.455  27      neg #> 43         7     106       92      18      NA 22.7    0.235  48      neg #> 553        6     114       88      NA      NA 27.8    0.247  66      neg #> 90         1     107       68      19      NA 26.5    0.165  24      neg #> 113        1      89       76      34      37 31.2    0.192  23      neg #> 728        0     141       84      26      NA 32.4    0.433  22      neg #> 330        6     105       70      32      68 30.8    0.122  37      neg #> 37        11     138       76      NA      NA 33.2    0.420  35      neg #> 13        10     139       80      NA      NA 27.1    1.441  57      neg #> 680        2     101       58      17     265 24.2    0.614  23      neg #> 369        3      81       86      16      66 27.5    0.306  22      neg #> 556        7     124       70      33     215 25.5    0.161  37      neg #> 393        1     131       64      14     415 23.7    0.389  21      neg #> 282       10     129       76      28     122 35.9    0.280  39      neg #> 757        7     137       90      41      NA 32.0    0.391  39      neg #> 235        3      74       68      28      45 29.7    0.293  23      neg #> 714        0     134       58      20     291 26.4    0.352  21      neg #> 434        2     139       75      NA      NA 25.6    0.167  29      neg #> 161        4     151       90      38      NA 29.7    0.294  36      neg #> 224        7     142       60      33     190 28.8    0.687  61      neg #> 491        2      83       65      28      66 36.8    0.629  24      neg #> 510        8     120       78      NA      NA 25.0    0.409  64      neg #> 124        5     132       80      NA      NA 26.8    0.186  69      neg #> 179        5     143       78      NA      NA 45.0    0.190  47      neg #> 78         5      95       72      33      NA 37.7    0.370  27      neg #> 655        1     106       70      28     135 34.2    0.142  22      neg #> 573        3     111       58      31      44 29.5    0.430  22      neg #> 273        3     122       78      NA      NA 23.0    0.254  40      neg #> 719        1     108       60      46     178 35.5    0.415  24      neg #> 56         1      73       50      10      NA 23.0    0.248  21      neg #> 739        2      99       60      17     160 36.6    0.453  21      neg #> 575        1     143       86      30     330 30.1    0.892  23      neg #> 88         2     100       68      25      71 38.5    0.324  26      neg"},{"path":"https://andrisignorell.github.io/ModTools/reference/PlotLift.html","id":null,"dir":"Reference","previous_headings":"","what":"Lift Charts to Compare Binary Predictive Models — PlotLift","title":"Lift Charts to Compare Binary Predictive Models — PlotLift","text":"Provides either total cumulative response incremental response rate lift   chart purposes comparing predictive capability different   binary predictive models.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PlotLift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lift Charts to Compare Binary Predictive Models — PlotLift","text":"","code":"PlotLift(modelList, data, targLevel, trueResp, type = \"cumulative\", sub = \"\")"},{"path":"https://andrisignorell.github.io/ModTools/reference/PlotLift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lift Charts to Compare Binary Predictive Models — PlotLift","text":"modelList character vector containing names different   models compared. selected models must y variable   must binary factor, estimated using data set. data dataframe constitues comparison sample.   dataframe dataframe used estimated models,   dataframe must contain variables used models compared. targLevel label level binary factor interest.   example, database marketing application, level \"Yes\"   variable takes values \"Yes\" \"\" indicate   customer responded favorably promotion offer. trueResp true rate target level master database   estimation comparison dataframes originally drawn . type character string must either value   \"cummulative\" (produce total cummaltive response chart) \"incremental\"   (produce incremental response rate chart). sub sub-title plot, typically identify sample used.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PlotLift.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lift Charts to Compare Binary Predictive Models — PlotLift","text":"function returns sample response invisibly.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PlotLift.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lift Charts to Compare Binary Predictive Models — PlotLift","text":"Lift charts commonly used tool business data mining applications. used assess well model able predict desirable (organization's point--view) response part customer compared alternative estimated models benchmark model approaching customers randomly. total cummulative response chart shows percentage total response organization receive contacting given percentage (grouped deciles) entire customer base. chart best selecting alternative models, predicting revenues organization receive contacting given percentage customers model predicts likely favorably respond. incremental response rate chart provides response rate among ten decile groups organization's customers, decile groups ordered estimated likelihood favorable response.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PlotLift.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lift Charts to Compare Binary Predictive Models — PlotLift","text":"original Dan Putler, tweaks Andri Signorell <andri@signorell.net>","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PlotLift.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lift Charts to Compare Binary Predictive Models — PlotLift","text":"","code":"d.pim <- SplitTrainTest(d.pima, p = 0.2)  r.rp <- FitMod(diabetes ~ pregnant + glucose + pressure + triceps                + insulin + mass + pedigree + age                , data=d.pim$train, fitfn=\"rpart\")  r.glm <- FitMod(diabetes ~ pregnant + glucose + pressure + triceps                + insulin + mass + pedigree + age                , data=d.pim$train, fitfn=\"logit\")  r.nn <- FitMod(diabetes ~ pregnant + glucose + pressure + triceps                 + insulin + mass + pedigree + age                 , data=d.pim$train, fitfn=\"nnet\")  oldpar <- par(mfrow=c(1,2)) PlotLift(c(\"r.rp\", \"r.glm\", \"r.nn\"), data = d.pim$train,               targLevel = \"pos\", trueResp =0.34, type = \"cumulative\") #> Error in eval(parse(text = modelList[i])): object 'r.rp' not found PlotLift(c(\"r.rp\", \"r.glm\", \"r.nn\"), data = d.pim$train,               targLevel = \"pos\", trueResp =0.34, type = \"incremental\") #> Error in eval(parse(text = modelList[i])): object 'r.rp' not found par(oldpar)"},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Predictions of a GLM  — PredictCI","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"Provides confidence intervals predictions GLM.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"","code":"PredictCI(mod, newdata, conf.level = 0.95)"},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"mod binomial model newdata data predicted conf.level confidence level interval. Default 0.95.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"confidence intervals predictions calculated se model normal quantile.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"matrix 3 columns fit, lower confidence interval upper confidence interval","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"https://stackoverflow.com/questions/14423325/confidence-intervals--predictions--logistic-regression","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/PredictCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for Predictions of a GLM  — PredictCI","text":"","code":"r.logit <- FitMod(diabetes ~ age, d.pima, fitfn = \"logit\") head(PredictCI(r.logit, newdata=d.pima)) #>        prob       lci       uci #> 1 0.5134500 0.4500891 0.5763816 #> 2 0.3219794 0.2883900 0.3575155 #> 3 0.3312219 0.2977057 0.3665421 #> 4 0.2377681 0.1986836 0.2818370 #> 5 0.3405965 0.3069729 0.3759054 #> 6 0.3128741 0.2790536 0.3488105"},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a ROC curve  — ROC","title":"Build a ROC curve  — ROC","text":"wrapper main function pROC pROC package (Xavier Robin et al.). builds ROC curve returns \"roc\" object, list class \"roc\".","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a ROC curve  — ROC","text":"","code":"ROC(x, resp = NULL, ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a ROC curve  — ROC","text":"x model object, predicted probabilities, resp NULL. resp response ... arguments passed roc().","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a ROC curve  — ROC","text":"Partial ROC calculated following Peterson et al. (2008; doi:10.1016/j.ecolmodel.2007.11.008 ). function modification PartialROC funcion, available https://github.com/narayanibarve/ENMGadgets.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a ROC curve  — ROC","text":"data.frame containing AUC values AUC ratios calculated iteration.","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build a ROC curve  — ROC","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Build a ROC curve  — ROC","text":"Peterson, .T. et al. (2008) Rethinking receiver operating characteristic analysis applications ecological niche modeling. Ecol. Modell., 213, 63-72.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/ROC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a ROC curve  — ROC","text":"","code":"r.glm <- FitMod(diabetes ~ ., data = d.pima, fitfn=\"logit\") ROC(r.glm) #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #>  #> Call: #> roc.default(response = Response(x), predictor = predict(x, type = \"prob\")[,     2], plot = FALSE) #>  #> Data: predict(x, type = \"prob\")[, 2] in 500 controls (Response(x) neg) < 268 cases (Response(x) pos). #> Area under the curve: 0.8394  # plot ROC curves for a list of models r.rp <- FitMod(diabetes ~ ., data = d.pima, fitfn=\"rpart\")  # combine models to a list mlst <- list(r.glm, r.rp)  # do the plot for(i in seq_along(mlst))   if(i==1){     plot(ROC(mlst[[i]], grid=TRUE, col=c(hred, hblue)[i]))   } else {     lines(ROC(mlst[[i]], col=c(hred, hblue)[i]))   } #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases"},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Used Reference Levels in a Linear Model  — RefLevel","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"Returns reference levels factors used linear model. customer friendly report also reference level lm summaries, normally suppressed.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"","code":"RefLevel(x)"},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"x lm object, linear model factors predictors.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"reporting tables linear models might want include information used reference levels, remain uncommented default lm result output. RefLevel() allows add footnote integrate reference levels coefficient table.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"clear general used algorithm exotic models. dummy.coef cases alternative.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"named vector containing reference levels factors","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/RefLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used Reference Levels in a Linear Model  — RefLevel","text":"","code":"RefLevel(lm(breaks ~ wool + tension, data = warpbreaks)) #>    wool tension  #>     \"A\"     \"L\""},{"path":"https://andrisignorell.github.io/ModTools/reference/Response.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Response from Several Models  — Response","title":"Extract the Response from Several Models  — Response","text":"Time time, course daily work, experience response variable hidden deeply object. leads superfluous consultation documentation. Reponse() relieves us work.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Response from Several Models  — Response","text":"","code":"Response(x, ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/Response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Response from Several Models  — Response","text":"x model use ... arguments","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Response.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the Response from Several Models  — Response","text":"function implements extraction response variables models listed package's help text.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Response from Several Models  — Response","text":"response model x","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Response.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract the Response from Several Models  — Response","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/Response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Response from Several Models  — Response","text":"","code":"r.rpart <- FitMod(diabetes ~ ., d.pima, fitfn=\"rpart\") Response(r.rpart) #>   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  #> pos neg pos neg pos neg pos neg pos pos neg pos neg pos pos pos pos pos neg pos  #>  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  #> neg neg pos pos pos pos pos neg neg neg neg pos neg neg neg neg neg pos pos pos  #>  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  #> neg neg neg pos neg pos neg neg pos neg neg neg neg pos neg neg pos neg neg neg  #>  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  #> neg pos neg neg pos neg pos neg neg neg pos neg pos neg neg neg neg neg pos neg  #>  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100  #> neg neg neg neg pos neg neg neg pos neg neg neg neg pos neg neg neg neg neg pos  #> 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120  #> pos neg neg neg neg neg neg neg neg pos pos pos neg neg pos pos pos neg neg neg  #> 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140  #> pos neg neg neg pos pos neg neg pos pos pos pos pos neg neg neg neg neg neg neg  #> 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160  #> neg neg neg pos neg neg neg neg neg neg neg neg pos neg pos pos neg neg neg pos  #> 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180  #> neg neg neg neg pos pos neg neg neg neg pos pos neg neg neg pos neg pos neg pos  #> 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200  #> neg neg neg neg neg pos pos pos pos pos neg neg pos pos neg pos neg pos pos pos  #> 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220  #> neg neg neg neg neg neg pos pos neg pos neg neg neg pos pos pos pos neg pos pos  #> 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240  #> pos pos neg neg neg neg neg pos neg neg pos pos neg neg neg pos pos pos pos neg  #> 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260  #> neg neg pos pos neg pos neg neg neg neg neg neg neg neg pos pos neg neg neg pos  #> 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280  #> neg pos neg neg pos neg pos neg neg pos pos neg neg neg neg neg pos neg neg neg  #> 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300  #> pos neg neg pos pos neg neg pos neg neg neg pos pos pos neg neg pos neg pos neg  #> 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320  #> pos pos neg pos neg neg pos neg pos pos neg neg pos neg pos neg neg pos neg pos  #> 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340  #> neg pos pos pos neg neg pos neg pos neg neg neg pos neg neg neg neg pos pos pos  #> 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360  #> neg neg neg neg neg neg neg neg neg pos neg neg neg neg neg pos pos pos neg pos  #> 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380  #> pos neg neg pos neg neg pos neg neg pos pos neg neg neg neg pos neg neg pos neg  #> 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400  #> neg neg neg neg neg neg pos pos pos neg neg pos neg neg pos neg neg pos neg pos  #> 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420  #> pos neg pos neg pos neg pos neg pos pos neg neg neg neg pos pos neg pos neg pos  #> 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440  #> neg neg neg neg pos pos neg pos neg pos neg neg neg neg neg pos neg neg neg neg  #> 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460  #> pos neg neg pos pos pos neg neg pos neg neg pos neg neg neg pos neg neg pos neg  #> 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480  #> neg neg neg neg neg neg neg neg pos neg neg neg neg neg neg neg pos neg neg neg  #> 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500  #> pos neg neg neg pos pos neg neg neg neg neg neg neg pos neg neg neg neg pos neg  #> 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520  #> neg neg pos neg neg neg pos neg neg neg pos neg neg neg neg pos pos neg neg neg  #> 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540  #> neg neg neg pos neg neg neg neg neg neg neg neg neg neg neg pos neg neg neg pos  #> 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560  #> pos pos pos neg neg pos pos neg neg neg neg neg neg neg neg neg neg neg neg neg  #> 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580  #> pos pos neg neg neg neg neg neg neg pos neg neg neg neg neg neg neg pos neg pos  #> 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600  #> pos neg neg neg pos neg pos neg pos neg pos neg pos neg neg pos neg neg pos neg  #> 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620  #> neg neg neg pos pos neg pos neg neg neg neg pos pos neg pos neg neg neg pos pos  #> 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640  #> neg neg neg neg neg neg neg neg neg neg pos neg neg neg neg pos neg neg pos neg  #> 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660  #> neg neg pos neg neg neg pos pos pos neg neg neg neg neg neg pos neg neg neg pos  #> 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680  #> neg pos pos pos pos neg pos pos neg neg neg neg neg neg neg pos pos neg pos neg  #> 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700  #> neg pos neg pos neg neg neg neg neg pos neg pos neg pos neg pos pos neg neg neg  #> 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720  #> neg pos pos neg neg neg pos neg pos pos neg neg pos neg neg pos pos neg neg pos  #> 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740  #> neg neg pos neg neg neg neg neg neg neg pos pos pos neg neg neg neg neg neg pos  #> 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760  #> pos neg neg pos neg neg pos neg pos pos pos neg neg pos pos pos neg pos neg pos  #> 761 762 763 764 765 766 767 768  #> neg pos neg neg neg neg pos neg  #> attr(,\"response\") #> [1] diabetes #> Levels: neg pos  # up to the attribute \"response\" this is the same identical(StripAttr(Response(r.rpart), \"response\"),           model.response(model.frame(r.rpart))) #> [1] TRUE"},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Summary for Linear Models  — RobSummary","title":"Robust Summary for Linear Models  — RobSummary","text":"poisson models mild violation distribution assumption variance equals mean, Cameron Trivedi (2009) recommended using robust standard errors parameter estimates. function uses function vcovHC package sandwich obtain robust standard errors calculate p-values accordingly. returns matrix containing usual results model summary, comprising parameter estimates,  robust standard errors, p-values,  extended 95% confidence interval.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Summary for Linear Models  — RobSummary","text":"","code":"RobSummary(mod, conf.level = 0.95, type = \"HC0\")"},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Summary for Linear Models  — RobSummary","text":"mod model robust standard errors calculated conf.level confidence level, default 95%. type character string specifying estimation type. Details vcovHC().","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robust Summary for Linear Models  — RobSummary","text":"details https://stats.oarc.ucla.edu/r/dae/poisson-regression/","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Summary for Linear Models  — RobSummary","text":"p x 6 matrix columns estimated coefficient, standard error, t- z-statistic, corresponding (two-sided) p-value, lower upper confidence interval.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robust Summary for Linear Models  — RobSummary","text":"Cameron, . C. Trivedi, P. K. (2009) Microeconometrics Using Stata. College Station, TX: Stata Press.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Robust Summary for Linear Models  — RobSummary","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/RobSummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robust Summary for Linear Models  — RobSummary","text":"","code":"r.lm <- lm(Fertility ~ ., swiss) RobSummary(r.lm) #>                         est         lci         uci        rse      zval #> (Intercept)      66.9151817 47.51386488 86.31649848 9.60679535  6.965401 #> Agriculture      -0.1721140 -0.29238964 -0.05183831 0.05955594 -2.889955 #> Examination      -0.2580082 -0.72091206  0.20489558 0.22921240 -1.125630 #> Education        -0.8709401 -1.22176091 -0.52011921 0.17371316 -5.013668 #> Catholic          0.1041153  0.04649549  0.16173517 0.02853116  3.649180 #> Infant.Mortality  1.0770481  0.31060736  1.84348892 0.37951237  2.837979 #>                          pval #> (Intercept)      1.844004e-08 #> Agriculture      6.132937e-03 #> Examination      2.668685e-01 #> Education        1.073353e-05 #> Catholic         7.364054e-04 #> Infant.Mortality 7.028555e-03"},{"path":"https://andrisignorell.github.io/ModTools/reference/Rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Rules from 'rpart' Object  — Rules","title":"Extract Rules from 'rpart' Object  — Rules","text":"Extract rules rpart object. can useful, rules must implemented another system. rules contain criteria binary splits rpart tree root node specified leaf.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Rules from 'rpart' Object  — Rules","text":"","code":"Rules(x, node = NULL, leafonly = FALSE)"},{"path":"https://andrisignorell.github.io/ModTools/reference/Rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Rules from 'rpart' Object  — Rules","text":"x rpart object extract rules node integer vector, defining nodes whose details required. leafonly boolean, defining rules leading end nodes (\"leafs\") returned.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Rules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Rules from 'rpart' Object  — Rules","text":"function builds upon original function path.rpart, bulky situations.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Rules from 'rpart' Object  — Rules","text":"list rules frame frame rpart ylevels y values node ds.size size dataset path list character vecotrs containing rules","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Rules.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Rules from 'rpart' Object  — Rules","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/Rules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Rules from 'rpart' Object  — Rules","text":"","code":"r.rp <- FitMod(diabetes ~ ., data=d.pima, fitfn=\"rpart\") Rules(r.rp) #>  #>  Rule number: 1  #>  #>  Rule number: 2  #>    glucose< 127.5 #>  #>  Rule number: 4 [yval=neg cover=271 (35%) prob=0.08] #>    glucose< 127.5 #>    age< 28.5 #>  #>  Rule number: 5  #>    glucose< 127.5 #>    age>=28.5 #>  #>  Rule number: 10 [yval=neg cover=41 (5%) prob=0.05] #>    glucose< 127.5 #>    age>=28.5 #>    mass< 26.35 #>  #>  Rule number: 11  #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>  #>  Rule number: 22 [yval=neg cover=55 (7%) prob=0.18] #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose< 99.5 #>  #>  Rule number: 23  #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>  #>  Rule number: 46  #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree< 0.561 #>  #>  Rule number: 92 [yval=neg cover=21 (3%) prob=0.19] #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree< 0.561 #>    pedigree< 0.2 #>  #>  Rule number: 93  #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree< 0.561 #>    pedigree>=0.2 #>  #>  Rule number: 186  #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree< 0.561 #>    pedigree>=0.2 #>    pregnant>=1.5 #>  #>  Rule number: 372 [yval=neg cover=40 (5%) prob=0.30] #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree< 0.561 #>    pedigree>=0.2 #>    pregnant>=1.5 #>    pressure>=67 #>  #>  Rule number: 373 [yval=pos cover=12 (2%) prob=0.75] #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree< 0.561 #>    pedigree>=0.2 #>    pregnant>=1.5 #>    pressure< 67 #>  #>  Rule number: 187 [yval=pos cover=11 (1%) prob=0.82] #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree< 0.561 #>    pedigree>=0.2 #>    pregnant< 1.5 #>  #>  Rule number: 47 [yval=pos cover=34 (4%) prob=0.74] #>    glucose< 127.5 #>    age>=28.5 #>    mass>=26.35 #>    glucose>=99.5 #>    pedigree>=0.561 #>  #>  Rule number: 3  #>    glucose>=127.5 #>  #>  Rule number: 6  #>    glucose>=127.5 #>    mass< 29.95 #>  #>  Rule number: 12 [yval=neg cover=41 (5%) prob=0.15] #>    glucose>=127.5 #>    mass< 29.95 #>    glucose< 145.5 #>  #>  Rule number: 13  #>    glucose>=127.5 #>    mass< 29.95 #>    glucose>=145.5 #>  #>  Rule number: 26 [yval=neg cover=21 (3%) prob=0.38] #>    glucose>=127.5 #>    mass< 29.95 #>    glucose>=145.5 #>    insulin< 14.5 #>  #>  Rule number: 27 [yval=pos cover=14 (2%) prob=0.71] #>    glucose>=127.5 #>    mass< 29.95 #>    glucose>=145.5 #>    insulin>=14.5 #>  #>  Rule number: 7  #>    glucose>=127.5 #>    mass>=29.95 #>  #>  Rule number: 14  #>    glucose>=127.5 #>    mass>=29.95 #>    glucose< 157.5 #>  #>  Rule number: 28  #>    glucose>=127.5 #>    mass>=29.95 #>    glucose< 157.5 #>    age< 30.5 #>  #>  Rule number: 56  #>    glucose>=127.5 #>    mass>=29.95 #>    glucose< 157.5 #>    age< 30.5 #>    pressure>=61 #>  #>  Rule number: 112 [yval=neg cover=31 (4%) prob=0.23] #>    glucose>=127.5 #>    mass>=29.95 #>    glucose< 157.5 #>    age< 30.5 #>    pressure>=61 #>    mass< 41.8 #>  #>  Rule number: 113 [yval=pos cover=9 (1%) prob=0.67] #>    glucose>=127.5 #>    mass>=29.95 #>    glucose< 157.5 #>    age< 30.5 #>    pressure>=61 #>    mass>=41.8 #>  #>  Rule number: 57 [yval=pos cover=10 (1%) prob=1.00] #>    glucose>=127.5 #>    mass>=29.95 #>    glucose< 157.5 #>    age< 30.5 #>    pressure< 61 #>  #>  Rule number: 29 [yval=pos cover=65 (8%) prob=0.72] #>    glucose>=127.5 #>    mass>=29.95 #>    glucose< 157.5 #>    age>=30.5 #>  #>  Rule number: 15 [yval=pos cover=92 (12%) prob=0.87] #>    glucose>=127.5 #>    mass>=29.95 #>    glucose>=157.5 #>"},{"path":"https://andrisignorell.github.io/ModTools/reference/SplitTrainTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Split DataFrame in Train an Test Sample  — SplitTrainTest","title":"Split DataFrame in Train an Test Sample  — SplitTrainTest","text":"modeling usually split data frame train sample, train model , test sample, test, good works. function splits given data frame two parts, one training sample test sample form list two elements.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/SplitTrainTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split DataFrame in Train an Test Sample  — SplitTrainTest","text":"","code":"SplitTrainTest(x, p = 0.1, seed = NULL, logical = FALSE)"},{"path":"https://andrisignorell.github.io/ModTools/reference/SplitTrainTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split DataFrame in Train an Test Sample  — SplitTrainTest","text":"x data.frame p proportion test sample. Default 10%. seed initialization random number generator. logical logical, defining logical vector returned list train test data. Default FALSE.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/SplitTrainTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split DataFrame in Train an Test Sample  — SplitTrainTest","text":"order obtain reasonable models, ensure two points. dataset must large enough yield statistically meaningful results representative data set whole. Assuming test set meets preceding two conditions, goal create model generalizes well new data. aiming model equally well predicts training test data. never train test data. seeing surprisingly good results evaluation metrics, might sign accidentally training test set.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/SplitTrainTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split DataFrame in Train an Test Sample  — SplitTrainTest","text":"logical FALSE list two data frames, train test, structure given data x  logical TRUE logical vector containing nrow elements TRUE FALSE","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/SplitTrainTest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split DataFrame in Train an Test Sample  — SplitTrainTest","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/SplitTrainTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split DataFrame in Train an Test Sample  — SplitTrainTest","text":"","code":"SplitTrainTest(d.pima) #> $train #>     pregnant glucose pressure triceps insulin mass pedigree age diabetes #> 1          6     148       72      35       0 33.6    0.627  50      pos #> 2          1      85       66      29       0 26.6    0.351  31      neg #> 4          1      89       66      23      94 28.1    0.167  21      neg #> 5          0     137       40      35     168 43.1    2.288  33      pos #> 6          5     116       74       0       0 25.6    0.201  30      neg #> 7          3      78       50      32      88 31.0    0.248  26      pos #> 8         10     115        0       0       0 35.3    0.134  29      neg #> 9          2     197       70      45     543 30.5    0.158  53      pos #> 10         8     125       96       0       0  0.0    0.232  54      pos #> 11         4     110       92       0       0 37.6    0.191  30      neg #> 12        10     168       74       0       0 38.0    0.537  34      pos #> 13        10     139       80       0       0 27.1    1.441  57      neg #> 16         7     100        0       0       0 30.0    0.484  32      pos #> 17         0     118       84      47     230 45.8    0.551  31      pos #> 18         7     107       74       0       0 29.6    0.254  31      pos #> 20         1     115       70      30      96 34.6    0.529  32      pos #> 21         3     126       88      41     235 39.3    0.704  27      neg #> 22         8      99       84       0       0 35.4    0.388  50      neg #> 23         7     196       90       0       0 39.8    0.451  41      pos #> 25        11     143       94      33     146 36.6    0.254  51      pos #> 26        10     125       70      26     115 31.1    0.205  41      pos #> 27         7     147       76       0       0 39.4    0.257  43      pos #> 28         1      97       66      15     140 23.2    0.487  22      neg #> 29        13     145       82      19     110 22.2    0.245  57      neg #> 30         5     117       92       0       0 34.1    0.337  38      neg #> 31         5     109       75      26       0 36.0    0.546  60      neg #> 32         3     158       76      36     245 31.6    0.851  28      pos #> 33         3      88       58      11      54 24.8    0.267  22      neg #> 36         4     103       60      33     192 24.0    0.966  33      neg #> 37        11     138       76       0       0 33.2    0.420  35      neg #> 38         9     102       76      37       0 32.9    0.665  46      pos #> 39         2      90       68      42       0 38.2    0.503  27      pos #> 40         4     111       72      47     207 37.1    1.390  56      pos #> 41         3     180       64      25      70 34.0    0.271  26      neg #> 42         7     133       84       0       0 40.2    0.696  37      neg #> 43         7     106       92      18       0 22.7    0.235  48      neg #> 44         9     171      110      24     240 45.4    0.721  54      pos #> 45         7     159       64       0       0 27.4    0.294  40      neg #> 46         0     180       66      39       0 42.0    1.893  25      pos #> 47         1     146       56       0       0 29.7    0.564  29      neg #> 48         2      71       70      27       0 28.0    0.586  22      neg #> 49         7     103       66      32       0 39.1    0.344  31      pos #> 51         1     103       80      11      82 19.4    0.491  22      neg #> 52         1     101       50      15      36 24.2    0.526  26      neg #> 53         5      88       66      21      23 24.4    0.342  30      neg #> 54         8     176       90      34     300 33.7    0.467  58      pos #> 55         7     150       66      42     342 34.7    0.718  42      neg #> 56         1      73       50      10       0 23.0    0.248  21      neg #> 57         7     187       68      39     304 37.7    0.254  41      pos #> 58         0     100       88      60     110 46.8    0.962  31      neg #> 59         0     146       82       0       0 40.5    1.781  44      neg #> 60         0     105       64      41     142 41.5    0.173  22      neg #> 61         2      84        0       0       0  0.0    0.304  21      neg #> 62         8     133       72       0       0 32.9    0.270  39      pos #> 63         5      44       62       0       0 25.0    0.587  36      neg #> 64         2     141       58      34     128 25.4    0.699  24      neg #> 65         7     114       66       0       0 32.8    0.258  42      pos #> 66         5      99       74      27       0 29.0    0.203  32      neg #> 68         2     109       92       0       0 42.7    0.845  54      neg #> 69         1      95       66      13      38 19.6    0.334  25      neg #> 70         4     146       85      27     100 28.9    0.189  27      neg #> 71         2     100       66      20      90 32.9    0.867  28      pos #> 72         5     139       64      35     140 28.6    0.411  26      neg #> 73        13     126       90       0       0 43.4    0.583  42      pos #> 74         4     129       86      20     270 35.1    0.231  23      neg #> 75         1      79       75      30       0 32.0    0.396  22      neg #> 76         1       0       48      20       0 24.7    0.140  22      neg #> 77         7      62       78       0       0 32.6    0.391  41      neg #> 78         5      95       72      33       0 37.7    0.370  27      neg #> 79         0     131        0       0       0 43.2    0.270  26      pos #> 80         2     112       66      22       0 25.0    0.307  24      neg #> 81         3     113       44      13       0 22.4    0.140  22      neg #> 82         2      74        0       0       0  0.0    0.102  22      neg #> 83         7      83       78      26      71 29.3    0.767  36      neg #> 84         0     101       65      28       0 24.6    0.237  22      neg #> 85         5     137      108       0       0 48.8    0.227  37      pos #> 86         2     110       74      29     125 32.4    0.698  27      neg #> 87        13     106       72      54       0 36.6    0.178  45      neg #> 88         2     100       68      25      71 38.5    0.324  26      neg #> 89        15     136       70      32     110 37.1    0.153  43      pos #> 90         1     107       68      19       0 26.5    0.165  24      neg #> 91         1      80       55       0       0 19.1    0.258  21      neg #> 92         4     123       80      15     176 32.0    0.443  34      neg #> 93         7      81       78      40      48 46.7    0.261  42      neg #> 94         4     134       72       0       0 23.8    0.277  60      pos #> 95         2     142       82      18      64 24.7    0.761  21      neg #> 96         6     144       72      27     228 33.9    0.255  40      neg #> 97         2      92       62      28       0 31.6    0.130  24      neg #> 98         1      71       48      18      76 20.4    0.323  22      neg #> 99         6      93       50      30      64 28.7    0.356  23      neg #> 100        1     122       90      51     220 49.7    0.325  31      pos #> 101        1     163       72       0       0 39.0    1.222  33      pos #> 102        1     151       60       0       0 26.1    0.179  22      neg #> 103        0     125       96       0       0 22.5    0.262  21      neg #> 104        1      81       72      18      40 26.6    0.283  24      neg #> 105        2      85       65       0       0 39.6    0.930  27      neg #> 107        1      96      122       0       0 22.4    0.207  27      neg #> 108        4     144       58      28     140 29.5    0.287  37      neg #> 109        3      83       58      31      18 34.3    0.336  25      neg #> 110        0      95       85      25      36 37.4    0.247  24      pos #> 111        3     171       72      33     135 33.3    0.199  24      pos #> 112        8     155       62      26     495 34.0    0.543  46      pos #> 113        1      89       76      34      37 31.2    0.192  23      neg #> 115        7     160       54      32     175 30.5    0.588  39      pos #> 118        5      78       48       0       0 33.7    0.654  25      neg #> 119        4      97       60      23       0 28.2    0.443  22      neg #> 120        4      99       76      15      51 23.2    0.223  21      neg #> 122        6     111       64      39       0 34.2    0.260  24      neg #> 123        2     107       74      30     100 33.6    0.404  23      neg #> 124        5     132       80       0       0 26.8    0.186  69      neg #> 125        0     113       76       0       0 33.3    0.278  23      pos #> 126        1      88       30      42      99 55.0    0.496  26      pos #> 127        3     120       70      30     135 42.9    0.452  30      neg #> 128        1     118       58      36      94 33.3    0.261  23      neg #> 129        1     117       88      24     145 34.5    0.403  40      pos #> 133        3     170       64      37     225 34.5    0.356  30      pos #> 134        8      84       74      31       0 38.3    0.457  39      neg #> 135        2      96       68      13      49 21.1    0.647  26      neg #> 136        2     125       60      20     140 33.8    0.088  31      neg #> 137        0     100       70      26      50 30.8    0.597  21      neg #> 138        0      93       60      25      92 28.7    0.532  22      neg #> 139        0     129       80       0       0 31.2    0.703  29      neg #> 140        5     105       72      29     325 36.9    0.159  28      neg #> 141        3     128       78       0       0 21.1    0.268  55      neg #> 142        5     106       82      30       0 39.5    0.286  38      neg #> 143        2     108       52      26      63 32.5    0.318  22      neg #> 144       10     108       66       0       0 32.4    0.272  42      pos #> 145        4     154       62      31     284 32.8    0.237  23      neg #> 146        0     102       75      23       0  0.0    0.572  21      neg #> 147        9      57       80      37       0 32.8    0.096  41      neg #> 148        2     106       64      35     119 30.5    1.400  34      neg #> 149        5     147       78       0       0 33.7    0.218  65      neg #> 150        2      90       70      17       0 27.3    0.085  22      neg #> 151        1     136       74      50     204 37.4    0.399  24      neg #> 152        4     114       65       0       0 21.9    0.432  37      neg #> 153        9     156       86      28     155 34.3    1.189  42      pos #> 154        1     153       82      42     485 40.6    0.687  23      neg #> 155        8     188       78       0       0 47.9    0.137  43      pos #> 156        7     152       88      44       0 50.0    0.337  36      pos #> 157        2      99       52      15      94 24.6    0.637  21      neg #> 158        1     109       56      21     135 25.2    0.833  23      neg #> 159        2      88       74      19      53 29.0    0.229  22      neg #> 160       17     163       72      41     114 40.9    0.817  47      pos #> 161        4     151       90      38       0 29.7    0.294  36      neg #> 162        7     102       74      40     105 37.2    0.204  45      neg #> 163        0     114       80      34     285 44.2    0.167  27      neg #> 164        2     100       64      23       0 29.7    0.368  21      neg #> 165        0     131       88       0       0 31.6    0.743  32      pos #> 166        6     104       74      18     156 29.9    0.722  41      pos #> 167        3     148       66      25       0 32.5    0.256  22      neg #> 168        4     120       68       0       0 29.6    0.709  34      neg #> 169        4     110       66       0       0 31.9    0.471  29      neg #> 170        3     111       90      12      78 28.4    0.495  29      neg #> 171        6     102       82       0       0 30.8    0.180  36      pos #> 172        6     134       70      23     130 35.4    0.542  29      pos #> 173        2      87        0      23       0 28.9    0.773  25      neg #> 174        1      79       60      42      48 43.5    0.678  23      neg #> 175        2      75       64      24      55 29.7    0.370  33      neg #> 176        8     179       72      42     130 32.7    0.719  36      pos #> 177        6      85       78       0       0 31.2    0.382  42      neg #> 178        0     129      110      46     130 67.1    0.319  26      pos #> 179        5     143       78       0       0 45.0    0.190  47      neg #> 180        5     130       82       0       0 39.1    0.956  37      pos #> 181        6      87       80       0       0 23.2    0.084  32      neg #> 183        1       0       74      20      23 27.7    0.299  21      neg #> 184        5      73       60       0       0 26.8    0.268  27      neg #> 185        4     141       74       0       0 27.6    0.244  40      neg #> 186        7     194       68      28       0 35.9    0.745  41      pos #> 187        8     181       68      36     495 30.1    0.615  60      pos #> 188        1     128       98      41      58 32.0    1.321  33      pos #> 189        8     109       76      39     114 27.9    0.640  31      pos #> 190        5     139       80      35     160 31.6    0.361  25      pos #> 191        3     111       62       0       0 22.6    0.142  21      neg #> 194       11     135        0       0       0 52.3    0.578  40      pos #> 195        8      85       55      20       0 24.4    0.136  42      neg #> 197        1     105       58       0       0 24.3    0.187  21      neg #> 198        3     107       62      13      48 22.9    0.678  23      pos #> 199        4     109       64      44      99 34.8    0.905  26      pos #> 201        0     113       80      16       0 31.0    0.874  21      neg #> 202        1     138       82       0       0 40.1    0.236  28      neg #> 203        0     108       68      20       0 27.3    0.787  32      neg #> 204        2      99       70      16      44 20.4    0.235  27      neg #> 205        6     103       72      32     190 37.7    0.324  55      neg #> 206        5     111       72      28       0 23.9    0.407  27      neg #> 207        8     196       76      29     280 37.5    0.605  57      pos #> 208        5     162      104       0       0 37.7    0.151  52      pos #> 209        1      96       64      27      87 33.2    0.289  21      neg #> 210        7     184       84      33       0 35.5    0.355  41      pos #> 211        2      81       60      22       0 27.7    0.290  25      neg #> 212        0     147       85      54       0 42.8    0.375  24      neg #> 213        7     179       95      31       0 34.2    0.164  60      neg #> 214        0     140       65      26     130 42.6    0.431  24      pos #> 215        9     112       82      32     175 34.2    0.260  36      pos #> 216       12     151       70      40     271 41.8    0.742  38      pos #> 217        5     109       62      41     129 35.8    0.514  25      pos #> 218        6     125       68      30     120 30.0    0.464  32      neg #> 219        5      85       74      22       0 29.0    1.224  32      pos #> 220        5     112       66       0       0 37.8    0.261  41      pos #> 221        0     177       60      29     478 34.6    1.072  21      pos #> 222        2     158       90       0       0 31.6    0.805  66      pos #> 223        7     119        0       0       0 25.2    0.209  37      neg #> 224        7     142       60      33     190 28.8    0.687  61      neg #> 225        1     100       66      15      56 23.6    0.666  26      neg #> 226        1      87       78      27      32 34.6    0.101  22      neg #> 228        3     162       52      38       0 37.2    0.652  24      pos #> 229        4     197       70      39     744 36.7    2.329  31      neg #> 230        0     117       80      31      53 45.2    0.089  24      neg #> 231        4     142       86       0       0 44.0    0.645  22      pos #> 232        6     134       80      37     370 46.2    0.238  46      pos #> 233        1      79       80      25      37 25.4    0.583  22      neg #> 234        4     122       68       0       0 35.0    0.394  29      neg #> 236        4     171       72       0       0 43.6    0.479  26      pos #> 237        7     181       84      21     192 35.9    0.586  51      pos #> 238        0     179       90      27       0 44.1    0.686  23      pos #> 239        9     164       84      21       0 30.8    0.831  32      pos #> 240        0     104       76       0       0 18.4    0.582  27      neg #> 241        1      91       64      24       0 29.2    0.192  21      neg #> 242        4      91       70      32      88 33.1    0.446  22      neg #> 243        3     139       54       0       0 25.6    0.402  22      pos #> 244        6     119       50      22     176 27.1    1.318  33      pos #> 245        2     146       76      35     194 38.2    0.329  29      neg #> 247       10     122       68       0       0 31.2    0.258  41      neg #> 248        0     165       90      33     680 52.3    0.427  23      neg #> 249        9     124       70      33     402 35.4    0.282  34      neg #> 250        1     111       86      19       0 30.1    0.143  23      neg #> 251        9     106       52       0       0 31.2    0.380  42      neg #> 252        2     129       84       0       0 28.0    0.284  27      neg #> 254        0      86       68      32       0 35.8    0.238  25      neg #> 255       12      92       62       7     258 27.6    0.926  44      pos #> 256        1     113       64      35       0 33.6    0.543  21      pos #> 258        2     114       68      22       0 28.7    0.092  25      neg #> 260       11     155       76      28     150 33.3    1.353  51      pos #> 261        3     191       68      15     130 30.9    0.299  34      neg #> 263        4      95       70      32       0 32.1    0.612  24      neg #> 264        3     142       80      15       0 32.4    0.200  63      neg #> 266        5      96       74      18      67 33.6    0.997  43      neg #> 267        0     138        0       0       0 36.3    0.933  25      pos #> 268        2     128       64      42       0 40.0    1.101  24      neg #> 269        0     102       52       0       0 25.1    0.078  21      neg #> 270        2     146        0       0       0 27.5    0.240  28      pos #> 271       10     101       86      37       0 45.6    1.136  38      pos #> 272        2     108       62      32      56 25.2    0.128  21      neg #> 274        1      71       78      50      45 33.2    0.422  21      neg #> 276        2     100       70      52      57 40.5    0.677  25      neg #> 277        7     106       60      24       0 26.5    0.296  29      pos #> 278        0     104       64      23     116 27.8    0.454  23      neg #> 279        5     114       74       0       0 24.9    0.744  57      neg #> 280        2     108       62      10     278 25.3    0.881  22      neg #> 281        0     146       70       0       0 37.9    0.334  28      pos #> 282       10     129       76      28     122 35.9    0.280  39      neg #> 283        7     133       88      15     155 32.4    0.262  37      neg #> 284        7     161       86       0       0 30.4    0.165  47      pos #> 285        2     108       80       0       0 27.0    0.259  52      pos #> 286        7     136       74      26     135 26.0    0.647  51      neg #> 287        5     155       84      44     545 38.7    0.619  34      neg #> 289        4      96       56      17      49 20.8    0.340  26      neg #> 290        5     108       72      43      75 36.1    0.263  33      neg #> 291        0      78       88      29      40 36.9    0.434  21      neg #> 292        0     107       62      30      74 36.6    0.757  25      pos #> 293        2     128       78      37     182 43.3    1.224  31      pos #> 294        1     128       48      45     194 40.5    0.613  24      pos #> 295        0     161       50       0       0 21.9    0.254  65      neg #> 296        6     151       62      31     120 35.5    0.692  28      neg #> 297        2     146       70      38     360 28.0    0.337  29      pos #> 298        0     126       84      29     215 30.7    0.520  24      neg #> 299       14     100       78      25     184 36.6    0.412  46      pos #> 300        8     112       72       0       0 23.6    0.840  58      neg #> 301        0     167        0       0       0 32.3    0.839  30      pos #> 303        5      77       82      41      42 35.8    0.156  35      neg #> 304        5     115       98       0       0 52.9    0.209  28      pos #> 305        3     150       76       0       0 21.0    0.207  37      neg #> 306        2     120       76      37     105 39.7    0.215  29      neg #> 307       10     161       68      23     132 25.5    0.326  47      pos #> 308        0     137       68      14     148 24.8    0.143  21      neg #> 310        2     124       68      28     205 32.9    0.875  30      pos #> 311        6      80       66      30       0 26.2    0.313  41      neg #> 312        0     106       70      37     148 39.4    0.605  22      neg #> 313        2     155       74      17      96 26.6    0.433  27      pos #> 314        3     113       50      10      85 29.5    0.626  25      neg #> 315        7     109       80      31       0 35.9    1.127  43      pos #> 317        3      99       80      11      64 19.3    0.284  30      neg #> 318        3     182       74       0       0 30.5    0.345  29      pos #> 319        3     115       66      39     140 38.1    0.150  28      neg #> 320        6     194       78       0       0 23.5    0.129  59      pos #> 321        4     129       60      12     231 27.5    0.527  31      neg #> 323        0     124       70      20       0 27.4    0.254  36      pos #> 324       13     152       90      33      29 26.8    0.731  43      pos #> 325        2     112       75      32       0 35.7    0.148  21      neg #> 326        1     157       72      21     168 25.6    0.123  24      neg #> 327        1     122       64      32     156 35.1    0.692  30      pos #> 328       10     179       70       0       0 35.1    0.200  37      neg #> 329        2     102       86      36     120 45.5    0.127  23      pos #> 331        8     118       72      19       0 23.1    1.476  46      neg #> 332        2      87       58      16      52 32.7    0.166  25      neg #> 333        1     180        0       0       0 43.3    0.282  41      pos #> 334       12     106       80       0       0 23.6    0.137  44      neg #> 335        1      95       60      18      58 23.9    0.260  22      neg #> 337        0     117        0       0       0 33.8    0.932  44      neg #> 338        5     115       76       0       0 31.2    0.343  44      pos #> 339        9     152       78      34     171 34.2    0.893  33      pos #> 340        7     178       84       0       0 39.9    0.331  41      pos #> 341        1     130       70      13     105 25.9    0.472  22      neg #> 342        1      95       74      21      73 25.9    0.673  36      neg #> 343        1       0       68      35       0 32.0    0.389  22      neg #> 344        5     122       86       0       0 34.7    0.290  33      neg #> 345        8      95       72       0       0 36.8    0.485  57      neg #> 346        8     126       88      36     108 38.5    0.349  49      neg #> 347        1     139       46      19      83 28.7    0.654  22      neg #> 348        3     116        0       0       0 23.5    0.187  23      neg #> 349        3      99       62      19      74 21.8    0.279  26      neg #> 350        5       0       80      32       0 41.0    0.346  37      pos #> 351        4      92       80       0       0 42.2    0.237  29      neg #> 352        4     137       84       0       0 31.2    0.252  30      neg #> 353        3      61       82      28       0 34.4    0.243  46      neg #> 354        1      90       62      12      43 27.2    0.580  24      neg #> 356        9     165       88       0       0 30.4    0.302  49      pos #> 357        1     125       50      40     167 33.3    0.962  28      pos #> 358       13     129        0      30       0 39.9    0.569  44      pos #> 359       12      88       74      40      54 35.3    0.378  48      neg #> 360        1     196       76      36     249 36.5    0.875  29      pos #> 361        5     189       64      33     325 31.2    0.583  29      pos #> 362        5     158       70       0       0 29.8    0.207  63      neg #> 363        5     103      108      37       0 39.2    0.305  65      neg #> 364        4     146       78       0       0 38.5    0.520  67      pos #> 365        4     147       74      25     293 34.9    0.385  30      neg #> 366        5      99       54      28      83 34.0    0.499  30      neg #> 367        6     124       72       0       0 27.6    0.368  29      pos #> 369        3      81       86      16      66 27.5    0.306  22      neg #> 370        1     133      102      28     140 32.8    0.234  45      pos #> 371        3     173       82      48     465 38.4    2.137  25      pos #> 372        0     118       64      23      89  0.0    1.731  21      neg #> 373        0      84       64      22      66 35.8    0.545  21      neg #> 374        2     105       58      40      94 34.9    0.225  25      neg #> 375        2     122       52      43     158 36.2    0.816  28      neg #> 376       12     140       82      43     325 39.2    0.528  58      pos #> 377        0      98       82      15      84 25.2    0.299  22      neg #> 378        1      87       60      37      75 37.2    0.509  22      neg #> 379        4     156       75       0       0 48.3    0.238  32      pos #> 380        0      93      100      39      72 43.4    1.021  35      neg #> 381        1     107       72      30      82 30.8    0.821  24      neg #> 382        0     105       68      22       0 20.0    0.236  22      neg #> 383        1     109       60       8     182 25.4    0.947  21      neg #> 384        1      90       62      18      59 25.1    1.268  25      neg #> 385        1     125       70      24     110 24.3    0.221  25      neg #> 386        1     119       54      13      50 22.3    0.205  24      neg #> 387        5     116       74      29       0 32.3    0.660  35      pos #> 388        8     105      100      36       0 43.3    0.239  45      pos #> 389        5     144       82      26     285 32.0    0.452  58      pos #> 391        1     100       66      29     196 32.0    0.444  42      neg #> 392        5     166       76       0       0 45.7    0.340  27      pos #> 393        1     131       64      14     415 23.7    0.389  21      neg #> 394        4     116       72      12      87 22.1    0.463  37      neg #> 395        4     158       78       0       0 32.9    0.803  31      pos #> 396        2     127       58      24     275 27.7    1.600  25      neg #> 397        3      96       56      34     115 24.7    0.944  39      neg #> 399        3      82       70       0       0 21.1    0.389  25      neg #> 401        4      95       64       0       0 32.0    0.161  31      pos #> 402        6     137       61       0       0 24.2    0.151  55      neg #> 403        5     136       84      41      88 35.0    0.286  35      pos #> 404        9      72       78      25       0 31.6    0.280  38      neg #> 405        5     168       64       0       0 32.9    0.135  41      pos #> 406        2     123       48      32     165 42.1    0.520  26      neg #> 407        4     115       72       0       0 28.9    0.376  46      pos #> 408        0     101       62       0       0 21.9    0.336  25      neg #> 409        8     197       74       0       0 25.9    1.191  39      pos #> 410        1     172       68      49     579 42.4    0.702  28      pos #> 411        6     102       90      39       0 35.7    0.674  28      neg #> 412        1     112       72      30     176 34.4    0.528  25      neg #> 414        1     143       74      22      61 26.2    0.256  21      neg #> 415        0     138       60      35     167 34.6    0.534  21      pos #> 416        3     173       84      33     474 35.7    0.258  22      pos #> 417        1      97       68      21       0 27.2    1.095  22      neg #> 419        1      83       68       0       0 18.2    0.624  27      neg #> 421        1     119       88      41     170 45.3    0.507  26      neg #> 422        2      94       68      18      76 26.0    0.561  21      neg #> 423        0     102       64      46      78 40.6    0.496  21      neg #> 424        2     115       64      22       0 30.8    0.421  21      neg #> 426        4     184       78      39     277 37.0    0.264  31      pos #> 427        0      94        0       0       0  0.0    0.256  25      neg #> 428        1     181       64      30     180 34.1    0.328  38      pos #> 432        3      89       74      16      85 30.4    0.551  38      neg #> 433        1      80       74      11      60 30.0    0.527  22      neg #> 434        2     139       75       0       0 25.6    0.167  29      neg #> 435        1      90       68       8       0 24.5    1.138  36      neg #> 436        0     141        0       0       0 42.4    0.205  29      pos #> 437       12     140       85      33       0 37.4    0.244  41      neg #> 439        1      97       70      15       0 18.2    0.147  21      neg #> 440        6     107       88       0       0 36.8    0.727  31      neg #> 441        0     189      104      25       0 34.3    0.435  41      pos #> 442        2      83       66      23      50 32.2    0.497  22      neg #> 443        4     117       64      27     120 33.2    0.230  24      neg #> 444        8     108       70       0       0 30.5    0.955  33      pos #> 445        4     117       62      12       0 29.7    0.380  30      pos #> 446        0     180       78      63      14 59.4    2.420  25      pos #> 447        1     100       72      12      70 25.3    0.658  28      neg #> 448        0      95       80      45      92 36.5    0.330  26      neg #> 450        0     120       74      18      63 30.5    0.285  26      neg #> 451        1      82       64      13      95 21.2    0.415  23      neg #> 452        2     134       70       0       0 28.9    0.542  23      pos #> 453        0      91       68      32     210 39.9    0.381  25      neg #> 454        2     119        0       0       0 19.6    0.832  72      neg #> 455        2     100       54      28     105 37.8    0.498  24      neg #> 456       14     175       62      30       0 33.6    0.212  38      pos #> 457        1     135       54       0       0 26.7    0.687  62      neg #> 458        5      86       68      28      71 30.2    0.364  24      neg #> 459       10     148       84      48     237 37.6    1.001  51      pos #> 460        9     134       74      33      60 25.9    0.460  81      neg #> 461        9     120       72      22      56 20.8    0.733  48      neg #> 463        8      74       70      40      49 35.3    0.705  39      neg #> 464        5      88       78      30       0 27.6    0.258  37      neg #> 465       10     115       98       0       0 24.0    1.022  34      neg #> 466        0     124       56      13     105 21.8    0.452  21      neg #> 467        0      74       52      10      36 27.8    0.269  22      neg #> 468        0      97       64      36     100 36.8    0.600  25      neg #> 470        6     154       78      41     140 46.1    0.571  27      neg #> 471        1     144       82      40       0 41.3    0.607  28      neg #> 472        0     137       70      38       0 33.2    0.170  22      neg #> 473        0     119       66      27       0 38.8    0.259  22      neg #> 474        7     136       90       0       0 29.9    0.210  50      neg #> 475        4     114       64       0       0 28.9    0.126  24      neg #> 476        0     137       84      27       0 27.3    0.231  59      neg #> 477        2     105       80      45     191 33.7    0.711  29      pos #> 478        7     114       76      17     110 23.8    0.466  31      neg #> 479        8     126       74      38      75 25.9    0.162  39      neg #> 480        4     132       86      31       0 28.0    0.419  63      neg #> 481        3     158       70      30     328 35.5    0.344  35      pos #> 482        0     123       88      37       0 35.2    0.197  29      neg #> 483        4      85       58      22      49 27.8    0.306  28      neg #> 484        0      84       82      31     125 38.2    0.233  23      neg #> 485        0     145        0       0       0 44.2    0.630  31      pos #> 486        0     135       68      42     250 42.3    0.365  24      pos #> 487        1     139       62      41     480 40.7    0.536  21      neg #> 488        0     173       78      32     265 46.5    1.159  58      neg #> 489        4      99       72      17       0 25.6    0.294  28      neg #> 490        8     194       80       0       0 26.1    0.551  67      neg #> 491        2      83       65      28      66 36.8    0.629  24      neg #> 492        2      89       90      30       0 33.5    0.292  42      neg #> 493        4      99       68      38       0 32.8    0.145  33      neg #> 494        4     125       70      18     122 28.9    1.144  45      pos #> 495        3      80        0       0       0  0.0    0.174  22      neg #> 496        6     166       74       0       0 26.6    0.304  66      neg #> 497        5     110       68       0       0 26.0    0.292  30      neg #> 499        7     195       70      33     145 25.1    0.163  55      pos #> 500        6     154       74      32     193 29.3    0.839  39      neg #> 502        3      84       72      32       0 37.2    0.267  28      neg #> 503        6       0       68      41       0 39.0    0.727  41      pos #> 504        7      94       64      25      79 33.3    0.738  41      neg #> 506       10      75       82       0       0 33.3    0.263  38      neg #> 507        0     180       90      26      90 36.5    0.314  35      pos #> 508        1     130       60      23     170 28.6    0.692  21      neg #> 509        2      84       50      23      76 30.4    0.968  21      neg #> 510        8     120       78       0       0 25.0    0.409  64      neg #> 511       12      84       72      31       0 29.7    0.297  46      pos #> 515        3      99       54      19      86 25.6    0.154  24      neg #> 516        3     163       70      18     105 31.6    0.268  28      pos #> 517        9     145       88      34     165 30.3    0.771  53      pos #> 518        7     125       86       0       0 37.6    0.304  51      neg #> 519       13      76       60       0       0 32.8    0.180  41      neg #> 520        6     129       90       7     326 19.6    0.582  60      neg #> 521        2      68       70      32      66 25.0    0.187  25      neg #> 522        3     124       80      33     130 33.2    0.305  26      neg #> 523        6     114        0       0       0  0.0    0.189  26      neg #> 524        9     130       70       0       0 34.2    0.652  45      pos #> 525        3     125       58       0       0 31.6    0.151  24      neg #> 526        3      87       60      18       0 21.8    0.444  21      neg #> 527        1      97       64      19      82 18.2    0.299  21      neg #> 528        3     116       74      15     105 26.3    0.107  24      neg #> 529        0     117       66      31     188 30.8    0.493  22      neg #> 530        0     111       65       0       0 24.6    0.660  31      neg #> 531        2     122       60      18     106 29.8    0.717  22      neg #> 532        0     107       76       0       0 45.3    0.686  24      neg #> 533        1      86       66      52      65 41.3    0.917  29      neg #> 534        6      91        0       0       0 29.8    0.501  31      neg #> 535        1      77       56      30      56 33.3    1.251  24      neg #> 537        0     105       90       0       0 29.6    0.197  46      neg #> 538        0      57       60       0       0 21.7    0.735  67      neg #> 539        0     127       80      37     210 36.3    0.804  23      neg #> 540        3     129       92      49     155 36.4    0.968  32      pos #> 542        3     128       72      25     190 32.4    0.549  27      pos #> 543       10      90       85      32       0 34.9    0.825  56      pos #> 544        4      84       90      23      56 39.5    0.159  25      neg #> 545        1      88       78      29      76 32.0    0.365  29      neg #> 546        8     186       90      35     225 34.5    0.423  37      pos #> 547        5     187       76      27     207 43.6    1.034  53      pos #> 548        4     131       68      21     166 33.1    0.160  28      neg #> 549        1     164       82      43      67 32.8    0.341  50      neg #> 550        4     189      110      31       0 28.5    0.680  37      neg #> 551        1     116       70      28       0 27.4    0.204  21      neg #> 552        3      84       68      30     106 31.9    0.591  25      neg #> 554        1      88       62      24      44 29.9    0.422  23      neg #> 555        1      84       64      23     115 36.9    0.471  28      neg #> 556        7     124       70      33     215 25.5    0.161  37      neg #> 558        8     110       76       0       0 27.8    0.237  58      neg #> 559       11     103       68      40       0 46.2    0.126  42      neg #> 560       11      85       74       0       0 30.1    0.300  35      neg #> 561        6     125       76       0       0 33.8    0.121  54      pos #> 563        1      87       68      34      77 37.6    0.401  24      neg #> 564        6      99       60      19      54 26.9    0.497  32      neg #> 565        0      91       80       0       0 32.4    0.601  27      neg #> 566        2      95       54      14      88 26.1    0.748  22      neg #> 567        1      99       72      30      18 38.6    0.412  21      neg #> 568        6      92       62      32     126 32.0    0.085  46      neg #> 569        4     154       72      29     126 31.3    0.338  37      neg #> 570        0     121       66      30     165 34.3    0.203  33      pos #> 571        3      78       70       0       0 32.5    0.270  39      neg #> 572        2     130       96       0       0 22.6    0.268  21      neg #> 573        3     111       58      31      44 29.5    0.430  22      neg #> 574        2      98       60      17     120 34.7    0.198  22      neg #> 575        1     143       86      30     330 30.1    0.892  23      neg #> 576        1     119       44      47      63 35.5    0.280  25      neg #> 577        6     108       44      20     130 24.0    0.813  35      neg #> 578        2     118       80       0       0 42.9    0.693  21      pos #> 579       10     133       68       0       0 27.0    0.245  36      neg #> 580        2     197       70      99       0 34.7    0.575  62      pos #> 581        0     151       90      46       0 42.1    0.371  21      pos #> 582        6     109       60      27       0 25.0    0.206  27      neg #> 583       12     121       78      17       0 26.5    0.259  62      neg #> 584        8     100       76       0       0 38.7    0.190  42      neg #> 586        1      93       56      11       0 22.5    0.417  22      neg #> 587        8     143       66       0       0 34.9    0.129  41      pos #> 588        6     103       66       0       0 24.3    0.249  29      neg #> 589        3     176       86      27     156 33.3    1.154  52      pos #> 590        0      73        0       0       0 21.1    0.342  25      neg #> 591       11     111       84      40       0 46.8    0.925  45      pos #> 592        2     112       78      50     140 39.4    0.175  24      neg #> 593        3     132       80       0       0 34.4    0.402  44      pos #> 594        2      82       52      22     115 28.5    1.699  25      neg #> 595        6     123       72      45     230 33.6    0.733  34      neg #> 596        0     188       82      14     185 32.0    0.682  22      pos #> 597        0      67       76       0       0 45.3    0.194  46      neg #> 598        1      89       24      19      25 27.8    0.559  21      neg #> 599        1     173       74       0       0 36.8    0.088  38      pos #> 600        1     109       38      18     120 23.1    0.407  26      neg #> 601        1     108       88      19       0 27.1    0.400  24      neg #> 602        6      96        0       0       0 23.7    0.190  28      neg #> 603        1     124       74      36       0 27.8    0.100  30      neg #> 604        7     150       78      29     126 35.2    0.692  54      pos #> 605        4     183        0       0       0 28.4    0.212  36      pos #> 606        1     124       60      32       0 35.8    0.514  21      neg #> 607        1     181       78      42     293 40.0    1.258  22      pos #> 608        1      92       62      25      41 19.5    0.482  25      neg #> 609        0     152       82      39     272 41.5    0.270  27      neg #> 610        1     111       62      13     182 24.0    0.138  23      neg #> 611        3     106       54      21     158 30.9    0.292  24      neg #> 612        3     174       58      22     194 32.9    0.593  36      pos #> 613        7     168       88      42     321 38.2    0.787  40      pos #> 614        6     105       80      28       0 32.5    0.878  26      neg #> 615       11     138       74      26     144 36.1    0.557  50      pos #> 616        3     106       72       0       0 25.8    0.207  27      neg #> 617        6     117       96       0       0 28.7    0.157  30      neg #> 619        9     112       82      24       0 28.2    1.282  50      pos #> 620        0     119        0       0       0 32.4    0.141  24      pos #> 621        2     112       86      42     160 38.4    0.246  28      neg #> 622        2      92       76      20       0 24.2    1.698  28      neg #> 623        6     183       94       0       0 40.8    1.461  45      neg #> 624        0      94       70      27     115 43.5    0.347  21      neg #> 625        2     108       64       0       0 30.8    0.158  21      neg #> 626        4      90       88      47      54 37.7    0.362  29      neg #> 627        0     125       68       0       0 24.7    0.206  21      neg #> 628        0     132       78       0       0 32.4    0.393  21      neg #> 629        5     128       80       0       0 34.6    0.144  45      neg #> 630        4      94       65      22       0 24.7    0.148  21      neg #> 631        7     114       64       0       0 27.4    0.732  34      pos #> 632        0     102       78      40      90 34.5    0.238  24      neg #> 633        2     111       60       0       0 26.2    0.343  23      neg #> 634        1     128       82      17     183 27.5    0.115  22      neg #> 635       10      92       62       0       0 25.9    0.167  31      neg #> 636       13     104       72       0       0 31.2    0.465  38      pos #> 637        5     104       74       0       0 28.8    0.153  48      neg #> 638        2      94       76      18      66 31.6    0.649  23      neg #> 639        7      97       76      32      91 40.9    0.871  32      pos #> 640        1     100       74      12      46 19.5    0.149  28      neg #> 641        0     102       86      17     105 29.3    0.695  27      neg #> 642        4     128       70       0       0 34.3    0.303  24      neg #> 643        6     147       80       0       0 29.5    0.178  50      pos #> 644        4      90        0       0       0 28.0    0.610  31      neg #> 645        3     103       72      30     152 27.6    0.730  27      neg #> 646        2     157       74      35     440 39.4    0.134  30      neg #> 648        0     179       50      36     159 37.8    0.455  22      pos #> 649       11     136       84      35     130 28.3    0.260  42      pos #> 650        0     107       60      25       0 26.4    0.133  23      neg #> 651        1      91       54      25     100 25.2    0.234  23      neg #> 652        1     117       60      23     106 33.8    0.466  27      neg #> 653        5     123       74      40      77 34.1    0.269  28      neg #> 654        2     120       54       0       0 26.8    0.455  27      neg #> 655        1     106       70      28     135 34.2    0.142  22      neg #> 656        2     155       52      27     540 38.7    0.240  25      pos #> 657        2     101       58      35      90 21.8    0.155  22      neg #> 658        1     120       80      48     200 38.9    1.162  41      neg #> 659       11     127      106       0       0 39.0    0.190  51      neg #> 660        3      80       82      31      70 34.2    1.292  27      pos #> 661       10     162       84       0       0 27.7    0.182  54      neg #> 662        1     199       76      43       0 42.9    1.394  22      pos #> 663        8     167      106      46     231 37.6    0.165  43      pos #> 664        9     145       80      46     130 37.9    0.637  40      pos #> 666        1     112       80      45     132 34.8    0.217  24      neg #> 667        4     145       82      18       0 32.5    0.235  70      pos #> 668       10     111       70      27       0 27.5    0.141  40      pos #> 669        6      98       58      33     190 34.0    0.430  43      neg #> 671        6     165       68      26     168 33.6    0.631  49      neg #> 672        1      99       58      10       0 25.4    0.551  21      neg #> 673       10      68      106      23      49 35.5    0.285  47      neg #> 674        3     123      100      35     240 57.3    0.880  22      neg #> 675        8      91       82       0       0 35.6    0.587  68      neg #> 676        6     195       70       0       0 30.9    0.328  31      pos #> 677        9     156       86       0       0 24.8    0.230  53      pos #> 678        0      93       60       0       0 35.3    0.263  25      neg #> 679        3     121       52       0       0 36.0    0.127  25      pos #> 680        2     101       58      17     265 24.2    0.614  23      neg #> 681        2      56       56      28      45 24.2    0.332  22      neg #> 682        0     162       76      36       0 49.6    0.364  26      pos #> 683        0      95       64      39     105 44.6    0.366  22      neg #> 684        4     125       80       0       0 32.3    0.536  27      pos #> 685        5     136       82       0       0  0.0    0.640  69      neg #> 686        2     129       74      26     205 33.2    0.591  25      neg #> 688        1     107       50      19       0 28.3    0.181  29      neg #> 689        1     140       74      26     180 24.1    0.828  23      neg #> 690        1     144       82      46     180 46.1    0.335  46      pos #> 691        8     107       80       0       0 24.6    0.856  34      neg #> 692       13     158      114       0       0 42.3    0.257  44      pos #> 693        2     121       70      32      95 39.1    0.886  23      neg #> 694        7     129       68      49     125 38.5    0.439  43      pos #> 696        7     142       90      24     480 30.4    0.128  43      pos #> 697        3     169       74      19     125 29.9    0.268  31      pos #> 698        0      99        0       0       0 25.0    0.253  22      neg #> 699        4     127       88      11     155 34.5    0.598  28      neg #> 700        4     118       70       0       0 44.5    0.904  26      neg #> 701        2     122       76      27     200 35.9    0.483  26      neg #> 702        6     125       78      31       0 27.6    0.565  49      pos #> 704        2     129        0       0       0 38.5    0.304  41      neg #> 705        4     110       76      20     100 28.4    0.118  27      neg #> 706        6      80       80      36       0 39.8    0.177  28      neg #> 707       10     115        0       0       0  0.0    0.261  30      pos #> 708        2     127       46      21     335 34.4    0.176  22      neg #> 709        9     164       78       0       0 32.8    0.148  45      pos #> 710        2      93       64      32     160 38.0    0.674  23      pos #> 711        3     158       64      13     387 31.2    0.295  24      neg #> 712        5     126       78      27      22 29.6    0.439  40      neg #> 713       10     129       62      36       0 41.2    0.441  38      pos #> 714        0     134       58      20     291 26.4    0.352  21      neg #> 715        3     102       74       0       0 29.5    0.121  32      neg #> 716        7     187       50      33     392 33.9    0.826  34      pos #> 717        3     173       78      39     185 33.8    0.970  31      pos #> 718       10      94       72      18       0 23.1    0.595  56      neg #> 719        1     108       60      46     178 35.5    0.415  24      neg #> 720        5      97       76      27       0 35.6    0.378  52      pos #> 721        4      83       86      19       0 29.3    0.317  34      neg #> 722        1     114       66      36     200 38.1    0.289  21      neg #> 723        1     149       68      29     127 29.3    0.349  42      pos #> 724        5     117       86      30     105 39.1    0.251  42      neg #> 725        1     111       94       0       0 32.8    0.265  45      neg #> 726        4     112       78      40       0 39.4    0.236  38      neg #> 727        1     116       78      29     180 36.1    0.496  25      neg #> 728        0     141       84      26       0 32.4    0.433  22      neg #> 729        2     175       88       0       0 22.9    0.326  22      neg #> 730        2      92       52       0       0 30.1    0.141  22      neg #> 731        3     130       78      23      79 28.4    0.323  34      pos #> 732        8     120       86       0       0 28.4    0.259  22      pos #> 733        2     174       88      37     120 44.5    0.646  24      pos #> 734        2     106       56      27     165 29.0    0.426  22      neg #> 735        2     105       75       0       0 23.3    0.560  53      neg #> 736        4      95       60      32       0 35.4    0.284  28      neg #> 737        0     126       86      27     120 27.4    0.515  21      neg #> 739        2      99       60      17     160 36.6    0.453  21      neg #> 740        1     102       74       0       0 39.5    0.293  42      pos #> 741       11     120       80      37     150 42.3    0.785  48      pos #> 742        3     102       44      20      94 30.8    0.400  26      neg #> 743        1     109       58      18     116 28.5    0.219  22      neg #> 744        9     140       94       0       0 32.7    0.734  45      pos #> 745       13     153       88      37     140 40.6    1.174  39      neg #> 746       12     100       84      33     105 30.0    0.488  46      neg #> 747        1     147       94      41       0 49.3    0.358  27      pos #> 748        1      81       74      41      57 46.3    1.096  32      neg #> 749        3     187       70      22     200 36.4    0.408  36      pos #> 750        6     162       62       0       0 24.3    0.178  50      pos #> 751        4     136       70       0       0 31.2    1.182  22      pos #> 752        1     121       78      39      74 39.0    0.261  28      neg #> 753        3     108       62      24       0 26.0    0.223  25      neg #> 754        0     181       88      44     510 43.3    0.222  26      pos #> 755        8     154       78      32       0 32.4    0.443  45      pos #> 756        1     128       88      39     110 36.5    1.057  37      pos #> 757        7     137       90      41       0 32.0    0.391  39      neg #> 758        0     123       72       0       0 36.3    0.258  52      pos #> 760        6     190       92       0       0 35.5    0.278  66      pos #> 761        2      88       58      26      16 28.4    0.766  22      neg #> 762        9     170       74      31       0 44.0    0.403  43      pos #> 763        9      89       62       0       0 22.5    0.142  33      neg #> 764       10     101       76      48     180 32.9    0.171  63      neg #> 765        2     122       70      27       0 36.8    0.340  27      neg #> 766        5     121       72      23     112 26.2    0.245  30      neg #> 767        1     126       60       0       0 30.1    0.349  47      pos #> 768        1      93       70      31       0 30.4    0.315  23      neg #>  #> $test #>     pregnant glucose pressure triceps insulin mass pedigree age diabetes #> 670        9     154       78      30     100 30.9    0.164  45      neg #> 117        5     124       74       0       0 34.0    0.220  38      pos #> 759        1     106       76       0       0 37.5    0.197  26      neg #> 132        9     122       56       0       0 33.3    1.114  33      pos #> 35        10     122       78      31       0 27.6    0.512  45      neg #> 302        2     144       58      33     135 31.6    0.422  25      pos #> 235        3      74       68      28      45 29.7    0.293  23      neg #> 553        6     114       88       0       0 27.8    0.247  66      neg #> 418        4     144       82      32       0 38.5    0.554  37      pos #> 505        3      96       78      39       0 37.3    0.238  40      neg #> 498        2      81       72      15      76 30.1    0.547  25      neg #> 449        0     104       64      37      64 33.6    0.510  22      pos #> 425        8     151       78      32     210 42.9    0.516  36      pos #> 116        4     146       92       0       0 31.2    0.539  61      pos #> 265        4     123       62       0       0 32.0    0.226  35      pos #> 130        0     105       84       0       0 27.9    0.741  62      pos #> 438        5     147       75       0       0 29.9    0.434  28      neg #> 420        3     129       64      29     115 26.4    0.219  28      pos #> 50         7     105        0       0       0  0.0    0.305  24      neg #> 431        2      99        0       0       0 22.2    0.108  23      neg #> 429        0     135       94      46     145 40.6    0.284  26      neg #> 562        0     198       66      32     274 41.3    0.502  28      pos #> 647        1     167       74      17     144 23.4    0.447  33      pos #> 390        3     100       68      23      81 31.6    0.949  28      neg #> 114        4      76       62       0       0 34.0    0.391  25      neg #> 413        1     143       84      23     310 42.4    1.076  22      neg #> 3          8     183       64       0       0 23.3    0.672  32      pos #> 703        1     168       88      29       0 35.0    0.905  52      pos #> 192        9     123       70      44      94 33.1    0.374  40      neg #> 262        3     141        0       0       0 30.0    0.761  27      pos #> 513        9      91       68       0       0 24.2    0.200  58      neg #> 368        0     101       64      17       0 21.0    0.252  21      neg #> 275       13     106       70       0       0 34.2    0.251  52      neg #> 257        3     111       56      39       0 30.1    0.557  30      neg #> 557        1      97       70      40       0 38.1    0.218  30      neg #> 618        2      68       62      13      15 20.1    0.257  23      neg #> 430        1      95       82      25     180 35.0    0.233  43      pos #> 14         1     189       60      23     846 30.1    0.398  59      pos #> 67         0     109       88      30       0 32.5    0.855  38      pos #> 288        1     119       86      39     220 45.6    0.808  29      pos #> 330        6     105       70      32      68 30.8    0.122  37      neg #> 196        5     158       84      41     210 39.4    0.395  29      pos #> 400        3     193       70      31       0 34.9    0.241  25      pos #> 34         6      92       92       0       0 19.9    0.188  28      neg #> 336        0     165       76      43     255 47.9    0.259  26      neg #> 121        0     162       76      56     100 53.2    0.759  25      pos #> 695        2      90       60       0       0 23.5    0.191  25      neg #> 131        4     173       70      14     168 29.7    0.361  33      pos #> 259        1     193       50      16     375 25.9    0.655  24      neg #> 309        0     128       68      19     180 30.5    1.391  25      pos #> 462        1      71       62       0       0 21.8    0.416  26      neg #> 512        0     139       62      17     210 22.1    0.207  21      neg #> 687        3     130       64       0       0 23.1    0.314  22      neg #> 316        2     112       68      22      94 34.1    0.315  26      neg #> 24         9     119       80      35       0 29.0    0.263  29      pos #> 106        1     126       56      29     152 28.7    0.801  21      neg #> 15         5     166       72      19     175 25.8    0.587  51      pos #> 182        0     119       64      18      92 34.9    0.725  23      neg #> 665        6     115       60      39       0 33.7    0.245  40      pos #> 322        3     112       74      30       0 31.6    0.197  25      pos #> 273        3     122       78       0       0 23.0    0.254  40      neg #> 200        4     148       60      27     318 30.9    0.150  29      pos #> 246        9     184       85      15       0 30.0    1.213  49      pos #> 514        2      91       62       0       0 27.3    0.525  22      neg #> 227        0     101       76       0       0 35.7    0.198  26      neg #> 355        3      90       78       0       0 42.7    0.559  21      neg #> 585        8     124       76      24     600 28.7    0.687  52      pos #> 536        4     132        0       0       0 32.9    0.302  23      pos #> 541        8     100       74      40     215 39.4    0.661  43      pos #> 398        0     131       66      40       0 34.3    0.196  22      pos #> 19         1     103       30      38      83 43.3    0.183  33      neg #> 738        8      65       72      23       0 32.0    0.600  42      neg #> 193        7     159       66       0       0 30.4    0.383  36      pos #> 469        8     120        0       0       0 30.0    0.183  38      pos #> 253        2      90       80      14      55 24.4    0.249  24      neg #> 501        2     117       90      19      71 25.2    0.313  21      neg #>"},{"path":"https://andrisignorell.github.io/ModTools/reference/TModC.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Classification Models — TModC","title":"Compare Classification Models — TModC","text":"comparison several classification models, AUC values BrierScore values models determined tabulated. absolute values relative values reported, related model highest corresponding value.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/TModC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Classification Models — TModC","text":"","code":"TModC(..., newdata = NULL, reference = NULL, ord = NULL)  # S3 method for class 'TModC' plot(x, col = NULL, args.legend = NULL,...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/TModC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Classification Models — TModC","text":"... models compared x TModC object plot newdata data use predicting. provided, model.frame used. reference reference values ord character defining order results table, can \"auc\", \"bs\",   \"auc_p\", \"bs_p\", \"bs_rnk\", \"auc_rnk\", \"ensemble\" (using mean \"auc_p\" \"bs_p\" ranking). col color lines ROC plot args.legend legend placed ROC plot","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/TModC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Classification Models — TModC","text":"matrix columns auc absolute value area ROC curve (AUC) auc_p percentage auc based best observerd AUC auc_rnk rank auc bs absolute value Brier score bs_p percentage Brier score based best observed BS bs_rnk rank BS auc_grnk character representation AUC rank bs_grnk character representation BS rank","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/TModC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare Classification Models — TModC","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/TModC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Classification Models — TModC","text":"","code":"d.pim <- SplitTrainTest(d.pima, p = 0.2) mdiab <- formula(diabetes ~ pregnant + glucose + pressure + triceps +                             insulin + mass + pedigree + age)  r.glm <- FitMod(mdiab, data=d.pim$train, fitfn=\"logit\") r.rp <- FitMod(mdiab, data=d.pim$train, fitfn=\"rpart\") mods <- list(glm=r.glm, rp=r.rp)  # the table with the measures (tm <- TModC(mods, ord=\"auc\")) #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #> Setting levels: control = neg, case = pos #> Setting direction: controls < cases #>        auc  auc_p  auc_rnk     bs   bs_p  bs_rnk  auc_grnk  bs_grnk #> rp   0.880  1.000        1  0.115  1.000       1        x.       x. #> glm  0.848  0.963        2  0.149  0.962       2        .x       .x  # plotting the ROC curves plot(tm, col=c(\"darkmagenta\", \"dodgerblue\"))"},{"path":"https://andrisignorell.github.io/ModTools/reference/Tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune Classificators  — Tune","title":"Tune Classificators  — Tune","text":"classifiers benefit adjusted parameters particular dataset others. However, often clear beginning parameters determined.  often remains grid search several parameters found combination. present function uses grid search approch decisive arguments (typically neural network, random forest classification tree). However restricted models, model fulfilling weak interface standards provided.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune Classificators  — Tune","text":"","code":"Tune(x, ..., testset = NULL, keepmod = TRUE)"},{"path":"https://andrisignorell.github.io/ModTools/reference/Tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune Classificators  — Tune","text":"x model tuned, best (necessarily) trained FitMod. ... list parameters, containing values used grid search. testset testset containing variables required model used calculating independently accuracy (normally subset original dataset). keepmod logical, defining fitted models returned result set. Default TRUE. (Keep eye RAM!)","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tune Classificators  — Tune","text":"function creates n-dimensional grid according given parameters calculates model combinations parameters. accuracy models calculated insample test set, one provided. makes sense avoid overfitting provide test set also evaluated. matrix combination values given parameters, sorted accuracy, either accuracy achieved test set insample accuracy returned.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune Classificators  — Tune","text":"matrix supplied parameters column \"acc\" \"test_acc\" (test set provided)","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Tune.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tune Classificators  — Tune","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/Tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tune Classificators  — Tune","text":"","code":"d.pim <- SplitTrainTest(d.pima, p = 0.2) mdiab <- formula(diabetes ~ pregnant + glucose + pressure + triceps                  + insulin + mass + pedigree + age) # \\donttest{ # tune a neural network for size and decay r.nn <- FitMod(mdiab, data=d.pim$train, fitfn=\"nnet\") #> Warning: nnet() did not (yet) converge, consider increase maxit (and set trace=TRUE)! (tu <- Tune(r.nn, size=12:17, decay = 10^(-4:-1), testset=d.pim$test)) #> Error in eval(expr, p): object 'd.pim' not found  # tune a random forest r.rf <- FitMod(mdiab, data=d.pim$train, fitfn=\"randomForest\") (tu <- Tune(r.rf, mtry=seq(2, 20, 2), testset=d.pim$test)) #> Error in eval(x$call): object 'mdiab' not found  # tune a SVM model r.svm <- FitMod(mdiab, data=d.pim$train, fitfn=\"svm\")  tu <- Tune(r.svm,            kernel=c(\"radial\", \"sigmoid\"),            cost=c(0.1,1,10,100,1000),            gamma=c(0.5,1,2,3,4), testset=d.pim$test) #> Error in eval(x$call): object 'mdiab' not found  # let's get some more quality measures tu$modpar$Sens <- sapply(tu$mods, Sens)     # Sensitivity #> Error in eval(expr, envir, enclos): object 'tu' not found tu$modpar$Spec <- sapply(tu$mods, Spec)     # Specificity #> Error in eval(expr, envir, enclos): object 'tu' not found Sort(tu$modpar, ord=\"test_acc\", decreasing=TRUE) #> Error in eval(expr, envir, enclos): object 'tu' not found # }"},{"path":"https://andrisignorell.github.io/ModTools/reference/VarImp.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Importance for Regression and Classification Models — VarImp","title":"Variable Importance for Regression and Classification Models — VarImp","text":"Variable importance expression desire know important variable within group predictors particular model. general well defined concept, say theoretically defined variable importance metric. Nevertheless, approaches established practice regression classification algorithms. present function provides interface calculating variable importance models produced FitMod, comprising linear models, classification trees, random forests, C5 trees neural networks. intention provide reasonably homogeneous output plot routines.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/VarImp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Importance for Regression and Classification Models — VarImp","text":"","code":"VarImp(x, scale = FALSE, sort = TRUE, ...)  # S3 method for class 'FitMod' VarImp(x, scale = FALSE, sort = TRUE, type=NULL, ...) # Default S3 method VarImp(x, scale = FALSE, sort = TRUE, ...)   # S3 method for class 'VarImp' plot(x, sort = TRUE, maxrows = NULL,            main = \"Variable importance\", ...)  # S3 method for class 'VarImp' print(x, digits = 3, ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/VarImp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Importance for Regression and Classification Models — VarImp","text":"x fitted model scale logical, importance values scaled 0 100? ... parameters pass specific VarImp methods sort name column, importance table ordered maxrows maximum number rows reported main main title plot type models one type available produce variable importance. Linear models accept one \"lmg\", \"pmvd\", \"first\", \"last\", \"betasq\", \"pratt\". digits number digits printing \"VarImp\" table","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/VarImp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Importance for Regression and Classification Models — VarImp","text":"data frame class c(\"VarImp.train\", \"data.frame\")    VarImp.train matrix models.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/VarImp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variable Importance for Regression and Classification Models — VarImp","text":"Linear Models:      linear models fine package relaimpo available CRAN containing several interesting approaches quantifying variable importance. See original documentation. rpart, Random Forest:      VarImp.rpart VarImp.randomForest wrappers around importance functions rpart randomForest packages, respectively. C5.0:      C5.0 measures predictor importance determining percentage training set samples fall terminal nodes split. example, predictor first split automatically importance measurement 100 percent since samples affected split. predictors may used frequently splits, terminal nodes cover handful training set samples, importance scores may close zero. strategy applied rule-based models boosted versions model. underlying function can also return number times predictor involved split using option metric=\"usage\". Neural Networks:      method used \"Garson weights\". SVM, GLM, Multinom:      implementations models far.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/VarImp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variable Importance for Regression and Classification Models — VarImp","text":"Andri Signorell <andri@signorell.net>","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/VarImp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variable Importance for Regression and Classification Models — VarImp","text":"Quinlan, J. (1992). Learning continuous classes. Proceedings 5th Australian Joint Conference Artificial Intelligence, 343-348.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/bioChemists.html","id":null,"dir":"Reference","previous_headings":"","what":"article production by graduate students in biochemistry Ph.D. programs — bioChemists","title":"article production by graduate students in biochemistry Ph.D. programs — bioChemists","text":"sample 915 biochemistry graduate students.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/bioChemists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"article production by graduate students in biochemistry Ph.D. programs — bioChemists","text":"","code":"data(bioChemists)"},{"path":"https://andrisignorell.github.io/ModTools/reference/bioChemists.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"article production by graduate students in biochemistry Ph.D. programs — bioChemists","text":"art count articles produced last 3 years Ph.D. fem factor indicating gender student, levels Men Women mar factor indicating marital status student, levels       Single Married kid5 number children aged 5 younger phd prestige Ph.D. department ment count articles produced Ph.D. mentor last 3 years","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/bioChemists.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"article production by graduate students in biochemistry Ph.D. programs — bioChemists","text":"Long, J. Scott. 1990.  origins sex differences   science. Social Forces. 68(3):1297-1316. Long, J. Scott. 1997.  Regression Models Categorical     Limited Dependent Variables. Thousand Oaks, California: Sage.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.glass.html","id":null,"dir":"Reference","previous_headings":"","what":"Measurements of Forensic Glass Fragments — d.glass","title":"Measurements of Forensic Glass Fragments — d.glass","text":"d.glass data frame 214 rows 10 columns. collected B. German fragments glass collected forensic work.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.glass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measurements of Forensic Glass Fragments — d.glass","text":"","code":"d.glass"},{"path":"https://andrisignorell.github.io/ModTools/reference/d.glass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Measurements of Forensic Glass Fragments — d.glass","text":"data frame contains following columns: RI refractive index; precisely refractive index 1.518xxxx. next 8 measurements percentages weight oxides. Na sodium. Mg manganese. Al aluminium. Si silicon. K potassium. Ca calcium. Ba barium. Fe iron. Type fragments originally classed seven types, one       absent dataset.  categories occur       window float glass (WinF: 70),       window non-float glass (WinNF: 76),       vehicle window glass (Veh: 17),       containers (Con: 13),       tableware (Tabl: 9)       vehicle headlamps (Head: 29).","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.glass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Measurements of Forensic Glass Fragments — d.glass","text":"Venables, W. N. Ripley, B. D. (2002)   Modern Applied Statistics S. Fourth edition.  Springer.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.pima.html","id":null,"dir":"Reference","previous_headings":"","what":"Diabetes survey on Pima Indians — d.pima","title":"Diabetes survey on Pima Indians — d.pima","text":"National Institute Diabetes Digestive Kidney Diseases conducted study 768 adult female Pima Indians living near Phoenix.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.pima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diabetes survey on Pima Indians — d.pima","text":"","code":"data(d.pima) data(d.pima2)"},{"path":"https://andrisignorell.github.io/ModTools/reference/d.pima.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diabetes survey on Pima Indians — d.pima","text":"dataset contains following variables pregnant Number times pregnant glucose Plasma glucose concentration 2 hours       oral glucose tolerance test diastolic Diastolic blood pressure (mm Hg) triceps Triceps skin fold thickness (mm) insulin 2-Hour serum insulin (mu U/ml) bmi Body mass index (weight kg/(height metres       squared)) diabetes Diabetes pedigree function age Age (years) test test whether patient shows signs       diabetes (coded 0 negative, 1 positive)","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.pima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diabetes survey on Pima Indians — d.pima","text":"d.pima2 dataset d.pima change, invalid 0-values replaced NAs.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.pima.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Diabetes survey on Pima Indians — d.pima","text":"dataset borrowed Julian Faraway's package:faraway: Functions datasets books Julian Faraway, 2015","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/d.pima.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Diabetes survey on Pima Indians — d.pima","text":"data may obtained package MASS.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/predict.zeroinfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for zeroinfl Objects — predict.zeroinfl","title":"Methods for zeroinfl Objects — predict.zeroinfl","text":"Methods extracting information fitted zero-inflated   regression model objects class \"zeroinfl\".","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/predict.zeroinfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for zeroinfl Objects — predict.zeroinfl","text":"","code":"# S3 method for class 'zeroinfl' predict(object, newdata,   type = c(\"response\", \"prob\", \"count\", \"zero\"), na.action = na.pass,   at = NULL, ...) # S3 method for class 'zeroinfl' residuals(object, type = c(\"pearson\", \"response\"), ...)  # S3 method for class 'zeroinfl' coef(object, model = c(\"full\", \"count\", \"zero\"), ...) # S3 method for class 'zeroinfl' vcov(object, model = c(\"full\", \"count\", \"zero\"), ...)  # S3 method for class 'zeroinfl' terms(x, model = c(\"count\", \"zero\"), ...) # S3 method for class 'zeroinfl' model.matrix(object, model = c(\"count\", \"zero\"), ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/predict.zeroinfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for zeroinfl Objects — predict.zeroinfl","text":"object, x object class \"zeroinfl\" returned     zeroinfl. newdata optionally, data frame look variables     predict. omitted, original observations used. type character specifying type predictions residuals,     respectively. details see . na.action function determining done missing values     newdata. default predict NA. optionally, type = \"prob\", numeric vector     probabilities evaluated. default 0:max(y) used     y original observed response. model character specifying component model     terms model matrix extracted. ... currently used.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/predict.zeroinfl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for zeroinfl Objects — predict.zeroinfl","text":"set standard extractor functions fitted model objects available   objects class \"zeroinfl\", including methods generic functions   print summary print estimated   coefficients along information. summary particular   supplies partial Wald tests based coefficients covariance matrix   (estimated Hessian numerical optimization log-likelihood).   usual, summary method returns object class \"summary.zeroinfl\"   containing relevant summary statistics can subsequently printed   using associated print method. methods coef vcov default   return single vector coefficients associated covariance matrix,   respectively, .e., coefficients concatenated. setting model   argument, estimates corresponding model components can extracted. fitted predict methods can   compute fitted responses. latter additionally provides predicted density   (.e., probabilities observed counts), predicted mean count   component (without zero inflation) predicted probability zero   component. residuals method can compute   raw residuals (observed - fitted) Pearson residuals (raw residuals scaled   square root variance function). terms model.matrix extractors can   used extract relevant information either component model. logLik method provided, hence AIC   can called compute information criteria.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/predict.zeroinfl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods for zeroinfl Objects — predict.zeroinfl","text":"Achim Zeileis <Achim.Zeileis@R-project.org>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/predict.zeroinfl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for zeroinfl Objects — predict.zeroinfl","text":"","code":"data(\"bioChemists\", package = \"ModTools\")  fm_zip <- zeroinfl(art ~ ., data = bioChemists) plot(residuals(fm_zip) ~ fitted(fm_zip))   coef(fm_zip) #> count_(Intercept)    count_femWomen  count_marMarried        count_kid5  #>       0.640838981      -0.209144354       0.103750213      -0.143320239  #>         count_phd        count_ment  zero_(Intercept)     zero_femWomen  #>      -0.006166143       0.018097723      -0.577060250       0.109751512  #>   zero_marMarried         zero_kid5          zero_phd         zero_ment  #>      -0.354017556       0.217095103       0.001274820      -0.134114310  coef(fm_zip, model = \"count\") #>  (Intercept)     femWomen   marMarried         kid5          phd         ment  #>  0.640838981 -0.209144354  0.103750213 -0.143320239 -0.006166143  0.018097723   summary(fm_zip) #>  #> Call: #> zeroinfl(formula = art ~ ., data = bioChemists) #>  #> Pearson residuals: #>     Min      1Q  Median      3Q     Max  #> -2.3253 -0.8652 -0.2826  0.5404  7.2976  #>  #> Count model coefficients (poisson with log link): #>              Estimate Std. Error z value Pr(>|z|)     #> (Intercept)  0.640839   0.121307   5.283 1.27e-07 *** #> femWomen    -0.209144   0.063405  -3.299 0.000972 *** #> marMarried   0.103750   0.071111   1.459 0.144567     #> kid5        -0.143320   0.047429  -3.022 0.002513 **  #> phd         -0.006166   0.031008  -0.199 0.842376     #> ment         0.018098   0.002294   7.888 3.07e-15 *** #>  #> Zero-inflation model coefficients (binomial with logit link): #>              Estimate Std. Error z value Pr(>|z|)    #> (Intercept) -0.577060   0.509386  -1.133  0.25728    #> femWomen     0.109752   0.280082   0.392  0.69517    #> marMarried  -0.354018   0.317611  -1.115  0.26501    #> kid5         0.217095   0.196483   1.105  0.26920    #> phd          0.001275   0.145263   0.009  0.99300    #> ment        -0.134114   0.045243  -2.964  0.00303 ** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  #>  #> Number of iterations in BFGS optimization: 19  #> Log-likelihood: -1605 on 12 Df logLik(fm_zip) #> 'log Lik.' -1604.773 (df=12)"},{"path":"https://andrisignorell.github.io/ModTools/reference/tobit.html","id":null,"dir":"Reference","previous_headings":"","what":"Tobit Regression — Tobit","title":"Tobit Regression — Tobit","text":"Fitting testing Tobit regression models censored data.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/tobit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tobit Regression — Tobit","text":"","code":"Tobit(formula, left = 0, right = Inf, dist = \"gaussian\",       subset = NULL, data = list(), ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/tobit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tobit Regression — Tobit","text":"formula symbolic description regression model type     y ~ x1 + x2 + .... left left limit censored dependent variable y.     set -Inf, y assumed left-censored. right right limit censored dependent variable y.     set Inf, default, y assumed right-censored. dist assumed distribution dependent variable y.     passed survreg, see respective man page     details. subset specification rows used. data data frame containing variables model. ... arguments passed survreg.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/tobit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tobit Regression — Tobit","text":"function Tobit alias AER function tobit (Achim Zeileis <Achim.Zeileis@R-project.org>).   details can found .","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/tobit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tobit Regression — Tobit","text":"Andri Signorell","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/tobit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tobit Regression — Tobit","text":"object class \"Tobit\" inheriting class \"survreg\".","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/tobit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tobit Regression — Tobit","text":"","code":"# still to do"},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","title":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","text":"Various parameters control fitting zero-inflated regression models   using zeroinfl.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","text":"","code":"zeroinfl.control(method = \"BFGS\", maxit = 10000, trace = FALSE,   EM = FALSE, start = NULL, ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","text":"method characters string specifying method argument     passed optim. maxit integer specifying maxit argument (maximal number     iterations) passed optim. trace logical integer controlling whether tracing information     progress optimization produced (passed optim). EM logical. starting values estimated EM (expectation     maximization) algorithm? See details. start optional list elements \"count\" \"zero\"     (potentially \"theta\") containing coefficients corresponding component. ... arguments passed optim.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.control.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","text":"parameters zeroinfl estimated maximum likelihood   using optim control options set zeroinfl.control.   arguments passed directly optim, trace also   used within zeroinfl EM/start control choice   starting values calling optim. Starting values can supplied, estimated EM (expectation maximization)   algorithm, glm.fit (default). Standard errors   derived numerically using   Hessian matrix returned optim. supply starting   values, start list elements \"count\" \"zero\"   potentially \"theta\" (negative binomial components ) containing   starting values coefficients corresponding component   model.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","text":"list arguments specified.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.control.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","text":"Achim Zeileis <Achim.Zeileis@R-project.org>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control Parameters for Zero-inflated Count Data Regression — zeroinfl.control","text":"","code":"if (FALSE) { # \\dontrun{ data(\"bioChemists\", package = \"pscl\")  ## default start values fm1 <- zeroinfl(art ~ ., data = bioChemists)  ## use EM algorithm for start values fm2 <- zeroinfl(art ~ ., data = bioChemists, EM = TRUE)  ## user-supplied start values fm3 <- zeroinfl(art ~ ., data = bioChemists,   start = list(count = c(0.7, -0.2, 0.1, -0.2, 0, 0), zero = -1.7)) } # }"},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero-inflated Count Data Regression — zeroinfl","title":"Zero-inflated Count Data Regression — zeroinfl","text":"Fit zero-inflated regression models count data via maximum likelihood.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-inflated Count Data Regression — zeroinfl","text":"","code":"zeroinfl(formula, data, subset, na.action, weights, offset,   dist = c(\"poisson\", \"negbin\", \"geometric\"),   link = c(\"logit\", \"probit\", \"cloglog\", \"cauchit\", \"log\"),   control = zeroinfl.control(...),   model = TRUE, y = TRUE, x = FALSE, ...)"},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-inflated Count Data Regression — zeroinfl","text":"formula symbolic description model, see details. data, subset, na.action arguments controlling formula processing     via model.frame. weights optional numeric vector weights. offset optional numeric vector priori known component     included linear predictor count model. See     information offsets. dist character specification count model family (log link     always used). link character specification link function binary     zero-inflation model (binomial family always used). control list control arguments specified via     zeroinfl.control. model, y, x logicals. TRUE corresponding components     fit (model frame, response, model matrix) returned. ... arguments passed zeroinfl.control     default setup.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Zero-inflated Count Data Regression — zeroinfl","text":"Zero-inflated count models two-component mixture models   combining point mass zero proper count distribution.   Thus, two sources zeros: zeros may come   point mass count component. Usually count model   Poisson negative binomial regression (log link).   geometric distribution special case negative binomial   size parameter equal 1.   modeling unobserved state (zero vs. count), binary model used   captures probability zero inflation.   simplest case intercept potentially containing regressors.   zero-inflation model, binomial model different links can   used, typically logit probit. formula can used specify components model:   formula type y ~ x1 + x2 supplied,   regressors employed components. equivalent   y ~ x1 + x2 | x1 + x2. course, different set regressors   specified count zero-inflation component, e.g.,   y ~ x1 + x2 | z1 + z2 + z3 giving count data model y ~ x1 + x2   conditional (|) zero-inflation model y ~ z1 + z2 + z3.   simple inflation model zero counts   probability belonging zero component can specified formula   y ~ x1 + x2 | 1. Offsets can specified components model pertaining count   zero-inflation model: y ~ x1 + offset(x2) | z1 + z2 + offset(z3),   x2 used offset (.e., coefficient fixed 1)   count component z3 analogously zero-inflation component. rule   stated y ~ x1 + offset(x2) expanded   y ~ x1 + offset(x2) | x1 + offset(x2). Instead using   offset() wrapper within formula, offset argument   can also employed sets offset count model. Thus,   formula = y ~ x1 offset = x2 equivalent   formula = y ~ x1 + offset(x2) | x1. parameters estimated maximum likelihood using optim,   control options set zeroinfl.control.   Starting values can supplied, estimated EM (expectation maximization)   algorithm, glm.fit (default). Standard errors   derived numerically using Hessian matrix returned optim.   See zeroinfl.control details. returned fitted model object class \"zeroinfl\" similar   fitted \"glm\" objects. elements \"coefficients\"   \"terms\" list returned elements zero count component,   respectively. details see . set standard extractor functions fitted model objects available   objects class \"zeroinfl\", including methods generic functions   print, summary, coef,   vcov, logLik, residuals,   predict, fitted, terms,   model.matrix. See predict.zeroinfl details   methods.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero-inflated Count Data Regression — zeroinfl","text":"object class \"zeroinfl\", .e., list components including coefficients list elements \"count\" \"zero\"     containing coefficients respective models, residuals vector raw residuals (observed - fitted), fitted.values vector fitted means, optim list output optim call     minimizing negative log-likelihood, control control arguments passed optim call, start starting values parameters passed optim call, weights case weights used, offset list elements \"count\" \"zero\"     containing offset vectors () respective models, n number observations (weights > 0), df.null residual degrees freedom null model (= n - 2), df.residual residual degrees freedom fitted model, terms list elements \"count\", \"zero\"     \"full\" containing terms objects respective models, theta estimate additional \\(\\theta\\) parameter     negative binomial model (negative binomial regression used), SE.logtheta standard error \\(\\log(\\theta)\\), loglik log-likelihood fitted model, vcov covariance matrix coefficients model (derived     Hessian optim output), dist character string describing count distribution used, link character string describing link zero-inflation model, linkinv inverse link function corresponding link, converged logical indicating successful convergence optim, call original function call, formula original formula, levels levels categorical regressors, contrasts list elements \"count\" \"zero\"     containing contrasts corresponding levels     respective models, model full model frame (model = TRUE), y response count vector (y = TRUE), x list elements \"count\" \"zero\"     containing model matrices respective models     (x = TRUE),","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Zero-inflated Count Data Regression — zeroinfl","text":"Cameron, . Colin Pravin K. Trevedi. 1998. Regression Analysis Count Data. New York: Cambridge University Press. Cameron, . Colin Pravin K. Trivedi. 2005. Microeconometrics: Methods Applications. Cambridge: Cambridge University Press. Lambert, Diane. 1992. “Zero-Inflated Poisson Regression, Application Defects Manufacturing.” Technometrics. 34(1):1-14 Zeileis, Achim, Christian Kleiber Simon Jackman 2008. “Regression Models Count Data R.” Journal Statistical Software, 27(8). URL https://www.jstatsoft.org/v27/i08/.","code":""},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Zero-inflated Count Data Regression — zeroinfl","text":"Achim Zeileis <Achim.Zeileis@R-project.org>","code":""},{"path":[]},{"path":"https://andrisignorell.github.io/ModTools/reference/zeroinfl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero-inflated Count Data Regression — zeroinfl","text":"","code":"## data data(\"bioChemists\", package = \"ModTools\")  ## without inflation ## (\"art ~ .\" is \"art ~ fem + mar + kid5 + phd + ment\") fm_pois <- glm(art ~ ., data = bioChemists, family = poisson) fm_qpois <- glm(art ~ ., data = bioChemists, family = quasipoisson) fm_nb <- MASS::glm.nb(art ~ ., data = bioChemists)  ## with simple inflation (no regressors for zero component) fm_zip <- zeroinfl(art ~ . | 1, data = bioChemists) fm_zinb <- zeroinfl(art ~ . | 1, data = bioChemists, dist = \"negbin\")  ## inflation with regressors ## (\"art ~ . | .\" is \"art ~ fem + mar + kid5 + phd + ment | fem + mar + kid5 + phd + ment\") fm_zip2 <- zeroinfl(art ~ . | ., data = bioChemists) fm_zinb2 <- zeroinfl(art ~ . | ., data = bioChemists, dist = \"negbin\")"}]
